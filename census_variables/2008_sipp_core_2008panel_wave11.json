{
  "variables": {
    "for": {
      "label": "Census API FIPS 'for' clause",
      "concept": "Census API Geography Specification",
      "predicateType": "fips-for",
      "group": "N/A",
      "limit": 0,
      "predicateOnly": true
    },
    "in": {
      "label": "Census API FIPS 'in' clause",
      "concept": "Census API Geography Specification",
      "predicateType": "fips-in",
      "group": "N/A",
      "limit": 0,
      "predicateOnly": true
    },
    "ucgid": {
      "label": "Uniform Census Geography Identifier clause",
      "concept": "Census API Geography Specification",
      "predicateType": "ucgid",
      "group": "N/A",
      "limit": 0,
      "predicateOnly": true
    },
    "EROLOVR2": {
      "label": "GI: Plan to roll over money into IRA/other retirement",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "EROLOVR1": {
      "label": "GI: Money rolled over into IRA/other type of retirement",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "1": "Yes",
          "-1": "Not in Universe"
        }
      }
    },
    "ATRANTP": {
      "label": "GI: Allocation flag for ETRANTP1-ETRANTP5",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "0": "Not imputed"
        }
      }
    },
    "A51AMT": {
      "label": "GI: Allocation flag for T51AMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "ACKOINT": {
      "label": "AS: Allocation flag for TCKOINT.",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed",
          "6": "Derived from range based values"
        }
      }
    },
    "ER61": {
      "label": "GI: Receipt of food assistance (ISS Code 61)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "EBFLAG": {
      "label": "LF: Flag indicating worker with unknown job dates",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not applicable",
          "1": "Yes"
        }
      }
    },
    "ER62": {
      "label": "GI: Receipt of clothing assistance (ISS Code 62)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "2": "No",
          "1": "Yes"
        }
      }
    },
    "ER64": {
      "label": "GI: Receipt of short-term assistance (ISS Code 64)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "ACLOTHTP": {
      "label": "GI: Allocation flag for ECLOTHTP",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "ARENROLL": {
      "label": "ED: Allocation flag for RENROLL",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed"
        }
      }
    },
    "AHISPSE": {
      "label": "HI: Allocation flag for EHISPSE",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "UAF1": {
      "label": "AF: UNEDITED - From August 1990 to present",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "7": "Refuse",
          "1": "August 1990 to the present (including Persian Gulf War)",
          "6": "Don't know",
          "0": "Not answered"
        }
      }
    },
    "RCUTYP21": {
      "label": "PE: General Assistance coverage flag",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No, not covered",
          "1": "Yes, covered"
        }
      }
    },
    "RCUTYP20": {
      "label": "PE: Public assistance payments program coverage flag",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No, not covered",
          "1": "Yes, covered"
        }
      }
    },
    "AFRERDBK": {
      "label": "HH: Allocation flag for EFRERDBK",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed"
        }
      }
    },
    "ASJNTDIV": {
      "label": "AS: Allocation flag for TSJNTDIV",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "6": "Derived from range based values (from wave 5+)",
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation"
        }
      }
    },
    "RSS1": {
      "label": "GI: Reason for stopping SSI the first time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "7": "Other, specify",
          "2": "Became ineleigble because of family changes",
          "3": "Still eligible but could not/chose not to collect",
          "4": "Became ineligible because program requirements were not met",
          "6": "The money is not worth it",
          "5": "Eligibility ran out because of time limits",
          "1": "Became ineligible because of increased income",
          "-1": "Not in Universe"
        }
      }
    },
    "RCUTYP27": {
      "label": "PE: food Stamp coverage flag",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes, covered",
          "2": "No, not covered"
        }
      }
    },
    "TSPRPINC": {
      "label": "SF: Total related subfamily property inc for this month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "-1500000",
            "max": "1500000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "UAF5": {
      "label": "AF: UNEDITED - Other service (All other periods)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "5": "Some other time period (other than those in UAF1-UAF4)",
          "0": "Not answered"
        }
      }
    },
    "UAF4": {
      "label": "AF: UNEDITED - From August 1964 - April 1975",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not answered",
          "4": "August 1964 to April 1975 (Vietnam Era)"
        }
      }
    },
    "RCUTYP25": {
      "label": "PE: WIC coverage flag",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No, not covered",
          "1": "Yes, covered"
        }
      }
    },
    "RCUTYP24": {
      "label": "PE: Other welfare coverage flag",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes, covered",
          "2": "No, not covered"
        }
      }
    },
    "UAF3": {
      "label": "AF: UNEDITED - From May 1975 to August 1980",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not answered",
          "3": "May 1975 to August 1980"
        }
      }
    },
    "UAF2": {
      "label": "AF: UNEDITED - From September 1980 to July 1990",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not answered",
          "2": "September 1980 to July 1990"
        }
      }
    },
    "RCUTYP23": {
      "label": "PE: Foster Child Care coverage flag",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No, not covered",
          "1": "Yes, covered"
        }
      }
    },
    "T29AMT": {
      "label": "GI: Amount of alimony payments (ISS Code 29)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "16000",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "EMRTOWN": {
      "label": "AS: Mortgages held in own name",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "AHIOLDKD": {
      "label": "HI: Allocation flag for EHIOLDKD",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "ABDJTINT": {
      "label": "AS: Allocation flag for TBDJTINT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "6": "Derived from range based values"
        }
      }
    },
    "ER51": {
      "label": "GI: Receipt of money from relatives or friends",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "1": "Yes",
          "-1": "Not in Universe"
        }
      }
    },
    "ER52": {
      "label": "GI: Receipt of lump sum payments (ISS Code 52)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "A04AMT": {
      "label": "GI: Allocation flag for T04AMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation"
        }
      }
    },
    "ER55": {
      "label": "GI: Receipt of incidental or casual earnings",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "2": "No",
          "1": "Yes"
        }
      }
    },
    "ER56": {
      "label": "GI: Receipt of miscellaneous cash income (ISS Code 56)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "2": "No",
          "1": "Yes"
        }
      }
    },
    "EABRE": {
      "label": "LF: Main reason for being absent without pay",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "On layoff (temporary or indefinite)",
          "3": "Own injury",
          "8": "Bad weather",
          "11": "Participated in a job-sharing arrangement",
          "4": "Own illness/medical problems",
          "6": "Taking care of children",
          "7": "On vacation/personal days",
          "9": "Labor Dispute",
          "12": "Other",
          "5": "Pregnancy/childbirth",
          "-1": "Not in Universe",
          "2": "Slack work or business conditions",
          "10": "New job to begin within 30 days"
        }
      }
    },
    "T64AMT": {
      "label": "GI: Amount of short-term cash assistance",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "8000",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "TPMSUM1": {
      "label": "JB: Earnings from job received in this month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "66666",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "EJNTRNT": {
      "label": "AS: Rent from property jointly owned with spouse",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not in Universe",
          "2": "No"
        }
      }
    },
    "TPMSUM2": {
      "label": "JB: Earnings from job received in this month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "66666",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "EEGYAST": {
      "label": "HH: Receipt of energy assistance",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "2": "No",
          "1": "Yes"
        }
      }
    },
    "T52AMT": {
      "label": "GI: Amount of lump sum payments (ISS Code 52)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "26000",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "A38AMT": {
      "label": "GI: Allocation flag for T38AMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed"
        }
      }
    },
    "TSFDSTP": {
      "label": "SF: Total related subfamily food stamps income",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "150000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "ECDOAST": {
      "label": "AS: Solely owned certificates of deposit",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "EUNION1": {
      "label": "JB: Union/employee-association membership",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not in Universe",
          "2": "No"
        }
      }
    },
    "A75AMT": {
      "label": "GI: Allocation flag for T75AMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed",
          "2": "Cold deck imputation"
        }
      }
    },
    "EPROPB2": {
      "label": "BS: Type of proprietorship",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Alone",
          "-1": "Not in Universe",
          "2": "Partnership"
        }
      }
    },
    "AFREELUN": {
      "label": "HH: Allocation flag for EFREELUN",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation"
        }
      }
    },
    "RSS2": {
      "label": "GI: Reason for stopping SSI the second time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "4": "Became ineligible because program requirements were not met",
          "5": "Eligibility ran out because of time limits",
          "2": "Became ineleigble because of family changes",
          "1": "Became ineligible because of increased income",
          "6": "The money is not worth it",
          "3": "Still eligible but could not/chose not to collect",
          "7": "Other, specify"
        }
      }
    },
    "RFOWNKID": {
      "label": "FA: Number of own children in family",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "0",
            "max": "30",
            "description": "Number of children"
          }
        ]
      }
    },
    "ER75": {
      "label": "GI: Receipt of other government income (ISS Code 75)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not in Universe",
          "2": "No"
        }
      }
    },
    "T30AMT": {
      "label": "GI: Amount of pension from a company or union",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "15200",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "AWKLKG": {
      "label": "LF: Allocation flag for RMWKLKG",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "3": "Logical imputation(derivation)",
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation(hot deck)"
        }
      }
    },
    "EHIMTH": {
      "label": "HI: Health ins cover this mnth(not Medicare or Medicaid)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No, not covered",
          "1": "Yes, covered"
        }
      }
    },
    "EPROPB1": {
      "label": "BS: Type of proprietorship",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Alone",
          "2": "Partnership",
          "-1": "Not in Universe"
        }
      }
    },
    "AOINCB2": {
      "label": "BS: Allocation flag for EOINCB2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "3": "Logical imputation(derivation)",
          "1": "Statistical imputation(hot deck)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "ALKWRK": {
      "label": "LF: Allocation flag for ELKWRK",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "3": "Logical imputation(derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation(hot deck)",
          "2": "Cold deck imputation"
        }
      }
    },
    "EUNION2": {
      "label": "JB: Union/employee-association membership",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "AEMPLOC1": {
      "label": "JB: Allocation flag for EEMPLOC1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation(derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "1": "Statistical imputation(hot deck)"
        }
      }
    },
    "AEMPLOC2": {
      "label": "JB: Allocation flag for EEMPLOC2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "1": "Statistical imputation(hot deck)",
          "3": "Logical imputation(derivation)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "EBMNTH": {
      "label": "PE: Month of birth",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "1",
            "max": "12",
            "description": "Calendar month"
          }
        ]
      }
    },
    "ECASHSC1": {
      "label": "GI: Source of cash assistance ... received: govt agency",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "1": "Yes",
          "-1": "Not in Universe"
        }
      }
    },
    "ECASHSC3": {
      "label": "GI: Source of cash assist ... received: family/friends",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "ECASHSC2": {
      "label": "GI: Source of cash assist ... received: com/rel charity",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "ECASHSC4": {
      "label": "GI: Source of cash assist ... received: someplace else",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "TPTRNINC": {
      "label": "PE: Total means-tested cash transfer for the reference month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "1500000",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "RWKESR4": {
      "label": "LF: Employment Status Recode for Week 4",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "5": "No job - not looking for work and not on layoff",
          "4": "No job - looking for work or on layoff",
          "1": "With job - working",
          "-1": "Not applicable for week 18",
          "2": "With job - not on layoff, absent without pay",
          "3": "With job - on layoff, absent without pay"
        }
      }
    },
    "RWKESR5": {
      "label": "LF: Employment Status Recode for Week 5",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "With job - working",
          "4": "No job - looking for work or on layoff",
          "5": "No job - not looking for work and not on layoff",
          "2": "With job - not on layoff, absent without pay",
          "3": "With job - on layoff, absent without pay",
          "-1": "Not applicable for week 18"
        }
      }
    },
    "RWKESR2": {
      "label": "LF: Employment Status Recode for Week 2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "5": "No job - not looking for work and not on layoff",
          "-1": "Not applicable for week 18",
          "3": "With job - on layoff, absent without pay",
          "2": "With job - not on layoff, absent without pay",
          "1": "With job - working",
          "4": "No job - looking for work or on layoff"
        }
      }
    },
    "RWKESR3": {
      "label": "LF: Employment Status Recode for Week 3",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "No job - looking for work or on layoff",
          "2": "With job - not on layoff, absent without pay",
          "3": "With job - on layoff, absent without pay",
          "-1": "Not applicable for week 18",
          "1": "With job - working",
          "5": "No job - not looking for work and not on layoff"
        }
      }
    },
    "ECFLAG": {
      "label": "LF: Flag indicating an other-work-arrangement worker (contingent worker)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not applicable",
          "1": "Yes"
        }
      }
    },
    "EPPPNUM": {
      "label": "PE: Person number",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "101",
            "max": "1699",
            "description": "Person Number"
          }
        ]
      }
    },
    "RWKESR1": {
      "label": "LF: Employment Status Recode for Week 1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "With job - on layoff, absent without pay",
          "5": "No job - not looking for work and not on layoff",
          "2": "With job - not on layoff, absent without pay",
          "1": "With job - working",
          "-1": "Not applicable for week 18",
          "4": "No job - looking for work or on layoff"
        }
      }
    },
    "TBYEAR": {
      "label": "PE: Year of birth",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "1924",
            "max": "2012",
            "description": "Calendar year"
          }
        ]
      }
    },
    "RSB2R2": {
      "label": "GI: 2nd reason applying for SSI the 2nd time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Over 65",
          "-1": "Not in Universe",
          "4": "Other, specify",
          "2": "Became disabled/blind"
        }
      }
    },
    "RSB2R1": {
      "label": "GI: 1st reason applying for SSI the 2nd time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "2": "Became disabled/blind",
          "3": "Over 65",
          "4": "Other, specify"
        }
      }
    },
    "ABDOAST": {
      "label": "AS: Allocation flag for EBDOAST",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "TSLUMPSM": {
      "label": "SF: Related subfamily retirement lump sum payments",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "15000000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "ASOWNADV": {
      "label": "AS: Allocation flag for TSOWNADV",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "6": "Derived from range based values (from wave 5+)"
        }
      }
    },
    "WHFNWGT": {
      "label": "WW: Household weight",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "is-weight": true,
      "values": {
        "range": [
          {
            "min": "0.0",
            "max": "99999.9999",
            "description": "Weight"
          }
        ]
      }
    },
    "A61AMT": {
      "label": "GI: Allocation flag for T61AMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "EWRKEXP1": {
      "label": "GI: Already tell about this work/job",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "RPENSRSN": {
      "label": "GI: Reason for pension from company or union",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Survivor",
          "-1": "Not in Universe",
          "8": "No payment received",
          "6": "Retirement and survivor",
          "5": "Disability and Survivor",
          "7": "Disability, retirement, and survivor",
          "4": "Disability and retirement",
          "1": "Disability",
          "2": "Retirement"
        }
      }
    },
    "LGTKEY": {
      "label": "PE: Person longitudinal key",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0
    },
    "TFSOCSEC": {
      "label": "FA: Total Family Social Security Income Recode",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "0",
            "max": "150000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "A14AMT": {
      "label": "GI: Allocation flag for T14AMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation"
        }
      }
    },
    "RINSRSN": {
      "label": "GI: Reason for payment from own insurance policy",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Disability",
          "-1": "Not in Universe",
          "8": "No payment received"
        }
      }
    },
    "THAFDC": {
      "label": "HH: Total household public assistance payments",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "0",
            "max": "150000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "ESTSSI": {
      "label": "GI: Receipt of State administered SSI (ISS Code 4)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "UEVRDIV": {
      "label": "PE: UNEDITED VARIABLE - Has ... ever been divorced?",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "0": "Not answered",
          "2": "No",
          "6": "Don't know",
          "7": "Refused"
        }
      }
    },
    "ABKFSYN": {
      "label": "PE: Allocation flag for EBKFSYN",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "ERESNSS1": {
      "label": "GI: First reason for receipt of Social Security",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Retired",
          "2": "Disabled",
          "-1": "Not in Universe",
          "4": "Spouse or dependent child",
          "3": "Widowed or surviving child",
          "5": "Some other reason"
        }
      }
    },
    "EPPINTVW": {
      "label": "PE: Person's interview status",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Interview (self)",
          "4": "Noninterview - pseudo Type Z.  Left sample during the reference period",
          "5": "Children under 15 during reference period",
          "3": "Noninterview - Type Z",
          "2": "Interview (proxy)"
        }
      }
    },
    "ERESNSS2": {
      "label": "GI: Second reason for receipt of Social Security",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Disabled",
          "4": "Spouse or dependent child",
          "5": "Some other reason",
          "1": "Retired",
          "-1": "Not in Universe",
          "0": "Persons providing only one reason",
          "3": "Widowed or surviving child"
        }
      }
    },
    "ABORNUS": {
      "label": "PE: Allocation flag for EBORNUS",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "RCUTYP58": {
      "label": "PE: Health ins coverage flag (not Medicare or Medicaid)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No, not covered",
          "1": "Yes, covered"
        }
      }
    },
    "RCUTYP57": {
      "label": "PE: Medicaid coverage flag",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes, covered",
          "2": "No, not covered"
        }
      }
    },
    "TDIVINC": {
      "label": "AS: Total amount of all dividend income",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "99999",
            "description": "Dollars"
          }
        ]
      }
    },
    "EHHNUMPP": {
      "label": "HH: Total number of persons in this household in this month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "1",
            "max": "30",
            "description": "Number of persons in household"
          }
        ]
      }
    },
    "ANATCIT": {
      "label": "PE: Allocation flag for ENATCIT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "EHRSBS2": {
      "label": "BS: Usual hours worked per week",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "-8": "Hours vary"
        },
        "range": [
          {
            "min": "1",
            "max": "99",
            "description": "Hours"
          }
        ]
      }
    },
    "EHRSBS1": {
      "label": "BS: Usual hours worked per week",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "-8": "Hours vary"
        },
        "range": [
          {
            "min": "1",
            "max": "99",
            "description": "Hours"
          }
        ]
      }
    },
    "AMOONLIT": {
      "label": "LF: Allocation flag for EMOONLIT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "1": "Statistical imputation(hot deck)",
          "3": "Logical imputation(derivation)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "T60AMTT": {
      "label": "GI: Amount of transportation assistance-subway tokens",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "340",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "APAYHR1": {
      "label": "JB: Allocation flag for EPAYHR1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "1": "Statistical imputation(hot deck)",
          "3": "Logical imputation(derivation)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "APAYHR2": {
      "label": "JB: Allocation flag for EPAYHR2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "1": "Statistical imputation(hot deck)",
          "3": "Logical imputation(derivation)",
          "2": "Cold deck imputation"
        }
      }
    },
    "TSFEARN": {
      "label": "SF: Total related subfamily earned income for this month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "-1500000",
            "max": "1500000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "T60AMTG": {
      "label": "GI: Amount of transportation assistance-gas vouchers",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "1200",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "ECDJT": {
      "label": "AS: Jointly owned certificates of deposit",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "1": "Yes",
          "-1": "Not in Universe"
        }
      }
    },
    "T42AMT": {
      "label": "GI: Amount of draw from an IRA/KEOGH/401k or Thrift Plan",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "40000",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "ESANYCHK": {
      "label": "AS: Dividend check for jointly or solely held stocks",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "EWRKEXP2": {
      "label": "GI: Worked to receive cash assistance",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "1": "Yes",
          "-1": "Not in Universe"
        }
      }
    },
    "AGVOAST": {
      "label": "AS: Allocation flag for EGVOAST",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "EWRKEXP3": {
      "label": "GI: Worked in a work experience program",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Required to do work experience program",
          "3": "Both required and chose",
          "2": "Chose to do work experience program",
          "-1": "Not in Universe"
        }
      }
    },
    "AAGE": {
      "label": "PE: Allocation flag for TAGE",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "APNSPOUS": {
      "label": "PE: Allocation flag for EPNSPOUS",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "RFNSSR": {
      "label": "FA: Number of Social Security recipients in family",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "0",
            "max": "30",
            "description": "Number of recipients"
          }
        ]
      }
    },
    "T20AMT": {
      "label": "GI: Amount of public assistance payments (ISS Code 20)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "99999",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "ESPEAK": {
      "label": "HH: Speak language other than English",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "TCKOINT": {
      "label": "AS: Amount of monthly interest from own checking account",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "280",
            "description": "Dollars"
          }
        ]
      }
    },
    "THINOYR": {
      "label": "HI: In what year was...last not covered by health ins?",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "1954",
            "max": "2030",
            "description": "Last year not covered"
          }
        ]
      }
    },
    "EEGYAMT": {
      "label": "HH: Amount of energy assistance",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "99999",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "AUNION2": {
      "label": "JB: Allocation flag for EUNION2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "3": "Logical imputation(derivation)",
          "1": "Statistical imputation(hot deck)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "AUNION1": {
      "label": "JB: Allocation flag for EUNION1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "3": "Logical imputation(derivation)",
          "1": "Statistical imputation(hot deck)"
        }
      }
    },
    "EPDJBTHN": {
      "label": "LF: Paid job during the reference period",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "1": "Yes",
          "-1": "Not in Universe"
        }
      }
    },
    "A36AMT": {
      "label": "GI: Allocation flag for T36AMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "ROS2": {
      "label": "GI: Reason for stopping Other Welfare the second time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Became ineligible because of family changes",
          "-1": "Not in Universe",
          "7": "Other, specify",
          "3": "Still eligible but could not/chose not to collect",
          "4": "Became ineligible because program requirements were not met",
          "1": "Became ineligible because of increased income",
          "5": "Eligibility ran out because of time limits",
          "6": "The money is not worth it"
        }
      }
    },
    "ROS1": {
      "label": "GI: Reason for stopping Other Welfare the first time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Became ineligible because of increased income",
          "3": "Still eligible but could not/chose not to collect",
          "4": "Became ineligible because program requirements were not met",
          "5": "Eligibility ran out because of time limits",
          "6": "The money is not worth it",
          "2": "Became ineligible because of family changes",
          "-1": "Not in Universe",
          "7": "Other, specify"
        }
      }
    },
    "AFOODSCE": {
      "label": "GI: Allocation flag for EFOODSC1-EFOODSC4",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "RSTATRSN": {
      "label": "GI: Reason for receipt of state government pension",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "7": "Disability, retirement, and survivor",
          "5": "Disability and Survivor",
          "6": "Retirement and survivor",
          "3": "Survivor",
          "4": "Disability and retirement",
          "8": "No payment received",
          "1": "Disability",
          "2": "Retirement",
          "-1": "Not in Universe"
        }
      }
    },
    "THTOTINC": {
      "label": "HH: Total household income",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "-1500000",
            "max": "1500000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "ARACE": {
      "label": "PE: Allocation flag for ERACE",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed"
        }
      }
    },
    "T32AMT": {
      "label": "GI: Amount of U.S. Military retirement pay",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "20000",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "EPAYHR2": {
      "label": "JB: Paid by the hour",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes (paid by the hour)",
          "2": "No (set annual salary or other way)",
          "-1": "Not in Universe"
        }
      }
    },
    "EPAYHR1": {
      "label": "JB: Paid by the hour",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes (paid by the hour)",
          "-1": "Not in Universe",
          "2": "No (set annual salary or other way)"
        }
      }
    },
    "AHEMPLY": {
      "label": "HI: Allocation flag for EHEMPLY",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "ROTHRRSN": {
      "label": "GI: Reason for receipt of 'other' retirement income",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Suvivor",
          "-1": "Not in Universe",
          "6": "Retirement and survivor",
          "5": "Disability and Survivor",
          "2": "Retirement",
          "7": "Disability, retirement, and survivor",
          "8": "No payment received",
          "1": "Disability",
          "4": "Disability and retirement"
        }
      }
    },
    "AWICYN": {
      "label": "GI: Allocation flag for EWICYN",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "EHICVMTH": {
      "label": "HI: What month was ... last covered by health ins",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "1",
            "max": "12",
            "description": "Month last covered"
          }
        ]
      }
    },
    "RHCALMN": {
      "label": "SU: Calendar month for this reference month.",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "11": "November",
          "8": "August",
          "3": "March",
          "4": "April",
          "5": "May",
          "1": "January",
          "2": "February",
          "12": "December",
          "10": "October",
          "7": "July",
          "9": "September",
          "6": "June"
        }
      }
    },
    "AHOWWELL": {
      "label": "HH: Allocation flag for EHOWWELL",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "AOACLR": {
      "label": "AS: Allocation flag for TOACLR",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "6": "Derived from range based values"
        }
      }
    },
    "APMSUM1": {
      "label": "JB: Allocation flag for TPMSUM1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "3": "Logical imputation(derivation)",
          "1": "Statistical imputation(hot deck)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "APMSUM2": {
      "label": "JB: Allocation flag for TPMSUM2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation(hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "3": "Logical imputation(derivation)"
        }
      }
    },
    "EJNTSSYN": {
      "label": "GI: Receipt of joint Social Security payments with spouse",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "2": "No",
          "1": "Yes"
        }
      }
    },
    "A24AMT": {
      "label": "GI: Allocation flag for T24AMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "EPNMOM": {
      "label": "PE: Person number of mother",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "9999": "No mother in household"
        },
        "range": [
          {
            "min": "101",
            "max": "1699",
            "description": "Person Number"
          }
        ]
      }
    },
    "AGASSCE": {
      "label": "GI: Allocation flag for EGASSCE1-EGASSCE2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation"
        }
      }
    },
    "EPUBHSTP": {
      "label": "GI: Type of housing assistance ... received",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Section 8",
          "2": "Other rental assistance",
          "3": "Other housing program",
          "4": "Not sure; don't know",
          "-1": "Not in Universe"
        }
      }
    },
    "ACOLLVOC": {
      "label": "ED: Allocation flag for RCOLLVOC",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed"
        }
      }
    },
    "RSFPOV": {
      "label": "SF: Poverty threshold for this related subfamily",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not In Universe"
        },
        "range": [
          {
            "min": "1",
            "max": "5000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "EHIEVRCV": {
      "label": "HI: Has ... ever been covered by health insurance",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "TSVOINT": {
      "label": "AS: Amount of monthly interest from own savings account",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "660",
            "description": "Dollars"
          }
        ]
      }
    },
    "ESOTHDIV": {
      "label": "AS: Dividends credited to margin account",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not in Universe",
          "2": "No"
        }
      }
    },
    "TSJNTDIV": {
      "label": "AS: Amount of dividend check from jointly held stocks",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "2200",
            "description": "Dollars"
          }
        ]
      }
    },
    "EGRSSB2": {
      "label": "BS: Earnings level last 12 months",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "A02AMT": {
      "label": "GI: Allocation flag for T02AMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed"
        }
      }
    },
    "RFB2R2": {
      "label": "GI: 2nd reason for applying for food stamps the 2nd time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "6": "No change - just decided it was time",
          "7": "No change - just heard about the program",
          "-1": "Not in Universe",
          "1": "New child (or other dependent) or pregnancy",
          "3": "Job loss or wages reduced",
          "4": "Loss or reduction of other income",
          "2": "Separation, divorced or widowed",
          "5": "Became disabled or otherwise unable to work",
          "8": "Needed to re-certify",
          "9": "Other"
        }
      }
    },
    "ACDMTH": {
      "label": "HI: Allocation flag for ECDMTH",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "RFB2R1": {
      "label": "GI: 1st reason for applying for food stamps the 2nd time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "7": "No change - just heard about the program",
          "8": "Needed to re-certify",
          "5": "Became disabled or otherwise unable to work",
          "2": "Separation, divorced or widowed",
          "9": "Other",
          "1": "New child (or other dependent) or pregnancy",
          "3": "Job loss or wages reduced",
          "4": "Loss or reduction of other income",
          "6": "No change - just decided it was time"
        }
      }
    },
    "ENONHH": {
      "label": "HI: Covered by plan owned by person outside household",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "EPTWRK": {
      "label": "LF: Worked less than 35 hours some weeks",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "1": "Yes",
          "-1": "Not in Universe"
        }
      }
    },
    "TSVJTINT": {
      "label": "AS: Amount of monthly interest on joint savings account",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "500",
            "description": "Dollars"
          }
        ]
      }
    },
    "AVETTYP": {
      "label": "AF: Allocation flag for EVETTYP",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "T10AMT": {
      "label": "GI: Amount of workers' compensation (ISS Code 10)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "99999",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "ESFSPSE": {
      "label": "SF: Person number of spouse of related subfam ref person",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "9999": "No spouse in subfamily",
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "101",
            "max": "1699",
            "description": "Person number of spouse of related subfamily reference person"
          }
        ]
      }
    },
    "AVOCAT": {
      "label": "ED: Allocation flag for EVOCAT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "ABIZNOW2": {
      "label": "BS: Allocation flag for EBIZNOW2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation(hot deck)",
          "3": "Logical imputation(derivation)"
        }
      }
    },
    "ASVOINT": {
      "label": "AS: Allocation flag for TSVOINT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "6": "Derived from range based values",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "APSSTHRU": {
      "label": "GI: Allocation flag for EPSSTHRU",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed"
        }
      }
    },
    "ESSCHILD": {
      "label": "GI: Receipt of Social Security payments for children",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not in Universe",
          "2": "No"
        }
      }
    },
    "AAGESS": {
      "label": "GI: Allocation flag for TAGESS",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "ABIZNOW1": {
      "label": "BS: Allocation flag for EBIZNOW1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation(derivation)",
          "0": "Not imputed",
          "1": "Statistical imputation(hot deck)",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "TCSAGY": {
      "label": "GI: Amount received by Agency on ...'s behalf",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "99999",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "RMILRSN": {
      "label": "GI: Reason for receipt of U.S. military retirement",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Survivor",
          "5": "Disability and Survivor",
          "1": "Disability",
          "-1": "Not in Universe",
          "4": "Disability and retirement",
          "8": "No payment received",
          "7": "Disability, retirement, and survivor",
          "2": "Retirement",
          "6": "Retirement and survivor"
        }
      }
    },
    "AOARNT": {
      "label": "AS: Allocation flag for TOARNT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "6": "Derived from range based values",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "A60AMTG": {
      "label": "GI: Allocation flag for T60AMTG",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation"
        }
      }
    },
    "EVETTYP": {
      "label": "AF: Type of Veteran's payments",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Veteran's Pension",
          "-1": "Not in Universe",
          "4": "Other Veteran's Payments",
          "1": "Service-connected disability compensation",
          "2": "Survivor Benefits"
        }
      }
    },
    "EFSYN": {
      "label": "GI: Receipt of food stamps (ISS Code 27)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not in Universe",
          "2": "No"
        }
      }
    },
    "AGVJT": {
      "label": "AS: Allocation flag for EGVJT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed"
        }
      }
    },
    "AOINCB1": {
      "label": "BS: Allocation flag for EOINCB1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "1": "Statistical imputation(hot deck)",
          "0": "Not imputed",
          "3": "Logical imputation(derivation)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "RFCHANGE": {
      "label": "FA: Change in family composition from previous month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Change occurred",
          "2": "No change occurred"
        }
      }
    },
    "RLGOVRSN": {
      "label": "GI: Reason for receipt of local government pension",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "8": "No payment received",
          "6": "Retirement and survivor",
          "7": "Disability, retirement, and survivor",
          "5": "Disability and Survivor",
          "2": "Retirement",
          "1": "Disability",
          "3": "Survivor",
          "4": "Disability and retirement"
        }
      }
    },
    "APRFTB2": {
      "label": "BS: Allocation flag for TPRFTB2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation(derivation)",
          "2": "Cold deck imputation",
          "1": "Statistical imputation(hot deck)"
        }
      }
    },
    "APRFTB1": {
      "label": "BS: Allocation flag for TPRFTB1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "1": "Statistical imputation(hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation(derivation)"
        }
      }
    },
    "EGRSSB1": {
      "label": "BS: Earnings level last 12 months",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "EWELACT4": {
      "label": "GI: Participate in a work experience",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "EWELACT3": {
      "label": "GI: Did ... attend job training",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Required to",
          "-1": "Not in Universe",
          "3": "Both required and chose",
          "2": "Chose to"
        }
      }
    },
    "AOCCTIM1": {
      "label": "JB: Allocation flag for EOCCTIM1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation(hot deck)",
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "3": "Logical imputation(derivation)"
        }
      }
    },
    "EWELACT1": {
      "label": "GI: Attend classes to improve basic reading",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "AHRSBS1": {
      "label": "BS: Allocation flag for EHRSBS1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "1": "Statistical imputation(hot deck)",
          "3": "Logical imputation(derivation)",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "AHRSBS2": {
      "label": "BS: Allocation flag for EHRSBS2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation(hot deck)",
          "3": "Logical imputation(derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "0": "Not imputed"
        }
      }
    },
    "AROLLAMT": {
      "label": "GI: Allocation flag for TROLLAMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "EHEMPLY": {
      "label": "HI: Source of health insurance",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "8": "Other",
          "6": "Military/VA health care",
          "5": "CHAMPVA",
          "7": "Privately purchased",
          "-1": "Not in Universe",
          "4": "TRICARE/CHAMPUS",
          "1": "Current employer or work",
          "2": "Former employer",
          "3": "Union"
        }
      }
    },
    "AOCCTIM2": {
      "label": "JB: Allocation flag for EOCCTIM2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "3": "Logical imputation(derivation)",
          "0": "Not imputed",
          "1": "Statistical imputation(hot deck)"
        }
      }
    },
    "TSUNEMP": {
      "label": "SF: Total related subfamily unemployment income recode",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "150000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "EJOBCNTR": {
      "label": "LF: Number of jobs held during the reference period",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Contingent worker",
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "1",
            "max": "25",
            "description": "Number of jobs (excluding businesses and other work-arrangements) held during the refe"
          }
        ]
      }
    },
    "EGVOAST": {
      "label": "AS: Solely owned U.S. Government securities",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "RGED": {
      "label": "ED: Completed high school by GED or equivalency",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No (Graduated from high school)",
          "1": "Yes (GED)",
          "-1": "Not in Universe"
        }
      }
    },
    "EMANYCHK": {
      "label": "AS: Dividend check from joint/sole owned mutual funds",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "EAWOP": {
      "label": "LF: Had full-week unpaid absences from work",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not in Universe",
          "2": "No"
        }
      }
    },
    "EMOTHDIV": {
      "label": "AS: Dividends credited against margin accounts",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "A60AMTT": {
      "label": "GI: Allocation flag for T60AMTT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "ESOWNKID": {
      "label": "SF: Number of own children in related subfamily",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "No children",
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "1",
            "max": "30",
            "description": "Number of children"
          }
        ]
      }
    },
    "AOWNRNT": {
      "label": "AS: Allocation flag for EOWNRNT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "T56AMT": {
      "label": "GI: Amount of miscellaneous cash income",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "48000",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "ASSISELF": {
      "label": "GI: Allocation flag for ESSISELF",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "A34AMT": {
      "label": "GI: Allocation flag for T34AMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed"
        }
      }
    },
    "EHIALLCV": {
      "label": "HI: Has ... always been covered by health insurance",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "EHICOST": {
      "label": "HI: Employer/union paid all or part of health ins. costs",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "None",
          "2": "Part",
          "1": "All",
          "-1": "Not in Universe"
        }
      }
    },
    "ACDBEGMO": {
      "label": "HI: Allocation flag for ECDBEGMO",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "0": "No imputation"
        }
      }
    },
    "ACASHGVT": {
      "label": "GI: Allocation flag for CASHGVT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "TSJADIV": {
      "label": "AS: Amount of dividend credited to a joint margin accnt",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "3400",
            "description": "Dollars"
          }
        ]
      }
    },
    "AHINOYR": {
      "label": "HI: Allocation flag for THINOYR",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "0": "No imputation",
          "2": "Cold deck",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "EBDOAST": {
      "label": "AS: Solely owned municipal or corporate bonds",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "AEMPB2": {
      "label": "BS: Allocation flag for EEMPB2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "3": "Logical imputation(derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation(hot deck)",
          "0": "Not imputed"
        }
      }
    },
    "AEMPB1": {
      "label": "BS: Allocation flag for EEMPB1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "1": "Statistical imputation(hot deck)",
          "3": "Logical imputation(derivation)",
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "T34AMT": {
      "label": "GI: Amount of State government pension (ISS Code 34)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "20000",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "RMESR": {
      "label": "LF: Employment status recode for month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "6": "No job all month, on layoff or looking for work all weeks.",
          "8": "No job all month, no time on layoff and no time looking for work.",
          "2": "With a job entire month, absent from work without pay 1+ weeks, absence not due to layoff",
          "7": "No job all month, at least one but not all weeks on layoff or looking for work",
          "1": "With a job entire month, worked all weeks.",
          "3": "With a job entire month, absent from work without pay 1+ weeks, absence due to layoff",
          "-1": "Not in Universe",
          "4": "With a job at least 1 but not all weeks, no time on layoff and no time looking for work",
          "5": "With a job at least 1 but not all weeks, remaining weeks on layoff or looking for work"
        }
      }
    },
    "TBDJTINT": {
      "label": "AS: Amt of monthly interest from joint municipal bonds",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "6400",
            "description": "Dollars"
          }
        ]
      }
    },
    "RGB2R1": {
      "label": "GI: 1st reason applying for General Asst the 2nd time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Job loss or wages reduced",
          "5": "Became disabled or otherwise unable to work",
          "6": "No change - just decided it was time",
          "9": "Other",
          "-1": "Not in Universe",
          "7": "No change - just heard about the program",
          "8": "Needed to re-certify",
          "1": "New child (or other dependent) or pregnancy",
          "2": "Separation, divorce or widowed",
          "4": "Loss or reduction of other income"
        }
      }
    },
    "RGB2R2": {
      "label": "GI: 2nd reason applying for General Asst the 2nd time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "8": "Needed to re-certify",
          "5": "Became disabled or otherwise unable to work",
          "4": "Loss or reduction of other income",
          "9": "Other",
          "2": "Separation, divorce or widowed",
          "7": "No change - just heard about the program",
          "3": "Job loss or wages reduced",
          "1": "New child (or other dependent) or pregnancy",
          "-1": "Not in Universe",
          "6": "No change - just decided it was time"
        }
      }
    },
    "APROPB1": {
      "label": "BS: Allocation flag for EPROPB1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation(derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "1": "Statistical imputation(hot deck)",
          "2": "Cold deck imputation"
        }
      }
    },
    "UEVRWID": {
      "label": "PE: UNEDITED VARIABLE - Has ... ever been widowed?",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not answered",
          "7": "Refused",
          "2": "No",
          "6": "Don't know",
          "1": "Yes"
        }
      }
    },
    "APROPB2": {
      "label": "BS: Allocation flag for EPROPB2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "1": "Statistical imputation(hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "3": "Logical imputation(derivation)"
        }
      }
    },
    "TFTRNINC": {
      "label": "FA: Total family means-tested cash transfers for this month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "0",
            "max": "1500000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "TMOWNADV": {
      "label": "AS: Amount of dividends credited to own margin account",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "4400",
            "description": "Dollars"
          }
        ]
      }
    },
    "RMEDCODE": {
      "label": "HI: 1 digit number indicating type of Medicare Coverage",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "5": "Uninsured",
          "7": "Other or invalid code",
          "1": "Retired or disabled worker",
          "9": "Missing code",
          "2": "Spouse of retired or disabled worker",
          "3": "Widow of retired or disabled worker",
          "4": "Adult disabled as a child"
        }
      }
    },
    "AJBHRS2": {
      "label": "JB: Allocation flag for EJBHRS2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "3": "Logical imputation(derivation)",
          "0": "Not imputed",
          "1": "Statistical imputation(hot deck)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "AJBHRS1": {
      "label": "JB: Allocation flag for EJBHRS1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "1": "Statistical imputation(hot deck)",
          "3": "Logical imputation(derivation)",
          "2": "Cold deck imputation"
        }
      }
    },
    "EFKIND": {
      "label": "FA: Kind of family (or pseudo-family)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Male Headed",
          "1": "Headed by Husband/Wife",
          "3": "Female Headed"
        }
      }
    },
    "T35AMT": {
      "label": "GI: Amount of local government pension (ISS Code 35)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "22000",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "ATOKSCE": {
      "label": "GI: Allocation flag for ETOKSCE1-ETOKSCE2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "AASETDRW": {
      "label": "GI: Allocation flag for EASETDRW",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "ATENURE": {
      "label": "HH: Allocation flag for ETENURE",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "0": "No imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "EPARTB12": {
      "label": "BS: Person number of partner 1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "9999": "Unable to identify person number of partner",
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "101",
            "max": "1699",
            "description": "Person number of partner"
          }
        ]
      }
    },
    "EPARTB11": {
      "label": "BS: Person number of partner 1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "9999": "Unable to identify person number of partner",
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "101",
            "max": "1699",
            "description": "Person number of partner"
          }
        ]
      }
    },
    "TCDBEGYR": {
      "label": "HI: In what year did ... become covered by medicaid?",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "1983",
            "max": "2030",
            "description": "Year coverage began"
          }
        ]
      }
    },
    "EASETDRW": {
      "label": "GI: Receipt of income from IRA, 401k, or KEOGH (ISS 42)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "No",
          "1": "Lump Sum",
          "2": "Regular distribution",
          "-1": "Not in Universe",
          "3": "Both"
        }
      }
    },
    "ECRMTH": {
      "label": "HI: Medicare coverage in this month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No, not covered",
          "-1": "Not in Universe",
          "1": "Yes, covered"
        }
      }
    },
    "TMOVRFLG": {
      "label": "PE: Mover flag",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Sample (Not in universe yet)",
          "0": "New to sample",
          "1": "Nonmover",
          "4": "Moved, different state",
          "2": "Moved, same county",
          "3": "Moved, different county within same state",
          "5": "Moved, unable to follow (Type D)",
          "6": "Moved, out of scope (Type C)"
        }
      }
    },
    "EENO1": {
      "label": "JB: Across-wave employer index/number",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "1",
            "max": "99",
            "description": "Job ID"
          }
        ]
      }
    },
    "ASTATRSN": {
      "label": "GI: Allocation flag for RSTATRSN",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation"
        }
      }
    },
    "EENO2": {
      "label": "JB: Across-wave employer index/number",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "1",
            "max": "99",
            "description": "Job ID"
          }
        ]
      }
    },
    "EGASSCE1": {
      "label": "GI: Source of gas vouchers -- gov't agency",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "EGASSCE2": {
      "label": "GI: Source of gas vouchers -- someplace else",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not in Universe",
          "2": "No"
        }
      }
    },
    "TMJADIV": {
      "label": "AS: Amount of dividends credited to joint margin account",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "3200",
            "description": "Dollars"
          }
        ]
      }
    },
    "AHRSALL": {
      "label": "LF: Allocation flag for EHRSALL",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "ACITIZEN": {
      "label": "PE: Allocation flag for ECITIZEN",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "AMJNTDIV": {
      "label": "AS: Allocation flag for TMJNTDIV",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "6": "Derived from range based values",
          "0": "Not imputed"
        }
      }
    },
    "EFCCYN": {
      "label": "GI: Receipt of foster child care payments (ISS Code 23)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "ACLTHSC": {
      "label": "GI: Allocation flag for ECLTHSC1-ECLTHSC5",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "ARRP": {
      "label": "PE: Allocation flag for ERRP",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "AEMPALL1": {
      "label": "JB: Allocation flag for EEMPALL1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation(derivation)",
          "1": "Statistical imputation(hot deck)",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "TPOTHINC": {
      "label": "PE: Total person's other income for the reference month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "1500000",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "APAOTHR3": {
      "label": "GI: Allocation flag for EPAOTHR3",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "4": "Imputed from the previous wave",
          "0": "Not imputed"
        }
      }
    },
    "APAOTHR4": {
      "label": "GI: Allocation flag for EPAOTHR4",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "4": "Imputed from the previous wave",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation"
        }
      }
    },
    "APAOTHR1": {
      "label": "GI: Allocation flag for EPAOTHR1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation",
          "4": "Imputed from the previous wave",
          "0": "Not imputed"
        }
      }
    },
    "APAOTHR2": {
      "label": "GI: Allocation flag for EPAOTHR2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "4": "Imputed from the previous wave"
        }
      }
    },
    "AEMPALL2": {
      "label": "JB: Allocation flag for EEMPALL2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation(hot deck)",
          "3": "Logical imputation(derivation)",
          "0": "Not imputed"
        }
      }
    },
    "ESSICHLD": {
      "label": "GI: Receipt of Federal SSI for children (ISS Code 3)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "APAOTHR5": {
      "label": "GI: Allocation flag for EPAOTHR5",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "4": "Imputed from the previous wave",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "EAFNOW": {
      "label": "AF: Current Armed Forces status",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "1": "Yes",
          "-1": "Not in Universe"
        }
      }
    },
    "APAOTHR6": {
      "label": "GI: Allocation flag for EPAOTHR6",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Imputed from the previous wave",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed"
        }
      }
    },
    "EHREFPER": {
      "label": "HH: Person number of household reference person",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "101",
            "max": "1699",
            "description": "Person Number"
          }
        ]
      }
    },
    "EJRNT2": {
      "label": "AS: Rent from property owned with others",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not universe",
          "2": "No"
        }
      }
    },
    "ATYPDAD": {
      "label": "PE: Allocation flag for ETYPDAD",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "AAFNOW": {
      "label": "AF: Allocation flag for EAFNOW",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "TCKJTINT": {
      "label": "AS: Amount of monthly interest from joint checking account",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "240",
            "description": "Dollars"
          }
        ]
      }
    },
    "EPARTB32": {
      "label": "BS: Person number of partner 3",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "9999": "Unable to identify person number of partner"
        },
        "range": [
          {
            "min": "101",
            "max": "1699",
            "description": "Person number of partner"
          }
        ]
      }
    },
    "EPARTB31": {
      "label": "BS: Person number of partner 3",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "9999": "Unable to identify person number of partner",
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "101",
            "max": "1699",
            "description": "Person number of partner"
          }
        ]
      }
    },
    "T13AMT": {
      "label": "GI: Amount of own sickness, accident, disability insur.",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "99999",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "EFREEBRK": {
      "label": "HH: Qualify for free or reduced price breakfast",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not in Universe",
          "2": "No"
        }
      }
    },
    "AUTILYN": {
      "label": "HH: Allocation flag for EUTILYN",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "AHIYNGKD": {
      "label": "HI: Allocation flag for EHIYNGKD",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "TFLUMPSM": {
      "label": "FA: Family retirement lump sum payments",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "0",
            "max": "15000000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "TSAFDC": {
      "label": "SF: Total related subfamily public assistance payments",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "150000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "AJRNT2": {
      "label": "AS: Allocation flag for EJRNT2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation"
        }
      }
    },
    "ROB2R2": {
      "label": "GI: 2nd reason applying for Other Welfare the 2nd time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "New child (or other dependent) or pregnancy",
          "-1": "Not in Universe",
          "7": "No change - just heard about the program",
          "8": "Needed to re-certify",
          "5": "Became disabled or otherwise unable to work",
          "9": "Other",
          "3": "Job loss or wages reduced",
          "2": "Separation, divorced or widowed",
          "4": "Loss or reduction of other income",
          "6": "No change - just decided it was time"
        }
      }
    },
    "ROB2R1": {
      "label": "GI: 1st reason applying for Other Welfare the 2nd time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "New child (or other dependent) or pregnancy",
          "5": "Became disabled or otherwise unable to work",
          "9": "Other",
          "3": "Job loss or wages reduced",
          "4": "Loss or reduction of other income",
          "6": "No change - just decided it was time",
          "7": "No change - just heard about the program",
          "2": "Separation, divorced or widowed",
          "8": "Needed to re-certify",
          "-1": "Not in Universe"
        }
      }
    },
    "ERSNOWRK": {
      "label": "LF: Main reason for not having a job during the reference period",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "5": "Pregnancy/childbirth",
          "-1": "Not in Universe",
          "9": "On layoff (temporary or indefinite)",
          "10": "Not interested in working at a job",
          "7": "Going to school",
          "3": "Unable to work because of chronic health condition or disablity",
          "11": "Other",
          "2": "Temporarily unable to work because of an illness",
          "4": "Retired",
          "1": "Temporarily unable to work because of an injury",
          "6": "Taking care of children/other persons",
          "8": "Unable to find work"
        }
      }
    },
    "TOTHPROP": {
      "label": "AS: Amount of total other property income",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "-9999999",
            "max": "9999999",
            "description": "Dollars"
          }
        ]
      }
    },
    "EPARTB21": {
      "label": "BS: Person number of partner 2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "9999": "Unable to identify person number of partner",
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "101",
            "max": "1699",
            "description": "Person number of partner"
          }
        ]
      }
    },
    "EPARTB22": {
      "label": "BS: Person number of partner 2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "9999": "Unable to identify person number of partner"
        },
        "range": [
          {
            "min": "101",
            "max": "1699",
            "description": "Person number of partner"
          }
        ]
      }
    },
    "EPACASH2": {
      "label": "GI: Whether ... received general assistance or relief",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "ETOKSCE1": {
      "label": "GI: Where ... received subway/bus tokens--gov't agency",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "EPACASH1": {
      "label": "GI: Whether ... or child received cash assistance",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "EPACASH3": {
      "label": "GI: Whether ... received short-term cash assistance",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "ETOKSCE2": {
      "label": "GI: Where ... received subway/bus tokens--gov't agency",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "T25AMT": {
      "label": "GI: Amount of WIC payments (ISS Code 25)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "99999",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "RWB1R2": {
      "label": "GI: Second reason for applying for WIC the 1st time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "5": "Became disabled or otherwise unable to work",
          "6": "No change - just decided it was time",
          "4": "Loss or reduction of other income",
          "7": "No change - just heard about the program",
          "8": "Needed to re-certify",
          "3": "Job loss or wages reduced",
          "2": "Separation, divorced or widowed",
          "-1": "Not in Universe",
          "1": "New child (or other dependent) or pregnancy",
          "9": "Other"
        }
      }
    },
    "RWB1R1": {
      "label": "GI: First reason for applying for WIC the 1st time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "5": "Became disabled or otherwise unable to work",
          "9": "Other",
          "4": "Loss or reduction of other income",
          "1": "New child (or other dependent) or pregnancy",
          "2": "Separation, divorced or widowed",
          "3": "Job loss or wages reduced",
          "6": "No change - just decided it was time",
          "8": "Needed to re-certify",
          "-1": "Not in Universe",
          "7": "No change - just heard about the program"
        }
      }
    },
    "A55AMT": {
      "label": "GI: Allocation flag for T55AMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "ULFTMAIN": {
      "label": "PE: UNEDITED VARIABLE - Main reason left household",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "5": "Separation or divorce",
          "11": "Moved to type C household",
          "4": "Moved outside of U.S.",
          "1": "Deceased",
          "2": "Institutionalized",
          "3": "On active duty in the Armed Forces",
          "6": "Marriage",
          "9": "Listed in error in prior wave",
          "0": "Not answered",
          "7": "Became employed/unemployed",
          "8": "Due to job change - other",
          "10": "Other"
        }
      }
    },
    "TMETRO": {
      "label": "HH: Metro status",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Not Identified",
          "1": "Metro",
          "2": "Not metro"
        }
      }
    },
    "ACKOAST": {
      "label": "AS: Allocation flag for ECKOAST",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "EALIYN": {
      "label": "GI: Receipt of alimony payments (ISS Code 29)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "RAB1R1": {
      "label": "GI: 1st reason applied for Pub Asst/AFDC/TANF 1st time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "New child (or other dependent) or pregnancy",
          "3": "Job loss or wages reduced",
          "4": "Loss or reduction of other income",
          "6": "No change - just decided it was time",
          "7": "No change - just heard about the program",
          "8": "Need to re-certify",
          "2": "Separation, divorce, or widowed",
          "-1": "Not in Universe",
          "9": "Other",
          "5": "Became disabled or otherwise unable to work"
        }
      }
    },
    "EJBHRS1": {
      "label": "JB: Usual hours worked per week at this job",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-8": "Hours vary",
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "1",
            "max": "99",
            "description": "hours per week"
          }
        ]
      }
    },
    "EJBHRS2": {
      "label": "JB: Usual hours worked per week at this job",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "-8": "Hours vary"
        },
        "range": [
          {
            "min": "1",
            "max": "99",
            "description": "hours per week"
          }
        ]
      }
    },
    "RAB1R2": {
      "label": "GI: 2nd reason applied for Pub Asst/AFDC/TANF 1st time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Separation, divorce or widowed",
          "8": "Need to re-certify",
          "1": "New child (or other dependent) or pregnancy",
          "-1": "Not in Universe",
          "4": "Loss or reduction of other income",
          "7": "No change - just heard about the program",
          "9": "Other",
          "5": "Became disabled or otherwise unable to work",
          "3": "Job loss or wages reduced",
          "6": "No change - just decided it was time"
        }
      }
    },
    "THLUMPSM": {
      "label": "HH: Retirement lump sum payments",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "0",
            "max": "15000000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "UENTMAIN": {
      "label": "PE: UNEDITED VARIABLE - Main reason entered household",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Birth",
          "10": "Job change - other",
          "7": "From outside the U.S.",
          "11": "Lived at this address before sample person{s} entered",
          "5": "From an institution",
          "12": "Other",
          "0": "Not answered",
          "6": "From Armed  Forces barracks",
          "4": "Due to separation or divorce",
          "8": "Should have been listed as member in previous wave",
          "9": "Became employed/unemployed",
          "2": "Marriage",
          "3": "Returned to household after missing one or more waves"
        }
      }
    },
    "EFSPOUSE": {
      "label": "FA: Person number of spouse of family reference person",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "9999": "Persons with EFKIND 2 or 3"
        },
        "range": [
          {
            "min": "101",
            "max": "1699",
            "description": "Person number of spouse of family ref. person"
          }
        ]
      }
    },
    "AEDASST": {
      "label": "ED: Allocation flag for EASST01-EASST12",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "0": "Not imputed"
        }
      }
    },
    "TJARNT": {
      "label": "AS: Amount of gross rent from property joint with spouse",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "24000",
            "description": "Dollars"
          }
        ]
      }
    },
    "AWELACT3": {
      "label": "GI: Allocation flag for EWELACT3",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "No imputation",
          "1": "Statistical imputation (hot deck)",
          "4": "Imputed from the previous wave",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck"
        }
      }
    },
    "AWELACT4": {
      "label": "GI: Allocation flag for EWELACT4",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "4": "Imputed from the previous wave",
          "0": "No imputation"
        }
      }
    },
    "EHIUNT3": {
      "label": "HI: 3rd health insurance coverage unit for this month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "1",
            "max": "240",
            "description": "Health insurance coverage unit"
          }
        ]
      }
    },
    "A21AMT": {
      "label": "GI: Allocation flag for T21AMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed"
        }
      }
    },
    "TFOTHINC": {
      "label": "FA: Total 'other' family income for this month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "0",
            "max": "1500000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "EHIUNT2": {
      "label": "HI: 2nd health insurance coverage unit for this month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "1",
            "max": "240",
            "description": "Health insurance coverage unit"
          }
        ]
      }
    },
    "AWELACT1": {
      "label": "GI: Allocation flag for EWELACT1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Imputed from the previous wave",
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "0": "No imputation"
        }
      }
    },
    "ELAYOFF": {
      "label": "LF: Spent time on layoff from a job",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "EHIUNT1": {
      "label": "HI: 1st health insurance coverage unit for this month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "1",
            "max": "240",
            "description": "Health insurance coverage unit"
          }
        ]
      }
    },
    "AENRLM": {
      "label": "ED: Allocation flag for EENRLM",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "ASBDATE2": {
      "label": "BS: Allocation flag for TSBDATE2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "3": "Logical imputation(derivation)",
          "1": "Statistical imputation(hot deck)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "RHCALYR": {
      "label": "SU: Calendar year for this reference month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "2008",
            "max": "2013",
            "description": "Calendar year of reference month"
          }
        ]
      }
    },
    "RCUOW58B": {
      "label": "PE: Person num of 2nd owner of private health ins cover",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not In Universe"
        },
        "range": [
          {
            "min": "101",
            "max": "1699",
            "description": "Person Number"
          }
        ]
      }
    },
    "RCUOW58A": {
      "label": "PE: Person num of 1st owner of private health ins cover",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not In Universe"
        },
        "range": [
          {
            "min": "101",
            "max": "1699",
            "description": "Person Number"
          }
        ]
      }
    },
    "ASBDATE1": {
      "label": "BS: Allocation flag for TSBDATE1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "3": "Logical imputation(derivation)",
          "1": "Statistical imputation(hot deck)",
          "2": "Cold deck imputation"
        }
      }
    },
    "EHOTLUNC": {
      "label": "HH: Receipt of a school lunch",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "ABMSUM1": {
      "label": "BS: Allocation flag for TBMSUM1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "1": "Statistical imputation(hot deck)",
          "3": "Logical imputation(derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation"
        }
      }
    },
    "ABMSUM2": {
      "label": "BS: Allocation flag for TBMSUM2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation(derivation)",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "1": "Statistical imputation(hot deck)"
        }
      }
    },
    "TSOWNDIV": {
      "label": "AS: Amount of dividend check for solely held stocks",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "8000",
            "description": "Dollars"
          }
        ]
      }
    },
    "AEBDATE2": {
      "label": "BS: Allocation flag for TEBDATE2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation(hot deck)",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "3": "Logical imputation(derivation)"
        }
      }
    },
    "AHIOTHER": {
      "label": "HI: Allocation flag for EHIOTHER",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "AEBDATE1": {
      "label": "BS: Allocation flag for TEBDATE1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "3": "Logical imputation(derivation)",
          "0": "Not imputed",
          "1": "Statistical imputation(hot deck)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "EGROSB2": {
      "label": "BS: Anticipated gross-earnings level",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "ECASHGVT": {
      "label": "GI: Cash assistance from which government agency",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Federal",
          "2": "State",
          "3": "Local",
          "-1": "Not in Universe"
        }
      }
    },
    "EGROSB1": {
      "label": "BS: Anticipated gross-earnings level",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "ECDBEGMO": {
      "label": "HI: In what month did ... become covered by Medicaid?",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "1",
            "max": "12",
            "description": "Month coverage began"
          }
        ]
      }
    },
    "ESFNP": {
      "label": "SF: Number of persons in this related subfamily",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "2",
            "max": "30",
            "description": "Number of persons in this related subfamily"
          }
        ]
      }
    },
    "AHIRSN": {
      "label": "HI: Allocation for variables EHIRSN01 through EHIRSN12",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation",
          "0": "Not imputed"
        }
      }
    },
    "EWRSECT8": {
      "label": "HH: Residence in Section 8 or other program",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Section 8",
          "2": "Some other government program",
          "-1": "Not in Universe"
        }
      }
    },
    "RTAKJOB": {
      "label": "LF: Could ... have started a job during missing weeks?",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes",
          "0": "Not reported"
        }
      }
    },
    "RFCSRSN": {
      "label": "GI: Reason for receipt of federal civilian pension",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Disability and retirement",
          "1": "Disability",
          "-1": "Not in Universe",
          "2": "Retirement",
          "6": "Retirement and survivor",
          "3": "Survivor",
          "5": "Disability and Survivor",
          "7": "Disability, retirement, and survivor",
          "8": "No payment received"
        }
      }
    },
    "EPTRESN": {
      "label": "LF: Main reason for working less than 35 hours",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "8": "Slack work or material shortage",
          "6": "Taking care of children/other persons",
          "7": "Full-time workweek is less than 35 hours",
          "4": "Temporarily unable to work full-time because of illness",
          "9": "Participated in a job sharing arrangement",
          "-1": "Not in Universe",
          "12": "Other",
          "5": "Unable to work full-time because of chronic health condition/disability",
          "10": "On vacation",
          "11": "In school",
          "3": "Temporarily unable to work full-time because of injury",
          "1": "Could not find full-time job",
          "2": "Wanted to work part time"
        }
      }
    },
    "EOINCB2": {
      "label": "BS: Receipt of non-salary income",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "AMDOINT": {
      "label": "AS: Allocation flag for TMDOINT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "6": "Derived from range based values",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "EOINCB1": {
      "label": "BS: Receipt of non-salary income",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "T15AMT": {
      "label": "GI: Amount of severance pay (ISS Code 15)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "99999",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "RGS2": {
      "label": "GI: Reason for stopping General Assist the 2nd time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "4": "Became ineligible because program requirements were not met",
          "2": "Became ineligible because of family changes",
          "5": "Eligibility ran out because of time limits",
          "6": "The money is not worth it",
          "7": "Other, specify",
          "1": "Became ineligible because of increased income",
          "3": "Still eligible but could not/chose not to collect"
        }
      }
    },
    "RHNFAM": {
      "label": "HH: No. of fams and psuedo fams (excluding related subs)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "1",
            "max": "30",
            "description": "Number of families"
          }
        ]
      }
    },
    "RGS1": {
      "label": "GI: Reason for stopping General Assist the 1st time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "6": "The money is not worth it",
          "2": "Became ineligible because of family changes",
          "7": "Other, specify",
          "3": "Still eligible but could not/chose not to collect",
          "5": "Eligibility ran out because of time limits",
          "1": "Became ineligible because of increased income",
          "-1": "Not in Universe",
          "4": "Became ineligible because program requirements were not met"
        }
      }
    },
    "TJACLR": {
      "label": "AS: Amt of net rent from prop. held jointly with spouse",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "-4000",
            "max": "12000",
            "description": "Dollars"
          }
        ]
      }
    },
    "APDJBTHN": {
      "label": "LF: Allocation flag for EPDJBTHN",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "5": "Edited value set equal to 2. Applies only to Wave 3. (See User Note)",
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "AAFEVER": {
      "label": "AF: Allocation flag for EAFEVER",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "AR01K": {
      "label": "GI: Allocation flag for ER01K",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "ESFTYPE": {
      "label": "SF: Type of family (or pseudo-family)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Related Subfamily",
          "-1": "Not in Universe"
        }
      }
    },
    "GRGC": {
      "label": "SU: Reduction Group Code",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "1",
            "max": "101",
            "description": "Reduction Group Code"
          }
        ]
      }
    },
    "APYRATE1": {
      "label": "JB: Allocation flag for TPYRATE1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "3": "Logical imputation(derivation)",
          "1": "Statistical imputation(hot deck)"
        }
      }
    },
    "RFPOV": {
      "label": "FA: Poverty threshold for this family in this month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not In Universe"
        },
        "range": [
          {
            "min": "1",
            "max": "5000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "APYRATE2": {
      "label": "JB: Allocation flag for TPYRATE2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation(hot deck)",
          "3": "Logical imputation(derivation)",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "ALAYOFF": {
      "label": "LF: Allocation flag for ELAYOFF",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation(hot deck)",
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "3": "Logical imputation(derivation)"
        }
      }
    },
    "AR01A": {
      "label": "GI: Allocation flag for ER01A",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "A31AMT": {
      "label": "GI: Allocation flag for T31AMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "TMJNTDIV": {
      "label": "AS: Amount of check from jointly held mutual funds",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "7200",
            "description": "Dollars"
          }
        ]
      }
    },
    "EENRLM": {
      "label": "ED: Enrollment status in this month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "RPRGQUES": {
      "label": "HH: Flag indicating transfer of program question data",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Residence this month not in sample at intrvw - no data transferred",
          "2": "Res. this mo. in sample but nonintrvw - no program data coll",
          "3": "Res. this mo. not in sample at intrvw - program data transferred",
          "1": "Res. this mo. was intrvwed address - program data collected"
        }
      }
    },
    "ECDUNT1": {
      "label": "HI: Medicaid coverage unit for this month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "1",
            "max": "240",
            "description": "Medicaid coverage unit"
          }
        ]
      }
    },
    "A08AMT": {
      "label": "GI: Allocation flag for T08AMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "AMDJT": {
      "label": "AS: Allocation flag for EMDJT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "TGVJTINT": {
      "label": "AS: Amount of monthly int from joint US Govt securities",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "3600",
            "description": "Dollars"
          }
        ]
      }
    },
    "TMDJTINT": {
      "label": "AS: Amount of monthly interest on joint money market",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "1000",
            "description": "Dollars"
          }
        ]
      }
    },
    "T27AMT": {
      "label": "GI: Amount of food stamps (ISS Code 27)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "99999",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "AENLEVEL": {
      "label": "ED: Allocation flag for EENLEVEL",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "AWHIEXP2": {
      "label": "GI: Allocation flag for WHICHEXP2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "No imputation",
          "1": "Statistical imputation (hot deck)",
          "4": "Imputed from the previous wave",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck"
        }
      }
    },
    "ACDBEGYR": {
      "label": "HI: Allocation flag for TCDBEGYR",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck",
          "3": "Logical imputation (derivation)",
          "0": "No imputation"
        }
      }
    },
    "EHISPSE": {
      "label": "HI: Coverage of spouse outside the household",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes, covered",
          "2": "No, not covered"
        }
      }
    },
    "ERACE": {
      "label": "PE: The race(s) the respondent is",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "White alone",
          "3": "Asian alone",
          "2": "Black alone",
          "4": "Residual"
        }
      }
    },
    "APATANF": {
      "label": "GI: Allocation flag for EPATANF1-EPATANF6",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "AWHIEXP1": {
      "label": "GI: Allocation flag for WHICHEXP1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck",
          "4": "Imputed from the previous wave",
          "0": "No imputation"
        }
      }
    },
    "AR03K": {
      "label": "GI: Allocation flag for ER03K",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "AR03A": {
      "label": "GI: Allocation flag for ER03A",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed"
        }
      }
    },
    "THOTHINC": {
      "label": "HH: Total 'other' household income",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "0",
            "max": "1500000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "EBIZNOW2": {
      "label": "BS: Ownership of business",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "2": "No",
          "1": "Yes"
        }
      }
    },
    "ABDJT": {
      "label": "AS: Allocation flag for EBDJT.",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "ASSCHILD": {
      "label": "GI: Allocation flag for ESSCHILD",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "EBIZNOW1": {
      "label": "BS: Ownership of business",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not in Universe",
          "2": "No"
        }
      }
    },
    "TEMPALL2": {
      "label": "JB: Number of employees at all locations",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "2": "51 to 100 employees",
          "5": "501 to 1000 employees",
          "3": "101 to 200 employees",
          "4": "201 to 500 employees",
          "1": "Under 51 employees",
          "6": "More than 1000 employees"
        }
      }
    },
    "TEMPALL1": {
      "label": "JB: Number of employees at all locations",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "51 to 100 employees",
          "3": "101 to 200 employees",
          "1": "Under 51 employees",
          "-1": "Not in Universe",
          "5": "501 to 1000 employees",
          "4": "201 to 500 employees",
          "6": "More than 1000 employees"
        }
      }
    },
    "ARESNSS1": {
      "label": "GI: Allocation flag for ERESNSS1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "ARESNSS2": {
      "label": "GI: Allocation flag for ERESNSS2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "AFOODTYP": {
      "label": "GI: Allocation flag for EFOODTP1-EFOODTP4",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "TPEARN": {
      "label": "PE: Total person's earned income for the reference month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "-1500000",
            "max": "1500000",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "ERRP": {
      "label": "PE: Household relationship",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Reference person with related persons in household",
          "13": "Other non-relative of reference person",
          "6": "Parent of reference person",
          "7": "Brother/sister of reference person",
          "10": "Unmarried partner of reference person",
          "12": "Roomer/boarder",
          "5": "Grandchild of reference person",
          "11": "Housemate/roommate",
          "2": "Reference Person without related persons in household",
          "8": "Other relative of reference person",
          "3": "Spouse of reference person",
          "4": "Child of reference person",
          "9": "Foster child of reference person"
        }
      }
    },
    "A01AMTK": {
      "label": "GI: Allocation flag for T01AMTK",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed"
        }
      }
    },
    "TLANG1": {
      "label": "HH: What language is spoken at home",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "9": "Other Asian languages (Japanese, Korean)",
          "10": "Other And Unspecified Languages",
          "6": "Chinese, Mandarin, Cantonese",
          "2": "French (include Creole)",
          "5": "Other Indo-European languages (Greek, Italian, Portuguese, Hindi,Urdu)",
          "-1": "Not in Universe",
          "8": "Vietnamese",
          "1": "Spanish",
          "3": "German",
          "7": "Tagalog, Philipino",
          "4": "Slavic languages (Polish, Russian, Serbo-Croatin, Bosnian, Yugoslavian)"
        }
      }
    },
    "EINCPB1": {
      "label": "BS: Incorporated business",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "EINCPB2": {
      "label": "BS: Incorporated business",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not in Universe",
          "2": "No"
        }
      }
    },
    "AEDUCATE": {
      "label": "ED: Allocation flag for EEDUCATE",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation"
        }
      }
    },
    "AMIJNT": {
      "label": "AS: Allocation flag for TMIJNT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "6": "Derived from range based values",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "TFFDSTP": {
      "label": "FA: Total Family food stamps Received Recode",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "0",
            "max": "150000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "RNKLUN": {
      "label": "HH:  Number of children receiving lunch at school",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "1",
            "max": "30",
            "description": "Number of children"
          }
        ]
      }
    },
    "ASVJTINT": {
      "label": "AS: Allocation flag for TSVJTINT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "6": "Derived from range based values",
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "0": "Not imputed"
        }
      }
    },
    "EPNGUARD": {
      "label": "PE: Person number of guardian",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "9999": "Guardian not in household"
        },
        "range": [
          {
            "min": "101",
            "max": "1699",
            "description": "Person Number"
          }
        ]
      }
    },
    "AMOWNADV": {
      "label": "AS: Allocation flag for TMOWNADV",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "6": "Derived from range based values",
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "AHINOMTH": {
      "label": "HI: Allocation flag for EHINOMTH",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "2": "Cold deck",
          "0": "No imputation",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "ASPEAK": {
      "label": "HH: Allocation flag for ESPEAK",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "2": "Cold deck imputation"
        }
      }
    },
    "A01AMTA": {
      "label": "GI: Allocation flag for T01AMTA",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "AHICVYR": {
      "label": "HI: Allocation flag for EHICVYR",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "No imputation",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "AGROSB1": {
      "label": "BS: Allocation flag for EGROSB1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "1": "Statistical imputation(hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation(derivation)"
        }
      }
    },
    "T05AMT": {
      "label": "GI: Amount of State unemployment compensation",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "99999",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "EAFEVER": {
      "label": "AF: Lifetime Armed Forces status",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "AMRTOWN": {
      "label": "AS: Allocation flag for EMRTOWN",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation"
        }
      }
    },
    "ABSOCC2": {
      "label": "BS: Allocation flag for TBSOCC2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "1": "Statistical imputation(hot deck)",
          "3": "Logical imputation(derivation)",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "ABSOCC1": {
      "label": "BS: Allocation flag for TBSOCC1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation(hot deck)",
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "3": "Logical imputation(derivation)"
        }
      }
    },
    "TMIOWN": {
      "label": "AS: Amount of interest paid on own mortgage",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "20000",
            "description": "Dollars"
          }
        ]
      }
    },
    "RNOTAKE": {
      "label": "LF: Reason couldn't start job",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "School",
          "4": "OTHER",
          "2": "Own Temporary Illness",
          "-1": "Not in Universe",
          "0": "Not reported",
          "1": "Waiting for a new job to begin"
        }
      }
    },
    "EOUTCOME": {
      "label": "HH: Interview Status code for this household",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "262": "TYPE-C, merged with another SIPP household",
          "248": "TYPE-C, other (specify)",
          "271": "TYPE-C, mover, new address located in same FR's area -PARENT",
          "217": "TYPE-A, temporarily absent (ta)",
          "207": "Complete partial - TYPE-Z; no futher followup",
          "252": "TYPE-C, living in armed forces barracks",
          "255": "TYPE-C, no Wave 1 persons remaining in household",
          "253": "TYPE-C, on active duty in Armed Forces",
          "254": "TYPE-C, no one over age 15 years in household",
          "213": "TYPE-A, language problem",
          "280": "TYPE-D, mover, no longer located in FR's assignment area -SPAWN",
          "249": "TYPE-C, sample adjustment",
          "250": "TYPE-C, hh deceased",
          "201": "Completed interview",
          "218": "TYPE-A, hh refused",
          "219": "TYPE-A, other occupied (specify)",
          "261": "TYPE-D, moved within U.S. but outside SIPP -SPAWN",
          "216": "TYPE-A, no one home (noh)",
          "270": "TYPE-C, mover, no longer located in FR's area -PARENT",
          "260": "TYPE-D, moved address unknown -SPAWN",
          "251": "TYPE-C, moved out of country",
          "234": "TYPE-B, entire hh institut. or temp. ineligible",
          "203": "Compl. partial- missing data; no TYPE-Z"
        }
      }
    },
    "A28AMT": {
      "label": "GI: Allocation flag for T28AMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "2": "Cold deck imputation"
        }
      }
    },
    "AUECTYP5": {
      "label": "GI: Allocation flag for EUECTYP5",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "EHIOWNER": {
      "label": "HI: Covered by own plan, someone else's, both or neither",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Covered both in own name and by someone else's plan",
          "2": "Covered by someone else's plan",
          "-1": "Not in Universe",
          "4": "Not covered",
          "1": "Covered in own name"
        }
      }
    },
    "AUECTYP6": {
      "label": "GI: Allocation flag for EUECTYP6",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "ASTLEMP1": {
      "label": "JB: Allocation flag for ESTLEMP1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "3": "Logical imputation(derivation)",
          "1": "Statistical imputation(hot deck)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "ASTLEMP2": {
      "label": "JB: Allocation flag for ESTLEMP2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation(derivation)",
          "1": "Statistical imputation(hot deck)"
        }
      }
    },
    "EMOONLIT": {
      "label": "LF: Additional work",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "AALIYN": {
      "label": "GI: Allocation flag for EALIYN",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed"
        }
      }
    },
    "ACRMTH": {
      "label": "HI: Allocation flag for ECRMTH",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "ETYPDAD": {
      "label": "PE: Type of child to father",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Biological child",
          "-1": "Not in Universe",
          "2": "Stepchild",
          "3": "Adopted child"
        }
      }
    },
    "APTWRK": {
      "label": "LF: Allocation flag for EPTWRK",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "1": "Statistical imputation(hot deck)",
          "2": "Cold deck imputation",
          "3": "Logical imputation(derivation)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "EGVJT": {
      "label": "AS: Jointly owned U.S. Government securities",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not in Universe",
          "2": "No"
        }
      }
    },
    "LGTMON": {
      "label": "PE: Longitudinal month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "1",
            "max": "64",
            "description": "Longitudinal month"
          }
        ]
      }
    },
    "ASTSSI": {
      "label": "GI: Allocation flag for ESTSSI",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "A06AMT": {
      "label": "GI: Allocation flag for T06AMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "TSTRNINC": {
      "label": "SF: Total related subfamily means-tested cash transfers",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "1500000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "TFUNEMP": {
      "label": "FA: Total Family Unemployment Income Recode",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "0",
            "max": "150000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "T39AMT": {
      "label": "GI: Amount of pension/retirement lump sums (ISS Code 39)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "140000",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "TROLLAMT": {
      "label": "GI: Amnt rolled over into retirement acct in ref. period",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "15000",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "APNMOM": {
      "label": "PE: Allocation flag for EPNMOM",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "AFCCYN": {
      "label": "GI: Allocation flag for EFCCYN",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "T62AMT": {
      "label": "GI: Amount of clothing assistance",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "2400",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "ECKOAST": {
      "label": "AS: Solely owned interest earning checking account",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "EFRERDBK": {
      "label": "HH: Were they free or reduced price?",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Reduced-price breakfast",
          "-1": "Not in Universe",
          "1": "Free breakfast"
        }
      }
    },
    "AOTHRRSN": {
      "label": "GI: Allocation flag for ROTHRRSN",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "AROLOVR1": {
      "label": "GI: Allocation flag for EROLOVR1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed"
        }
      }
    },
    "AROLOVR2": {
      "label": "GI: Allocation flag for EROLOVR2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "T06AMT": {
      "label": "GI: Amount of Supplemental Unemployment Benefits",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "99999",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "ACSAGY": {
      "label": "GI: Allocation flag for TCSAGY",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "ECLTHSC2": {
      "label": "GI: Clothing assistance from-charity",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "ECLTHSC3": {
      "label": "GI: Clothing assistance from-family/friends",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "TRNDUP1": {
      "label": "AS: Amount of income from royalties",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "20000",
            "description": "Dollars"
          }
        ]
      }
    },
    "ECLTHSC4": {
      "label": "GI: Clothing assistance from-employer",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "1": "Yes",
          "-1": "Not in Universe"
        }
      }
    },
    "TRNDUP2": {
      "label": "AS: Amount of other income from financial investments",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "-20000",
            "max": "60000",
            "description": "Dollars"
          }
        ]
      }
    },
    "ECLTHSC5": {
      "label": "GI: Clothing assistance from-some place else",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "TAGE": {
      "label": "PE: Age as of last birthday",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Less than 1 full year old"
        },
        "range": [
          {
            "min": "1",
            "max": "90",
            "description": "Number of years old"
          }
        ]
      }
    },
    "RHCHANGE": {
      "label": "HH: Change in household composition from previous month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Change occurred",
          "2": "No change occurred"
        }
      }
    },
    "ACDOINT": {
      "label": "AS: Allocation flag for TCDOINT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "6": "Derived from range based values",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "RCOLLVOC": {
      "label": "ED: Diploma or certificate from vocational school and education recode",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "8": "Vocational certificate, less than one year of college, no degree",
          "1": "No vocational certificate or under 18, less than high school education",
          "2": "No vocational certificate or under 18, high school diploma",
          "4": "No vocational certificate or under 18, one or more years of college, no degree",
          "5": "No vocational certificate or under 18, associate degree or higher degree",
          "6": "Vocational certificate, less than high school education",
          "3": "No vocational certificate or under 18, less than one year of college, no degree",
          "10": "Vocational certificate, associate degree, or higher degree",
          "7": "Vocational certificate, high school diploma",
          "-1": "Not in Universe",
          "9": "Vocational certificate, one or more years of college, no degree"
        }
      }
    },
    "A62AMT": {
      "label": "GI: Allocation flag for T62AMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "ECLOTHTP": {
      "label": "GI: Type of clothing assistance ... received",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Money or vouchers",
          "3": "Both clothes and money or vouchers",
          "-1": "Not in Universe",
          "1": "Clothes"
        }
      }
    },
    "A39AMT": {
      "label": "GI: Allocation flag for T39AMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "AHIMTH": {
      "label": "HI: Allocation flag for EHIMTH",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "5": "Indicates children's coverage assigned. (See user note for details.)",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "T75AMT": {
      "label": "GI: Amount of other government income (ISS Code 75)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "999999",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "TEMPB2": {
      "label": "BS: Maximum number of employees",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "3": "More than 25 employees",
          "2": "10 to 25 employees",
          "1": "Under 10 employees"
        }
      }
    },
    "TEMPB1": {
      "label": "BS: Maximum number of employees",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "10 to 25 employees",
          "1": "Under 10 employees",
          "3": "More than 25 employees",
          "-1": "Not in Universe"
        }
      }
    },
    "AGROSB2": {
      "label": "BS: Allocation flag for EGROSB2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "3": "Logical imputation(derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation(hot deck)",
          "2": "Cold deck imputation"
        }
      }
    },
    "A05AMT": {
      "label": "GI: Allocation flag for T05AMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "TFPNDIST": {
      "label": "FA: Family distributions from pension plans",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "0",
            "max": "1500000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "AGVJTINT": {
      "label": "AS: Allocation flag for TGVJTINT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "6": "Derived from range based values"
        }
      }
    },
    "AINSRSN": {
      "label": "GI: Allocation flag for RINSRSN",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "ECLTHSC1": {
      "label": "GI: Clothing assistance from-government agency",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "2": "No",
          "1": "Yes"
        }
      }
    },
    "APENSRSN": {
      "label": "GI: Allocation flag for RPENSRSN",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "THSOCSEC": {
      "label": "HH: Total Household Social Security Income Recode",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "0",
            "max": "150000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "RPYPER1": {
      "label": "JB: Frequency of payment at job",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Once a week",
          "4": "Twice a month",
          "6": "On commission",
          "8": "Not reported",
          "2": "Once every two weeks",
          "7": "Some other way",
          "-1": "Not in Universe",
          "5": "Unpaid in a family business or farm",
          "3": "Once a month"
        }
      }
    },
    "A27AMT": {
      "label": "GI: Allocation flag for T27AMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "EFREELUN": {
      "label": "HH: Qualify for free or reduced price school lunch",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "2": "No",
          "1": "Yes"
        }
      }
    },
    "ABSIND1": {
      "label": "BS: Allocation flag for TBSIND1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation(hot deck)",
          "0": "Not imputed",
          "3": "Logical imputation(derivation)",
          "2": "Cold deck imputation"
        }
      }
    },
    "ABSIND2": {
      "label": "BS: Allocation flag for TBSIND2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation(hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "3": "Logical imputation(derivation)"
        }
      }
    },
    "SSUSEQ": {
      "label": "SU: Sequence Number of Sample Unit - Primary Sort Key",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "1",
            "max": "65000",
            "description": "Sequence Number"
          }
        ]
      }
    },
    "ERENDB1": {
      "label": "BS: Reason business ended",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "6": "School/training",
          "5": "Own injury",
          "11": "Quit for some other reason",
          "9": "To start other business/take job",
          "10": "Season ended for a seasonal business",
          "2": "Childcare problems",
          "-1": "Not in Universe",
          "8": "Sold business or transferred ownership",
          "1": "Retirement or old age",
          "4": "Own illness",
          "7": "Went bankrupt/business failed",
          "3": "Other family/personal problems"
        }
      }
    },
    "ERENDB2": {
      "label": "BS: Reason business ended",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "5": "Own injury",
          "2": "Childcare problems",
          "3": "Other family/personal problems",
          "8": "Sold business or transferred ownership",
          "11": "Quit for some other reason",
          "-1": "Not in Universe",
          "6": "School/training",
          "7": "Went bankrupt/business failed",
          "1": "Retirement or old age",
          "4": "Own illness",
          "9": "To start other business/take job",
          "10": "Season ended for a seasonal business"
        }
      }
    },
    "TFTOTINC": {
      "label": "FA: Total family income for this month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "-1500000",
            "max": "1500000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "TMTHRNT": {
      "label": "HH: Amount of monthly rent",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "4000",
            "description": "Monthly rent"
          }
        ]
      }
    },
    "EEMPLOC2": {
      "label": "JB: Employer operations in more than one location",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "EMRTJNT": {
      "label": "AS: Mortgage owned jointly with spouse",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not universe"
        }
      }
    },
    "ASEX": {
      "label": "PE: Allocation flag for ESEX",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation"
        }
      }
    },
    "EEMPLOC1": {
      "label": "JB: Employer operations in more than one location",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "TSVETS": {
      "label": "SF: Total related subfamily Veterans Payments",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "150000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "RPYPER2": {
      "label": "JB: Frequency of payment at job",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Once every two weeks",
          "6": "On commission",
          "1": "Once a week",
          "8": "Not reported",
          "4": "Twice a month",
          "7": "Some other way",
          "3": "Once a month",
          "-1": "Not in Universe",
          "5": "Unpaid in a family business or farm"
        }
      }
    },
    "ACNTRC1": {
      "label": "JB: Allocation flag for ECNTRC1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation(derivation)",
          "1": "Statistical imputation(hot deck)",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed"
        }
      }
    },
    "ACNTRC2": {
      "label": "JB: Allocation flag for ECNTRC2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation(derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "1": "Statistical imputation(hot deck)",
          "2": "Cold deck imputation"
        }
      }
    },
    "RAS2": {
      "label": "GI: Reason stopped AFDC/TANF the first time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "9": "Other",
          "1": "Got a job or earnings increased",
          "7": "Chose not to participate",
          "5": "Eligibility ran out because of time limits",
          "8": "The money is not worth it",
          "2": "Family situation changed",
          "3": "Others in household earned enough moneh",
          "6": "Didn't want to use up time limit",
          "-1": "Not in Universe",
          "4": "Penalized or sanctioned for non-cooperation"
        }
      }
    },
    "RAS1": {
      "label": "GI: Reason stopped AFDC/TANF the first time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Family situation changed",
          "9": "Other",
          "3": "Others in household earned enough moneh",
          "1": "Got a job or earnings increased",
          "4": "Penalized or sanctioned for non-cooperation",
          "5": "Eligibility ran out because of time limits",
          "-1": "Not in Universe",
          "8": "The money is not worth it",
          "6": "Didn't want to use up time limit",
          "7": "Chose not to participate"
        }
      }
    },
    "T31AMT": {
      "label": "GI: Amount of Federal Civil Service pension (ISS Code 31)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "24000",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "ACASHSCE": {
      "label": "GI: Allocation flag for ECASHSCE1-ECASHSCE4",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "RVETSRSN": {
      "label": "GI: Reason for receipt of Veterans' comp. or pensions",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Suvivor",
          "-1": "Not in Universe",
          "8": "No payment received"
        }
      }
    },
    "RENROLL": {
      "label": "ED: Enrolled Full/Part sometime during 4 month period",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "2": "Enrolled part-time",
          "3": "Not enrolled",
          "1": "Enrolled full-time"
        }
      }
    },
    "RFOKLT18": {
      "label": "FA: Number of own children under 18 in family",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "0",
            "max": "30",
            "description": "Number of own children under 18"
          }
        ]
      }
    },
    "SROTATON": {
      "label": "SU: Rotation of data collection",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "1",
            "max": "4",
            "description": "Rotation of data collection"
          }
        ]
      }
    },
    "EMCOCOV": {
      "label": "HI: Type of public health insurance received <20 yrs old",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "State Children's Health Insurance Program (SCHIP)",
          "1": "Medicaid",
          "-1": "Not in Universe",
          "3": "Other public health insurance"
        }
      }
    },
    "TEBDATE2": {
      "label": "BS: Date operation of business ended",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "20080501",
            "max": "20121231",
            "description": "Date"
          }
        ]
      }
    },
    "TEBDATE1": {
      "label": "BS: Date operation of business ended",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "20080501",
            "max": "20121231",
            "description": "Date"
          }
        ]
      }
    },
    "ETRANTP2": {
      "label": "GI: Whether ... received transportation assistance -- bus or subway tokens",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "ETRANTP3": {
      "label": "GI: Whether ... received transportation assistance -- help with car",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "2": "No",
          "1": "Yes"
        }
      }
    },
    "ETRANTP1": {
      "label": "GI: Whether ... received transportation assistance -- gas vouchers",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not in Universe",
          "2": "No"
        }
      }
    },
    "TAGESS": {
      "label": "GI: Age Social Security Disability payments began",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "0",
            "max": "90",
            "description": "Age in years"
          }
        ]
      }
    },
    "EHINOMTH": {
      "label": "HI: In what month was ... last not covered by health ins",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "1",
            "max": "12",
            "description": "Last month not covered"
          }
        ]
      }
    },
    "EOCCTIM1": {
      "label": "JB: Length of time in this occupation",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "1",
            "max": "999",
            "description": "months"
          }
        ]
      }
    },
    "EMS": {
      "label": "PE: Marital status",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "5": "Separated",
          "6": "Never Married",
          "1": "Married, spouse present",
          "3": "Widowed",
          "4": "Divorced",
          "2": "Married, spouse absent"
        }
      }
    },
    "ETRANTP4": {
      "label": "GI: Whether ... received transportation assistance -- ride to doctors",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "1": "Yes",
          "-1": "Not in Universe"
        }
      }
    },
    "ETRANTP5": {
      "label": "GI: Whether ... received transportation assistance -- other",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "EOCCTIM2": {
      "label": "JB: Length of time in this occupation",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "1",
            "max": "999",
            "description": "months"
          }
        ]
      }
    },
    "AHTLNYN": {
      "label": "PE: Allocation flag for EHTLNYN",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "AR60T": {
      "label": "GI: Allocation flag for ER60T",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "ACKJT": {
      "label": "AS: Allocation flag for ECKJT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "EUECTYP5": {
      "label": "GI: Receipt of State unemployment comp. (ISS Code 5)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "2": "No",
          "1": "Yes"
        }
      }
    },
    "EUECTYP6": {
      "label": "GI: Receipt of Supplemental Unemployment Benefits",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "AEVERET": {
      "label": "LF: Allocation flag for EEVERET",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation(hot deck)",
          "3": "Logical imputation(derivation)",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "RCUOWN8B": {
      "label": "PE: Person number of the 2nd owner of Vet. coverage",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not In Universe"
        },
        "range": [
          {
            "min": "101",
            "max": "1699",
            "description": "Person Number"
          }
        ]
      }
    },
    "GHLFSAM": {
      "label": "SU: Half Sample Code",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "1",
            "max": "2",
            "description": "Half sample code"
          }
        ]
      }
    },
    "AHIALLCV": {
      "label": "HI: Allocation flag for EHIALLCV",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck",
          "1": "Statistical imputation (hot deck)",
          "0": "No imputation",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "RCUOWN8A": {
      "label": "PE: Person number of the 1st owner of Vet. coverage",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not In Universe"
        },
        "range": [
          {
            "min": "101",
            "max": "1699",
            "description": "Person Number"
          }
        ]
      }
    },
    "ALGOVRSN": {
      "label": "GI: Allocation flag for RLGOVRSN",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation",
          "0": "Not imputed"
        }
      }
    },
    "EUTILYN": {
      "label": "HH: Payment of utilities in public housing units",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "EENTAID": {
      "label": "PE: Address ID of hhld where person entered sample",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "11",
            "max": "169",
            "description": "Entry Address ID"
          }
        ]
      }
    },
    "AHIOTHR": {
      "label": "HI: Allocation flag for EHIOTHR",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "ESTLEMP2": {
      "label": "JB: Still working for this employer",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "TPTOTINC": {
      "label": "PE: Total person's income for the reference month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "-1500000",
            "max": "1500000",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "RSB1R2": {
      "label": "GI: 2nd reason applying for SSI the 1st time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Over 65",
          "-1": "Not in Universe",
          "2": "Became disabled/blind",
          "4": "Other, specify"
        }
      }
    },
    "AHIOWNER": {
      "label": "HI: Allocation flag for EHIOWNER",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "RSB1R1": {
      "label": "GI: 1st reason applying for SSI the 1st time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Other, specify",
          "3": "Over 65",
          "-1": "Not in Universe",
          "2": "Became disabled/blind"
        }
      }
    },
    "ESTLEMP1": {
      "label": "JB: Still working for this employer",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "A15AMT": {
      "label": "GI: Allocation flag for T15AMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "A03AMTA": {
      "label": "GI: Allocation flag for T03AMTA",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "T08AMT": {
      "label": "GI: Amount of Veterans compensation or pension",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "99999",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "EHIOLDKD": {
      "label": "HI: Coverage of older child (20+) outside the household",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes, covered",
          "2": "No, not covered",
          "-1": "Not in Universe"
        }
      }
    },
    "RHPOV": {
      "label": "HH: Poverty threshold for this household in this month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "1",
            "max": "5000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "TPPNDIST": {
      "label": "PE: Distributions from pension plans",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "48000",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "A03AMTK": {
      "label": "GI: Allocation flag for T03AMTK",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "TPPRPINC": {
      "label": "PE: Total property (asset) income for the month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "-1500000",
            "max": "1500000",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "APTRESN": {
      "label": "LF: Allocation flag for EPTRESN",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation(hot deck)",
          "2": "Cold deck imputation",
          "3": "Logical imputation(derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed"
        }
      }
    },
    "ASVOAST": {
      "label": "AS: Allocation flag for ESVOAST.",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "AINCPB2": {
      "label": "BS: Allocation flag for EINCPB2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation(derivation)",
          "0": "Not imputed",
          "1": "Statistical imputation(hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation"
        }
      }
    },
    "AINCPB1": {
      "label": "BS: Allocation flag for EINCPB1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "1": "Statistical imputation(hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation(derivation)"
        }
      }
    },
    "ESSISELF": {
      "label": "GI: Receipt of Federal SSI for self (ISS Code 3)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "ACSYN": {
      "label": "GI: Allocation flag for ECSYN",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "AMDOAST": {
      "label": "AS: Allocation flag for EMDOAST",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation"
        }
      }
    },
    "THFDSTP": {
      "label": "HH: Total Household food stamps Received Recode",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "0",
            "max": "150000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "EHIRSN06": {
      "label": "HI: Reason not covered: poor health, illness, age, etc.",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not in Universe",
          "2": "No"
        }
      }
    },
    "THTRNINC": {
      "label": "HH: Total household means-tested cash transfers",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "0",
            "max": "1500000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "AEJDATE2": {
      "label": "JB: Allocation flag for TEJDATE2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "1": "Statistical imputation(hot deck)",
          "3": "Logical imputation(derivation)",
          "0": "Not imputed"
        }
      }
    },
    "EHIRSN05": {
      "label": "HI: Reason not covered: not eligible-part time or temp",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "TSOTHINC": {
      "label": "SF: Total 'other' related subfamily income for this month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "1500000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "EHIRSN08": {
      "label": "HI: Reason not covered: haven't needed health insurance",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "AEJDATE1": {
      "label": "JB: Allocation flag for TEJDATE1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "1": "Statistical imputation(hot deck)",
          "3": "Logical imputation(derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation"
        }
      }
    },
    "EHIRSN07": {
      "label": "HI: Reason not covered: don't believe in insurance",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not in Universe",
          "2": "No"
        }
      }
    },
    "EHIRSN02": {
      "label": "HI: Reason not covered: HI not offered by employer",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "EHIRSN01": {
      "label": "HI: Reason not covered: too expensive, can't afford",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "2": "No",
          "1": "Yes"
        }
      }
    },
    "EHIRSN04": {
      "label": "HI: Reason not covered: job layoff, job loss, unemployment",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "EHIRSN03": {
      "label": "HI: Reason not covered: not at job long enough to qualify",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "EFREFPER": {
      "label": "FA: Person number of the family reference person",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "101",
            "max": "1699",
            "description": "Person number of family reference person"
          }
        ]
      }
    },
    "A13AMT": {
      "label": "GI: Allocation flag for T13AMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "T03AMTA": {
      "label": "GI: Amount of Federal SSI - Adult (ISS Code 3)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "99999",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "RMWKSAB": {
      "label": "LF: Number of weeks absent without pay from job in month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "2 weeks",
          "3": "3 weeks",
          "1": "1 week",
          "0": "0 weeks (that is, did not have a job, or not absent without pay from a job) or not applica",
          "4": "4 weeks",
          "-1": "Not in Universe",
          "5": "5 weeks (if applicable)"
        }
      }
    },
    "ASVJT": {
      "label": "AS: Allocation flag for ESVJT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation"
        }
      }
    },
    "EMDJT": {
      "label": "AS: Jointly owned money market deposit account",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "ABDOINT": {
      "label": "AS: Allocation flag for TBDOINT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "6": "Derived from range based values",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation"
        }
      }
    },
    "T21AMT": {
      "label": "GI: Amount of General Assistance or General Relief",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "99999",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "T03AMTK": {
      "label": "GI: Amount of Federal SSI - Child (ISS Code 3)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "99999",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "EHIRSN09": {
      "label": "HI: Reason not covered: Use VA or military hospital",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not in Universe",
          "2": "No"
        }
      }
    },
    "A25AMT": {
      "label": "GI: Allocation flag for T25AMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "ER03A": {
      "label": "GI: Receipt of Federal SSI - Adult (ISS Code 3)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "RFB1R1": {
      "label": "GI: First reason for applying for food stamps the 1st time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "6": "No change - just decided it was time",
          "2": "Separation, divorced or widowed",
          "4": "Loss or reduction of other income",
          "7": "No change - just heard about the program",
          "1": "New child (or other dependent) or pregnancy",
          "-1": "Not in Universe",
          "8": "Needed to re-certify",
          "9": "Other",
          "3": "Job loss or wages reduced",
          "5": "Became disabled or otherwise unable to work"
        }
      }
    },
    "AMJADIV": {
      "label": "AS: Allocation flag for TMJADIV",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "6": "Derived from range based values",
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation"
        }
      }
    },
    "RFB1R2": {
      "label": "GI: 2nd reason for applying for food stamps the 1st time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "New child (or other dependent) or pregnancy",
          "-1": "Not in Universe",
          "4": "Loss or reduction of other income",
          "5": "Became disabled or otherwise unable to work",
          "3": "Job loss or wages reduced",
          "8": "Needed to re-certify",
          "2": "Separation, divorced or widowed",
          "6": "No change - just decided it was time",
          "7": "No change - just heard about the program",
          "9": "Other"
        }
      }
    },
    "ER03K": {
      "label": "GI: Receipt of Federal SSI - Child (ISS Code 3)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "EHOWWELL": {
      "label": "HH: Ability to speak English",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Well",
          "-1": "Not in Universe",
          "3": "Not well",
          "1": "Very well",
          "4": "Not at all"
        }
      }
    },
    "RCUOWN57": {
      "label": "PE: Person number of the owner of the Medicaid coverage",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not In Universe"
        },
        "range": [
          {
            "min": "101",
            "max": "1699",
            "description": "Person Number"
          }
        ]
      }
    },
    "APUBHSTP": {
      "label": "GI: Allocation flag for EPUBHSTP",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "RMWKWJB": {
      "label": "LF: Number of weeks with a job in month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "0 weeks (that is, did not look for work, and was not on layoff) or not aplicable",
          "4": "4 weeks",
          "1": "1 week",
          "-1": "Not in Universe",
          "5": "5 weeks (if applicable)",
          "3": "3 weeks",
          "2": "2 weeks"
        }
      }
    },
    "AGVTRNT": {
      "label": "HH: Allocation flag for EGVTRNT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "No imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation"
        }
      }
    },
    "EBDJT": {
      "label": "AS: Jointly owned municipal or corporate bonds",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "AGRSSB2": {
      "label": "BS: Allocation flag for EGRSSB2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation(derivation)",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "1": "Statistical imputation(hot deck)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "EOWNRNT": {
      "label": "AS: Any rent from property owned entirely in own name",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not in Universe",
          "2": "No"
        }
      }
    },
    "AGRSSB1": {
      "label": "BS: Allocation flag for EGRSSB1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation(hot deck)",
          "2": "Cold deck imputation",
          "3": "Logical imputation(derivation)"
        }
      }
    },
    "AJNTSSYN": {
      "label": "GI: Allocation flag for EJNTSSYN",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "AMOTHDIV": {
      "label": "AS: Allocation flag for EMOTHDIV",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "AR60G": {
      "label": "GI: Allocation flag for ER60G",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation"
        }
      }
    },
    "EHRSALL": {
      "label": "LF: Usual hours worked at all jobs during the reference period",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not Determined",
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "1",
            "max": "99",
            "description": "hours per week"
          }
        ]
      }
    },
    "ELMPTYP3": {
      "label": "GI: Receipt of other type of lump sum payment",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "EFRERDLN": {
      "label": "HH: Were the lunches free or reduced price?",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Reduced-price lunch",
          "1": "Free lunch",
          "-1": "Not in Universe"
        }
      }
    },
    "ELMPTYP1": {
      "label": "GI: Receipt of lump sum from pension/retirement plan",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "ELMPTYP2": {
      "label": "GI: Receipt of severance pay (ISS Code 15)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not in Universe",
          "2": "No"
        }
      }
    },
    "RHMTRF": {
      "label": "HH: Household means-tested cash or noncash receipt flag",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "AJBOCC1": {
      "label": "JB: Allocation flag for TJBOCC1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation(hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "3": "Logical imputation(derivation)"
        }
      }
    },
    "AJBOCC2": {
      "label": "JB: Allocation flag for TJBOCC2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation(derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "1": "Statistical imputation(hot deck)"
        }
      }
    },
    "TFPRPINC": {
      "label": "FA: Total family property income for this month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "-1500000",
            "max": "1500000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "ER01A": {
      "label": "GI: Receipt of Social Security - Adult (ISS Code 1)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "EHIRSN12": {
      "label": "HI: Reason not covered: some other reason",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "2": "No",
          "1": "Yes"
        }
      }
    },
    "ABYEAR": {
      "label": "PE: Allocation flag for TBYEAR",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "SSUID": {
      "label": "SU: Sample Unit Identifier",
      "predicateType": "string",
      "group": "N/A",
      "limit": 0
    },
    "EHIRSN11": {
      "label": "HI: Reason not covered: no longer covered by parents",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "ECLWRK2": {
      "label": "JB: Class of worker",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Private not for profit employee",
          "5": "Federal government worker",
          "1": "Private for profit employee",
          "6": "Family worker without pay",
          "-1": "Not in Universe",
          "3": "Local government worker",
          "4": "State government worker"
        }
      }
    },
    "EHIRSN10": {
      "label": "HI: Reason not covered: covered by other health plan",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "2": "No",
          "1": "Yes"
        }
      }
    },
    "T55AMT": {
      "label": "GI: Amount of incidental or casual earnings",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "32000",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "ER01K": {
      "label": "GI: Receipt of Social Security - Child (ISS Code 1)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "TMLMSUM": {
      "label": "LF: Amount of income from moonlighting or extra jobs in this month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "66666",
            "description": "Dollars"
          }
        ]
      }
    },
    "ECLWRK1": {
      "label": "JB: Class of worker",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "2": "Private not for profit employee",
          "3": "Local government worker",
          "5": "Federal government worker",
          "1": "Private for profit employee",
          "6": "Family worker without pay",
          "4": "State government worker"
        }
      }
    },
    "SWAVE": {
      "label": "SU: Wave of data collection",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "1",
            "max": "16",
            "description": "Wave of data collection"
          }
        ]
      }
    },
    "EWHIEXP1": {
      "label": "GI: Which job because of arrangement",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "First job",
          "2": "Second job",
          "-1": "Not in Universe"
        }
      }
    },
    "EWHIEXP2": {
      "label": "GI: Which job worked to received cash assistance",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Second job",
          "-1": "Not in Universe",
          "1": "First job"
        }
      }
    },
    "TOARNT": {
      "label": "AS: Amount of gross rent from own property",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "32000",
            "description": "Dollars"
          }
        ]
      }
    },
    "AMCOCOV": {
      "label": "HI: Allocation flag for EMCOCOV",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "AVAYN": {
      "label": "AF: Allocation flag for EVAYN",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "RCUOWN27": {
      "label": "PE: Person number of the owner of the food Stamp coverage",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not In Universe"
        },
        "range": [
          {
            "min": "101",
            "max": "1699",
            "description": "Person Number"
          }
        ]
      }
    },
    "RCUOWN25": {
      "label": "PE: Person number of the owner of the WIC coverage",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not In Universe"
        },
        "range": [
          {
            "min": "101",
            "max": "1699",
            "description": "Person Number"
          }
        ]
      }
    },
    "ESVOAST": {
      "label": "AS: Ownership of solely held savings account",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "AJBIND1": {
      "label": "JB: Allocation flag for EJBIND1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "1": "Statistical imputation(hot deck)",
          "3": "Logical imputation(derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation"
        }
      }
    },
    "AJBIND2": {
      "label": "JB: Allocation flag for EJBIND2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation(hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation(derivation)",
          "2": "Cold deck imputation",
          "0": "Not imputed"
        }
      }
    },
    "RCUOWN23": {
      "label": "PE: Person number of owner of Foster Child Care coverage",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not In Universe"
        },
        "range": [
          {
            "min": "101",
            "max": "1699",
            "description": "Person Number"
          }
        ]
      }
    },
    "RHNSF": {
      "label": "HH:  Number of related subfamilies for this household",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "0",
            "max": "30",
            "description": "Number of related subfamilies"
          }
        ]
      }
    },
    "RCUOWN20": {
      "label": "PE: Person number of owner of public assistance coverage",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not In Universe"
        },
        "range": [
          {
            "min": "101",
            "max": "1699",
            "description": "Person Number"
          }
        ]
      }
    },
    "ARSNOWRK": {
      "label": "LF: Allocation flag for ERSNOWRK",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "3": "Logical imputation(derivation)",
          "1": "Statistical imputation(hot deck)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "RLIFIRSN": {
      "label": "GI: Reason for payments from paid-up life ins. policy",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Suvivor",
          "8": "No payment received",
          "2": "Retirement",
          "6": "Retirement and survivor",
          "-1": "Not in Universe"
        }
      }
    },
    "TPLUMPSM": {
      "label": "PE: Retirement lump sum payments",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "441300",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "AEGYAMT": {
      "label": "HH: Allocation flag for EEGYAMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation"
        }
      }
    },
    "EDISPREV": {
      "label": "LF: Had work-preventing physical/mental/health condition",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "ESFRFPER": {
      "label": "SF: Person number of the related subfamily ref person",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "101",
            "max": "1699",
            "description": "Person number of related subfamily reference person"
          }
        ]
      }
    },
    "TBSIND2": {
      "label": "BS: Industry code",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "14": "Public administration",
          "15": "Active duty military",
          "-1": "Not in Universe",
          "7": "Transportation and warehousing, and utilities",
          "11": "Educational, health care and social assistance",
          "2": "Mining",
          "8": "Information",
          "5": "Wholesale trade",
          "3": "Construction",
          "10": "Professional, scientific, management, administrative, and waste management services",
          "13": "Other services (except public administration)",
          "6": "Retail Trade",
          "12": "Arts, entertainment, recreation, accommodation, and food services",
          "1": "Agriculture, forestry, fishing, and hunting",
          "4": "Manufacturing",
          "9": "Finance, insurance, real estate, and rental and leasing"
        }
      }
    },
    "AMS": {
      "label": "PE: Allocation flag for EMS",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "TBSIND1": {
      "label": "BS: Industry code",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "12": "Arts, entertainment, recreation, accommodation, and food services",
          "4": "Manufacturing",
          "10": "Professional, scientific, management, administrative, and waste management services",
          "-1": "Not in Universe",
          "9": "Finance, insurance, real estate, and rental and leasing",
          "15": "Active duty military",
          "5": "Wholesale trade",
          "6": "Retail Trade",
          "11": "Educational services, health care and social assistance",
          "14": "Public administration",
          "3": "Construction",
          "7": "Transportation and warehousing, and utilities",
          "13": "Other services (except public administration)",
          "1": "Agriculture, forestry, fishing, and hunting",
          "2": "Mining",
          "8": "Information"
        }
      }
    },
    "RGB1R2": {
      "label": "GI: 2nd reason applying for General Asst the 1st time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "7": "No change - just heard about the program",
          "2": "Separation, divorce or widowed",
          "4": "Loss or reduction of other income",
          "-1": "Not in Universe",
          "8": "Needed to re-certify",
          "9": "Other",
          "1": "New child (or other dependent) or pregnancy",
          "5": "Became disabled or otherwise unable to work",
          "6": "No change - just decided it was time",
          "3": "Job loss or wages reduced"
        }
      }
    },
    "A35AMT": {
      "label": "GI: Allocation flag for T35AMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation"
        }
      }
    },
    "RGB1R1": {
      "label": "GI: 1st reason applying for General Asst the 1st time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "New child (or other dependent) or pregnancy",
          "3": "Job loss or wages reduced",
          "5": "Became disabled or otherwise unable to work",
          "4": "Loss or reduction of other income",
          "7": "No change - just heard about the program",
          "8": "Needed to re-certify",
          "-1": "Not in Universe",
          "6": "No change - just decided it was time",
          "9": "Other",
          "2": "Separation, divorce or widowed"
        }
      }
    },
    "TBDOINT": {
      "label": "AS: Amount of monthly int. from own municipal/corp bonds",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "11200",
            "description": "Dollars"
          }
        ]
      }
    },
    "TFVETS": {
      "label": "FA: Total Family Veterans Payments Recode",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "0",
            "max": "150000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "EWELAC22": {
      "label": "GI: Attend job search program or job club",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "EWELAC21": {
      "label": "GI: Attend job readiness to learn",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "ESEX": {
      "label": "PE: Sex of this person",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Female",
          "1": "Male"
        }
      }
    },
    "ABMNTH": {
      "label": "PE: Allocation flag for EBMNTH",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation"
        }
      }
    },
    "EWELAC23": {
      "label": "GI: Attend training to learn a specific job skill",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "RCUOWN04": {
      "label": "PE: Person number of the owner of the State SSI coverage",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not In Universe"
        },
        "range": [
          {
            "min": "101",
            "max": "1699",
            "description": "Person Number"
          }
        ]
      }
    },
    "RCUOWN03": {
      "label": "PE: Person number of the owner of the Federal SSI coverage",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not In Universe"
        },
        "range": [
          {
            "min": "101",
            "max": "1699",
            "description": "Person Number"
          }
        ]
      }
    },
    "AESTARSN": {
      "label": "GI: Allocation flag for RESTARSN",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "0": "Not imputed"
        }
      }
    },
    "RCUOWN01": {
      "label": "PE: Person number of the owner of the SS coverage",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not In Universe"
        },
        "range": [
          {
            "min": "101",
            "max": "1699",
            "description": "Person Number"
          }
        ]
      }
    },
    "EPNDAD": {
      "label": "PE: Person number of father",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "9999": "No father in household"
        },
        "range": [
          {
            "min": "101",
            "max": "1699",
            "description": "Person Number"
          }
        ]
      }
    },
    "TSJDATE2": {
      "label": "JB: Starting date of job",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "19380101",
            "max": "20121231",
            "description": "Date"
          }
        ]
      }
    },
    "TSJDATE1": {
      "label": "JB: Starting date of job",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "19380101",
            "max": "20121231",
            "description": "Date"
          }
        ]
      }
    },
    "SREFMON": {
      "label": "SU: Reference month of this record",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "First Reference month",
          "3": "Third Reference month",
          "2": "Second Reference month",
          "4": "Fourth Reference month"
        }
      }
    },
    "TCDJTINT": {
      "label": "AS: Amount of monthly interest from joint CDs",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "1800",
            "description": "Dollars"
          }
        ]
      }
    },
    "EFOODTP4": {
      "label": "GI: food assistance received-other",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not in Universe",
          "2": "No"
        }
      }
    },
    "EFOODTP3": {
      "label": "GI: food assistance received-meals from shelter/charity",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "2": "No",
          "1": "Yes"
        }
      }
    },
    "ESFR": {
      "label": "PE: Subfamily relationship",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not In Universe",
          "1": "Reference person of a related or unrelated subfamily",
          "2": "Spouse of reference person of a related or unrelated subfamily",
          "3": "Child (under 18) of reference person of related or unrelated subfamily"
        }
      }
    },
    "AWRKEXP1": {
      "label": "GI: Allocation flag for EWRKEXP1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "0": "No imputation",
          "2": "Cold deck",
          "4": "Imputed from the previous wave"
        }
      }
    },
    "TMOWNDIV": {
      "label": "AS: Amount of check from solely held mutual funds",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "12000",
            "description": "Dollars"
          }
        ]
      }
    },
    "AWRKEXP3": {
      "label": "GI: Allocation flag for EWRKEXP3",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck",
          "1": "Statistical imputation (hot deck)",
          "4": "Imputed from the previous wave",
          "0": "No imputation",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "T23AMT": {
      "label": "GI: Amount of foster child care payments (ISS Code 23)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "99999",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "ESFT": {
      "label": "PE: Family type",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Primary Individual",
          "0": "Primary family",
          "2": "Unrelated subfamily",
          "1": "Secondary individual (not a family member)",
          "3": "Related subfamily"
        }
      }
    },
    "AWRKEXP2": {
      "label": "GI: Allocation flag for EWRKEXP2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck",
          "1": "Statistical imputation (hot deck)",
          "0": "No imputation",
          "4": "Imputed from the previous wave",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "EFOODTP2": {
      "label": "GI: food assistance received-bags of groceries",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "EFOODTP1": {
      "label": "GI: food assistance received-money, vouchers for groceries",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "1": "Yes",
          "-1": "Not in Universe"
        }
      }
    },
    "RPRVHI2": {
      "label": "HI: Recode for type of health care/insurance (2nd type)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Military related (TRICARE,CHAMPUS,CHAMPVA,Military/VA health care)",
          "-1": "Not in Universe",
          "1": "Employer or union provided",
          "4": "OTHER",
          "2": "Privately purchased"
        }
      }
    },
    "ASSSELF": {
      "label": "GI: Allocation flag for ESSSELF",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "A23AMT": {
      "label": "GI: Allocation flag for T23AMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "ETENURE": {
      "label": "HH: Ownership status of living quarters",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Rented",
          "3": "Occupied without payment of cash rent",
          "1": "Owned or being bought by ... or someone in ...'s household"
        }
      }
    },
    "AR08": {
      "label": "GI: Allocation flag for ER08",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "AR05": {
      "label": "GI: Allocation flag for ER05",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "AR06": {
      "label": "GI: Allocation flag for ER06",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed"
        }
      }
    },
    "ACLWRK1": {
      "label": "JB: Allocation flag for ECLWRK1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation(hot deck)",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "3": "Logical imputation(derivation)"
        }
      }
    },
    "AR04": {
      "label": "GI: Allocation flag for ER04",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "ACLWRK2": {
      "label": "JB: Allocation flag for ECLWRK2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation(hot deck)",
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation(derivation)",
          "2": "Cold deck imputation"
        }
      }
    },
    "AR02": {
      "label": "GI: Allocation flag for ER02",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "TOACLR": {
      "label": "AS: Amount of net income from own rental property",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "-10000",
            "max": "22000",
            "description": "Dollars"
          }
        ]
      }
    },
    "AJACLR2": {
      "label": "AS: Allocation flag for TJACLR2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "6": "Derived from range based values",
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "RPRVHI": {
      "label": "HI: Recode for type of health care/insurance (1st type)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Employer or union provided",
          "2": "Privately purchased",
          "3": "Military related (TRICARE,CHAMPUS,CHAMPVA,Military/VA health care)",
          "4": "OTHER"
        }
      }
    },
    "EPNSPOUS": {
      "label": "PE: Person number of spouse",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "9999": "Spouse not in household or person not married"
        },
        "range": [
          {
            "min": "101",
            "max": "1699",
            "description": "Person Number"
          }
        ]
      }
    },
    "AMDJTINT": {
      "label": "AS: Allocation flag for TMDJTINT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "6": "Derived from range based values",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed"
        }
      }
    },
    "EFNP": {
      "label": "FA: Number of persons in this family or pseudo family",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "1",
            "max": "30",
            "description": "Persons in family or pseudo family"
          }
        ]
      }
    },
    "EHTLNYN": {
      "label": "PE: Receipt of school lunch",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "EHPRTB1": {
      "label": "BS: Other owners/partners in household",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "SHHADID": {
      "label": "SU: Hhld Address ID differentiates hhlds in sample unit",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "11",
            "max": "169",
            "description": "Household Address ID"
          }
        ]
      }
    },
    "EHPRTB2": {
      "label": "BS: Other owners/partners in household",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "EJBIND2": {
      "label": "JB: Industry code",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4580": "Miscellaneous nondurable goods, merchant wholesalers (4249 except 42491)",
          "7970": "Offices of physicians (6211)",
          "8380": "Community food and housing, and emergency services (6242)",
          "0770": "Construction (23)",
          "6780": "Other information services (5191 except 51912)",
          "7990": "Offices of chiropractors (62131)",
          "1090": "Fruit and vegetable preserving and specialty food manufacturing (3114)",
          "7070": "Real estate (531)",
          "4370": "Paper and paper products, merchant wholesalers (4241)",
          "6675": "Internet publishing and broadcasting (5161)",
          "6680": "Wired telecommunications carriers (5171)",
          "1670": "Knitting mills (31324, 3151)",
          "4970": "Grocery stores (4451)",
          "9180": "Labor unions (81393)",
          "2680": "Aluminum production and processing  (3313)",
          "5270": "Sporting goods, camera, and hobby and toy stores (44313, 45111, 45112)",
          "2570": "Cement, concrete, lime, and gypsum product manufacturing (3273, 3274)",
          "0270": "Logging (1133)",
          "6270": "Pipeline transportation (486)",
          "0290": "Support activities for agriculture and forestry (115)",
          "8580": "Bowling centers (71395)",
          "6970": "Securities, commodities, funds, trusts, and other financial investments (523, 525)",
          "7270": "Legal services (5411)",
          "1290": "Not specified food industries (Part 311)",
          "6190": "Taxi and limousine service (4853)",
          "2270": "Paint, coating, and adhesive manufacturing (3255)",
          "9390": "Other general government and support (92119)",
          "5590": "Electronic shopping (454111)",
          "8990": "Nail salons and other personal care services  (812113, 81219)",
          "8870": "Commercial and industrial machinery and equipment repair and maintenance (8113)",
          "6695": "Data processing, hosting, and related services (5182)",
          "8070": "Offices of optometrists (62132)",
          "5480": "Office supplies and stationery stores (45321)",
          "0480": "Not specified type of mining (Part 21)",
          "2780": "Metal forgings and stampings (3321)",
          "1990": "Printing and related support activities (3231)",
          "9470": "Justice, public order, and safety activities (922, part 92115)",
          "2280": "Soap, cleaning compound, and cosmetics manufacturing (3256)",
          "1080": "Sugar and confectionery products (3113)",
          "2170": "Resin, synthetic rubber and fibers, and filaments manufacturing (3252)",
          "3390": "Electronic component and product manufacturing, n.e.c. (3344, 3346)",
          "5690": "Other direct selling establishments (45439)",
          "2970": "Ordnance (332992, 332993, 332994, 332995)",
          "7880": "Business, technical, and trade schools and training (6114, 6115)",
          "7080": "Automotive equipment rental and leasing (5321)",
          "2990": "Not specified metal industries (Part 331 and 332)",
          "8290": "Residential care facilities, without nursing (6232, 6233, 6239)",
          "7770": "Landscaping services (56173)",
          "5380": "Department stores and discount stores (45211)",
          "6470": "Newspaper publishers (51111)",
          "6590": "Sound recording industries (5122)",
          "3890": "Furniture and related product manufacturing (337)",
          "2690": "Nonferrous metal, except aluminum, production and processing (3314)",
          "6370": "Postal Service (491)",
          "3670": "Railroad rolling stock manufacturing (3365)",
          "1370": "Beverage manufacturing (3121)",
          "4080": "Furniture and home furnishing, merchant wholesalers (4232)",
          "4890": "Lawn and garden equipment and supplies stores (4442)",
          "4770": "Furniture and home furnishings stores (442)",
          "4090": "Lumber and other construction materials, merchant wholesalers (4233)",
          "5180": "Shoe stores (44821)",
          "2590": "Miscellaneous nonmetallic mineral product manufacturing (3279)",
          "6290": "Services incidental to transportation (488)",
          "7380": "Computer systems design and related services (5415)",
          "9570": "Administration of economic programs and space research (926, 927)",
          "1790": "Leather tanning and products, except footwear manufacturing (3161, 3169)",
          "2090": "Miscellaneous petroleum and coal products (32419)",
          "6690": "Other telecommunications services (517 except 5171, 5175)",
          "3990": "Not specified manufacturing industries (Part 31, 32, 33)",
          "5670": "Vending machine operators (4542)",
          "4585": "Wholesale electronic markets, agents and brokers (4251)",
          "4590": "Not specified wholesale trade (Part 42)",
          "8390": "Vocational rehabilitation services (6243)",
          "0680": "Sewage treatment facilities (22132)",
          "5470": "Retail florists (4531)",
          "5592": "Mail order houses (454113)",
          "3970": "Toys, amusement, and sporting goods manufacturing (33992, 33993)",
          "4980": "Specialty food stores (4452)",
          "4190": "Electrical goods, merchant wholesalers (4236)",
          "5280": "Sewing, needlework, and piece goods stores (45113)",
          "7460": "Scientific research and development services (5417)",
          "8680": "Restaurants and other food services (722 except 7224)",
          "0170": "Crop production (111)",
          "8690": "Drinking places, alcoholic beverages (7224)",
          "0180": "Animal production (112)",
          "0190": "Forestry except logging (1131,1132)",
          "8470": "Child day care services (6244)",
          "3590": "Aerospace products and parts manufacturing (336414, 336415, 336419)",
          "3360": "Computer and peripheral equipment manufacturing (3341)",
          "3180": "Engines, turbines, and power transmission equipment manufacturing (3336)",
          "9160": "Religious organizations (8131)",
          "4390": "Apparel, fabrics, and notions, merchant wholesalers (4243)",
          "6880": "Savings institutions, including credit unions (52212, 52213)",
          "3490": "Electrical lighting, equipment, and supplies manufacturing, n.e.c. (3351, 3353, 3359)",
          "4470": "Groceries and related products, merchant wholesalers (4244)",
          "7860": "Elementary and secondary schools (6111)",
          "7980": "Offices of dentists (6212)",
          "0670": "Water, steam, air-conditioning, and irrigation systems (22131,22133)",
          "8270": "Nursing care facilities (6231)",
          "7180": "Other consumer goods rental (53221, 53222, 53229, 5323)",
          "9490": "Administration of environmental quality and housing programs (924, 925)",
          "1890": "Miscellaneous paper and pulp products  (32222, 32223, 32229)",
          "2070": "Petroleum refining (32411)",
          "0570": "Electric power generation, transmission and distribution (2211)",
          "2790": "Cutlery and hand tool manufacturing  (3322)",
          "0490": "Support activities for mining (213)",
          "3770": "Sawmills and wood preservation (3211)",
          "1470": "Fiber, yarn, and thread mills (3131)",
          "0380": "Coal mining (2121)",
          "5390": "Miscellaneous general merchandise stores (4529)",
          "8780": "Car washes (811192)",
          "9190": "Business, professional, political, and similar organizations (8139 except 81393)",
          "3780": "Veneer, plywood, and engineered wood products (3212)",
          "5290": "Music stores (45114, 45122)",
          "1490": "Textile and fabric finishing and coating mills (3133)",
          "9090": "Other personal services (8129)",
          "2480": "Structural clay product manufacturing (32712)",
          "7490": "Other professional, scientific, and technical services (5419 except 54194)",
          "1390": "Tobacco manufacturing (3122)",
          "4680": "Other motor vehicle dealers (4412)",
          "2380": "Tire manufacturing (32621)",
          "6870": "Banking and related activities (521, 52211,52219)",
          "8180": "Other health care services (6215, 6219)",
          "2890": "Coating, engraving, heat treating and allied activities (3328)",
          "8080": "Offices of other health practitioners (6213 except 62131, 62132)",
          "7170": "Video tape and disk rental (53223)",
          "1070": "Animal food, grain and oilseed milling (3111, 3112)",
          "6890": "Non-depository credit and related activities (5222, 5223)",
          "5680": "Fuel dealers (45431)",
          "6090": "Water transportation (483)",
          "3380": "Navigational, measuring, electromedical, and control instruments manufacturing (3345)",
          "2180": "Agricultural chemical manufacturing  (3253)",
          "4480": "Farm product raw materials, merchant wholesalers (4245)",
          "7870": "Colleges and universities, including junior colleges (6112, 6113)",
          "9370": "Executive offices and legislative bodies (92111, 92112, 92114, part 92115)",
          "8970": "Barber shops (812111)",
          "9380": "Public finance activities (92113)",
          "4490": "Petroleum and petroleum products, merchant wholesalers (4247)",
          "3290": "Not specified machinery manufacturing (Part 333)",
          "3080": "Construction, mining and oil field machinery manufacturing (33312, 33313)",
          "0370": "Oil and gas extraction (211)",
          "2670": "Iron and steel mills and steel product manufacturing  (3311, 3312)",
          "7680": "Investigation and security services (5616)",
          "8660": "Traveler accommodation (7211)",
          "9070": "Drycleaning and laundry services (8123)",
          "1590": "Textile product mills, except carpets and rugs (314 except 31411)",
          "4180": "Metals and minerals, except petroleum, merchant wholesalers (4235)",
          "8670": "Recreational vehicle parks and camps, and rooming and boarding houses (7212,7213)",
          "0280": "Fishing, hunting, and trapping (114)",
          "5070": "Pharmacies and drug stores (4461)",
          "7370": "Specialized design services (5414)",
          "5080": "Health and personal care, except drug, stores (446 except 44611)",
          "8590": "Other amusement, gambling, and recreation industries (713 except 71395)",
          "1170": "Dairy product manufacturing (3115)",
          "6070": "Air transportation (481)",
          "1190": "Retail bakeries (311811)",
          "2880": "Machine shops; turned product; screw, nut and bolt manufacturing  (3327)",
          "4380": "Drugs, sundries, and chemical and allied products, merchant wholesalers (4242, 4246)",
          "2770": "Foundries (3315)",
          "0590": "Electric and gas, and other combinations (Parts 2211, 2212)",
          "4270": "Machinery, equipment, and supplies, merchant wholesalers (4238)",
          "1570": "Carpet and rug mills (31411)",
          "9170": "Civic, social, advocacy organizations, and grantmaking and giving services (8132,8133, 8",
          "7790": "Waste management and remediation services (562)",
          "5370": "Book stores and news dealers (45121)",
          "2290": "Industrial and miscellaneous chemicals (3251, 3259)",
          "6770": "Libraries and archives (51912)",
          "2980": "Miscellaneous fabricated metal products manufacturing (3325, 3326, 3329 except 332992, 3",
          "6670": "Radio and television broadcasting and cable (5151, 5152, 5175)",
          "8170": "Home health care services (6216)",
          "7890": "Other schools, instruction, and educational services (6116, 6117)",
          "7570": "Management of companies and enterprises (551)",
          "6480": "Publishing, except newspapers and software (5111 except 51111)",
          "4990": "Beer, wine, and liquor stores (4453)",
          "0390": "Metal ore mining (2122)",
          "4070": "Motor vehicles, parts and supplies, merchant wholesalers (4231)",
          "7580": "Employment services (5613)",
          "9080": "Funeral homes, cemeteries, and crematories (8122)",
          "7590": "Business support services (5614)",
          "9890": "Persons whose last job was Armed Forces",
          "5170": "Clothing and accessories, except shoe, stores (448 except 44821, 4483)",
          "8560": "Independent artists, performing arts, spectator sports, and related industries (711)",
          "3680": "Ship and boat building (3366)",
          "7480": "Veterinary services (54194)",
          "6390": "Warehousing and storage (493)",
          "3690": "Other transportation equipment manufacturing (3369)",
          "4780": "Household appliance stores (443111)",
          "1270": "Bakeries, except retail  (3118 exc. 311811)",
          "6280": "Scenic and sightseeing transportation (487)",
          "3580": "Aircraft and parts manufacturing (336411, 336412, 336413)",
          "2490": "Glass and glass product manufacturing  (3272)",
          "6180": "Bus service and urban transit (4851, 4852, 4854, 4855, 4859)",
          "4690": "Auto parts, accessories, and tire stores  (4413)",
          "4570": "Farm supplies, merchant wholesalers (42491)",
          "1180": "Animal slaughtering and processing (3116)",
          "3960": "Medical equipment and supplies manufacturing (3391)",
          "0470": "Nonmetallic mineral mining and quarrying (2123)",
          "3190": "Machinery manufacturing, n.e.c. (3332, 3334, 3339)",
          "8880": "Personal and household goods repair and maintenance (8114 except 81143)",
          "3870": "Miscellaneous wood products (3219 except 321991, 321992)",
          "1690": "Apparel accessories and other apparel manufacturing (3159)",
          "5490": "Used merchandise stores (4533)",
          "7290": "Architectural, engineering, and related services (5413)",
          "1880": "Paperboard containers and boxes (32221)",
          "9480": "Administration of human resource programs  (923)",
          "7190": "Commercial, industrial, and other intangible assets rental and leasing (5324, 533)",
          "0690": "Not specified utilities (Part 22)",
          "5591": "Electronic auctions (454112)",
          "4290": "Miscellaneous durable goods, merchant wholesalers (4239 except 42393)",
          "4170": "Professional and commercial equipment and supplies, merchant wholesalers (4234)",
          "3090": "Commercial and service industry machinery manufacturing (3333)",
          "4870": "Building material and supplies dealers  (4441 except 44413)",
          "8790": "Electronic and precision equipment repair and maintenance (8112)",
          "4790": "Radio, TV, and computer stores (443112, 44312)",
          "2370": "Plastics product manufacturing (3261)",
          "6170": "Truck transportation (484)",
          "1280": "Seafood and other miscellaneous foods, n.e.c. (3117, 3119)",
          "4560": "Alcoholic beverages, merchant wholesalers (4248)",
          "5090": "Gasoline stations (447)",
          "6990": "Insurance carriers and related activities (524)",
          "7280": "Accounting, tax preparation, bookkeeping, and payroll services (5412)",
          "8370": "Individual and family services (6241)",
          "2390": "Rubber products, except tires, manufacturing (32622, 32629)",
          "6570": "Motion pictures and video industries (5121)",
          "1680": "Cut and sew apparel manufacturing (3152)",
          "7670": "Travel arrangements and reservation services (5615)",
          "9290": "Private households (814)",
          "5790": "Not specified retail trade (Part 44, 45)",
          "9590": "National security and international affairs (928)",
          "6080": "Rail transportation (482)",
          "3370": "Communications, audio, and video equipment manufacturing (3342, 3343)",
          "1870": "Pulp, paper, and paperboard mills (3221)",
          "5570": "Gift, novelty, and souvenir shops (45322)",
          "1770": "Footwear manufacturing (3162)",
          "5580": "Miscellaneous retail stores (4539)",
          "2190": "Pharmaceutical and medicine manufacturing (3254)",
          "2870": "Structural metals, and tank and shipping container manufacturing (3323, 3324)",
          "3170": "Metalworking machinery manufacturing (3335)",
          "4260": "Hardware, plumbing and heating equipment, and supplies, merchant wholesalers (4237)",
          "8980": "Beauty salons (812112)",
          "-1": "Not in Universe",
          "8770": "Automotive repair and maintenance (8111 except 811192)",
          "8890": "Footwear and leather goods repair (81143)",
          "8090": "Outpatient care centers (6214)",
          "7690": "Services to buildings and dwellings (except cleaning during construction and immediately",
          "1480": "Fabric mills, except knitting (3132 except 31324)",
          "6490": "Software publishing (5112)",
          "3790": "Prefabricated wood buildings and mobile homes (321991, 321992)",
          "4880": "Hardware stores (44413)",
          "6380": "Couriers and messengers (492)",
          "7470": "Advertising and related services (5418)",
          "2470": "Pottery, ceramics, and related products manufacturing  (32711)",
          "8570": "Museums, art galleries, historical sites, and similar institutions (712)",
          "5190": "Jewelry, luggage, and leather goods stores (4483)",
          "3570": "Motor vehicles and motor vehicle equipment manufacturing (3361, 3362, 3363)",
          "4670": "Automobile dealers (4411)",
          "7390": "Management, scientific, and technical consulting services (5416)",
          "3470": "Household appliance manufacturing (3352)",
          "0580": "Natural gas distribution (2212)",
          "6692": "Internet service providers (5181)",
          "7780": "Other administrative and other support services (5611, 5612, 5619)",
          "3980": "Miscellaneous manufacturing, n.e.c.  (3399 except 33992, 33993)",
          "8190": "Hospitals (622)",
          "3070": "Agricultural implement manufacturing (33311)",
          "4280": "Recyclable material, merchant wholesalers (42393)"
        }
      }
    },
    "RHCBRF": {
      "label": "HH: Household cash benefits receipt flag",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "1": "Yes"
        }
      }
    },
    "AR14": {
      "label": "GI: Allocation flag for ER14",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "TSSOCSEC": {
      "label": "SF: Total related subfamily Social Security income",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "150000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "AAST3A": {
      "label": "AS: Allocation flag for EAST3A",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "AR15": {
      "label": "GI: Allocation flag for ER15",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "AR13": {
      "label": "GI: Allocation flag for ER13",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation"
        }
      }
    },
    "AR10": {
      "label": "GI: Allocation flag for ER10",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed"
        }
      }
    },
    "RHNSSR": {
      "label": "HH: Number of Social Security recipients in household",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "0",
            "max": "30",
            "description": "Number of recipients"
          }
        ]
      }
    },
    "AAST3C": {
      "label": "AS: Allocation flag for EAST3C",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation"
        }
      }
    },
    "AAST3B": {
      "label": "AS: Allocation flag for EAST3B",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed"
        }
      }
    },
    "RHNBRF": {
      "label": "HH: Household noncash benefits receipt flag",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "AAST3E": {
      "label": "AS: Allocation flag for EAST3E",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "2": "Cold deck imputation"
        }
      }
    },
    "EJBIND1": {
      "label": "JB: Industry code",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3090": "Commercial and service industry machinery manufacturing (3333)",
          "4980": "Specialty food stores (4452)",
          "0380": "Coal mining (2121)",
          "7570": "Management of companies and enterprises (551)",
          "3790": "Prefabricated wood buildings and mobile homes (321991, 321992)",
          "0280": "Fishing, hunting, and trapping (114)",
          "1370": "Beverage manufacturing (3121)",
          "7590": "Business support services (5614)",
          "8560": "Independent artists, performing arts, spectator sports, and related industries (711)",
          "4090": "Lumber and other construction materials, merchant wholesalers (4233)",
          "6390": "Warehousing and storage (493)",
          "6280": "Scenic and sightseeing transportation (487)",
          "6170": "Truck transportation (484)",
          "1170": "Dairy product manufacturing (3115)",
          "1290": "Not specified food industries (Part 311)",
          "3360": "Computer and peripheral equipment manufacturing (3341)",
          "4580": "Miscellaneous nondurable goods, merchant wholesalers (4249 except 42491)",
          "1990": "Printing and related support activities (3231)",
          "9590": "National security and international affairs (928)",
          "0770": "Construction (23)",
          "2290": "Industrial and miscellaneous chemicals (3251, 3259)",
          "1570": "Carpet and rug mills (31411)",
          "2780": "Metal forgings and stampings (3321)",
          "7790": "Waste management and remediation services (562)",
          "0680": "Sewage treatment facilities (22132)",
          "1890": "Miscellaneous paper and pulp products  (32222, 32223, 32229)",
          "2880": "Machine shops; turned product; screw, nut and bolt manufacturing  (3327)",
          "3180": "Engines, turbines, and power transmission equipment manufacturing (3336)",
          "3980": "Miscellaneous manufacturing, n.e.c.  (3399 except 33992, 33993)",
          "0590": "Electric and gas, and other combinations (Parts 2211, 2212)",
          "8070": "Offices of optometrists (62132)",
          "4390": "Apparel, fabrics, and notions, merchant wholesalers (4243)",
          "3080": "Construction, mining and oil field machinery manufacturing (33312, 33313)",
          "4180": "Metals and minerals, except petroleum, merchant wholesalers (4235)",
          "4870": "Building material and supplies dealers  (4441 except 44413)",
          "2690": "Nonferrous metal, except aluminum, production and processing (3314)",
          "6490": "Software publishing (5112)",
          "5180": "Shoe stores (44821)",
          "6270": "Pipeline transportation (486)",
          "7480": "Veterinary services (54194)",
          "8570": "Museums, art galleries, historical sites, and similar institutions (712)",
          "5070": "Pharmacies and drug stores (4461)",
          "7370": "Specialized design services (5414)",
          "4670": "Automobile dealers (4411)",
          "5080": "Health and personal care, except drug, stores (446 except 44611)",
          "7380": "Computer systems design and related services (5415)",
          "9570": "Administration of economic programs and space research (926, 927)",
          "4690": "Auto parts, accessories, and tire stores  (4413)",
          "6990": "Insurance carriers and related activities (524)",
          "4585": "Wholesale electronic markets, agents and brokers (4251)",
          "6080": "Rail transportation (482)",
          "7180": "Other consumer goods rental (53221, 53222, 53229, 5323)",
          "5690": "Other direct selling establishments (45439)",
          "1090": "Fruit and vegetable preserving and specialty food manufacturing (3114)",
          "1690": "Apparel accessories and other apparel manufacturing (3159)",
          "9170": "Civic, social, advocacy organizations, and grantmaking and giving services (8132, 8133,",
          "2980": "Miscellaneous fabricated metal products manufacturing (3325, 3326, 3329 except 332992, 3",
          "9490": "Administration of environmental quality and housing programs (924, 925)",
          "9380": "Public finance activities (92113)",
          "2990": "Not specified metal industries (Part 331 and 332)",
          "4490": "Petroleum and petroleum products, merchant wholesalers (4247)",
          "8180": "Other health care services (6215, 6219)",
          "9160": "Religious organizations (8131)",
          "9180": "Labor unions (81393)",
          "7680": "Investigation and security services (5616)",
          "9070": "Drycleaning and laundry services (8123)",
          "6480": "Publishing, except newspapers and software (5111 except 51111)",
          "4990": "Beer, wine, and liquor stores (4453)",
          "4190": "Electrical goods, merchant wholesalers (4236)",
          "3670": "Railroad rolling stock manufacturing (3365)",
          "4880": "Hardware stores (44413)",
          "3680": "Ship and boat building (3366)",
          "0170": "Crop production (111)",
          "2590": "Miscellaneous nonmetallic mineral product manufacturing (3279)",
          "2490": "Glass and glass product manufacturing  (3272)",
          "8470": "Child day care services (6244)",
          "5090": "Gasoline stations (447)",
          "2380": "Tire manufacturing (32621)",
          "3590": "Aerospace products and parts manufacturing (336414, 336415, 336419)",
          "7280": "Accounting, tax preparation, bookkeeping, and payroll services (5412)",
          "2270": "Paint, coating, and adhesive manufacturing (3255)",
          "8370": "Individual and family services (6241)",
          "5670": "Vending machine operators (4542)",
          "7170": "Video tape and disk rental (53223)",
          "7290": "Architectural, engineering, and related services (5413)",
          "3490": "Electrical lighting, equipment, and supplies manufacturing, n.e.c. (3351, 3353, 3359)",
          "9480": "Administration of human resource programs  (923)",
          "2170": "Resin, synthetic rubber and fibers, and filaments manufacturing (3252)",
          "5570": "Gift, novelty, and souvenir shops (45322)",
          "7190": "Commercial, industrial, and other intangible assets rental and leasing (5324, 533)",
          "0690": "Not specified utilities (Part 22)",
          "3170": "Metalworking machinery manufacturing (3335)",
          "3290": "Not specified machinery manufacturing (Part 333)",
          "2770": "Foundries (3315)",
          "4270": "Machinery, equipment, and supplies, merchant wholesalers  (4238)",
          "6470": "Newspaper publishers (51111)",
          "8090": "Outpatient care centers (6214)",
          "8660": "Traveler accommodation (7211)",
          "5390": "Miscellaneous general merchandise stores (4529)",
          "7690": "Services to buildings and dwellings (except cleaning during construction and immediately",
          "9190": "Business, professional, political, and similar organizations (8139 except 81393)",
          "3780": "Veneer, plywood, and engineered wood products (3212)",
          "2570": "Cement, concrete, lime, and gypsum product manufacturing (3273, 3274)",
          "8790": "Electronic and precision equipment repair and maintenance (8112)",
          "0270": "Logging (1133)",
          "8670": "Recreational vehicle parks and camps, and rooming and boarding houses (7212, 7213)",
          "6380": "Couriers and messengers (492)",
          "1490": "Textile and fabric finishing and coating mills (3133)",
          "7470": "Advertising and related services (5418)",
          "4890": "Lawn and garden equipment and supplies stores (4442)",
          "5190": "Jewelry, luggage, and leather goods stores (4483)",
          "1270": "Bakeries, except retail  (3118 exc. 311811)",
          "2480": "Structural clay product manufacturing (32712)",
          "3580": "Aircraft and parts manufacturing (336411, 336412, 336413)",
          "0190": "Forestry except logging (1131,1132)",
          "6870": "Banking and related activities (521, 52211,52219)",
          "6190": "Taxi and limousine service (4853)",
          "1190": "Retail bakeries (311811)",
          "7970": "Offices of physicians (6211)",
          "7860": "Elementary and secondary schools (6111)",
          "8270": "Nursing care facilities (6231)",
          "8080": "Offices of other health practitioners (6213 except 62131, 62132)",
          "4280": "Recyclable material, merchant wholesalers (42393)",
          "2070": "Petroleum refining (32411)",
          "4370": "Paper and paper products, merchant wholesalers (4241)",
          "6670": "Radio and television broadcasting and cable (5151, 5152, 5175)",
          "2870": "Structural metals, and tank and shipping container manufacturing (3323, 3324)",
          "7080": "Automotive equipment rental and leasing (5321)",
          "8170": "Home health care services (6216)",
          "5591": "Electronic auctions   (454112)",
          "8870": "Commercial and industrial machinery and equipment repair and maintenance (8113)",
          "6695": "Data processing, hosting, and related services (5182)",
          "0370": "Oil and gas extraction (211)",
          "5380": "Department stores and discount stores (45211)",
          "0390": "Metal ore mining (2122)",
          "5280": "Sewing, needlework, and piece goods stores (45113)",
          "6370": "Postal Service (491)",
          "5290": "Music stores (45114, 45122)",
          "9890": "Persons whose last job was Armed Forces",
          "5170": "Clothing and accessories, except shoe, stores (448 except 44821, 4483)",
          "4780": "Household appliance stores (443111)",
          "4560": "Alcoholic beverages, merchant wholesalers (4248)",
          "6180": "Bus service and urban transit (4851, 4852, 4854, 4855, 4859)",
          "1180": "Animal slaughtering and processing (3116)",
          "6880": "Savings institutions, including credit unions (52212, 52213)",
          "1080": "Sugar and confectionery products (3113)",
          "6090": "Water transportation (483)",
          "3990": "Not specified manufacturing industries (Part 31, 32, 33)",
          "9370": "Executive offices and legislative bodies (92111, 92112, 92114, part 92115)",
          "7070": "Real estate (531)",
          "6675": "Internet publishing and broadcasting (5161)",
          "0570": "Electric power generation, transmission and distribution (2211)",
          "7770": "Landscaping services (56173)",
          "5592": "Mail order houses (454113)",
          "6680": "Wired telecommunications carriers (5171)",
          "-1": "Not in Universe",
          "3970": "Toys, amusement, and sporting goods manufacturing (33992, 33993)",
          "6692": "Internet service providers (5181)",
          "7780": "Other administrative and other support services (5611, 5612, 5619)",
          "2890": "Coating, engraving, heat treating and allied activities (3328)",
          "7670": "Travel arrangements and reservation services (5615)",
          "8770": "Automotive repair and maintenance (8111 except 811192)",
          "2670": "Iron and steel mills and steel product manufacturing  (3311, 3312)",
          "2790": "Cutlery and hand tool manufacturing  (3322)",
          "9090": "Other personal services (8129)",
          "8690": "Drinking places, alcoholic beverages (7224)",
          "8580": "Bowling centers (71395)",
          "6970": "Securities, commodities, funds, trusts, and other financial investments (523, 525)",
          "2370": "Plastics product manufacturing (3261)",
          "8590": "Other amusement, gambling, and recreation industries (713 except 71395)",
          "4680": "Other motor vehicle dealers (4412)",
          "3370": "Communications, audio, and video equipment manufacturing (3342, 3343)",
          "9470": "Justice, public order, and safety activities (922, part 92115)",
          "2280": "Soap, cleaning compound, and cosmetics manufacturing (3256)",
          "6890": "Non-depository credit and related activities (5222, 5223)",
          "5680": "Fuel dealers (45431)",
          "6770": "Libraries and archives (51912)",
          "3390": "Electronic component and product manufacturing, n.e.c. (3344, 3346)",
          "4480": "Farm product raw materials, merchant wholesalers (4245)",
          "6780": "Other information services (5191 except 51912)",
          "7990": "Offices of chiropractors (62131)",
          "5490": "Used merchandise stores (4533)",
          "5370": "Book stores and news dealers (45121)",
          "1770": "Footwear manufacturing (3162)",
          "5580": "Miscellaneous retail stores (4539)",
          "2190": "Pharmaceutical and medicine manufacturing (3254)",
          "1670": "Knitting mills (31324, 3151)",
          "2090": "Miscellaneous petroleum and coal products (32419)",
          "8190": "Hospitals (622)",
          "4970": "Grocery stores (4451)",
          "0490": "Support activities for mining (213)",
          "4290": "Miscellaneous durable goods, merchant wholesalers (4239 except 42393)",
          "8890": "Footwear and leather goods repair (81143)",
          "6590": "Sound recording industries (5122)",
          "3770": "Sawmills and wood preservation (3211)",
          "1470": "Fiber, yarn, and thread mills (3131)",
          "2680": "Aluminum production and processing  (3313)",
          "1590": "Textile product mills, except carpets and rugs (314 except 31411)",
          "8780": "Car washes (811192)",
          "5270": "Sporting goods, camera, and hobby and toy stores (44313, 45111, 45112)",
          "1480": "Fabric mills, except knitting (3132 except 31324)",
          "4080": "Furniture and home furnishing, merchant wholesalers (4232)",
          "8680": "Restaurants and other food services (722 except 7224)",
          "2470": "Pottery, ceramics, and related products manufacturing  (32711)",
          "3690": "Other transportation equipment manufacturing (3369)",
          "3570": "Motor vehicles and motor vehicle equipment manufacturing (3361, 3362, 3363)",
          "7390": "Management, scientific, and technical consulting services (5416)",
          "7270": "Legal services (5411)",
          "2390": "Rubber products, except tires, manufacturing (32622, 32629)",
          "1070": "Animal food, grain and oilseed milling (3111, 3112)",
          "4590": "Not specified wholesale trade (Part 42)",
          "0670": "Water, steam, air-conditioning, and irrigation systems (22131,22133)",
          "3380": "Navigational, measuring, electromedical, and control instruments manufacturing (3345)",
          "9290": "Private households (814)",
          "8290": "Residential care facilities, without nursing (6232, 6233, 6239)",
          "4260": "Hardware, plumbing and heating equipment, and supplies, merchant wholesalers (4237)",
          "5470": "Retail florists (4531)",
          "8980": "Beauty salons (812112)",
          "5590": "Electronic shopping   (454111)",
          "3960": "Medical equipment and supplies manufacturing (3391)",
          "8990": "Nail salons and other personal care services  (812113, 81219)",
          "5480": "Office supplies and stationery stores (45321)",
          "3070": "Agricultural implement manufacturing (33311)",
          "3190": "Machinery manufacturing, n.e.c. (3332, 3334, 3339)",
          "4170": "Professional and commercial equipment and supplies, merchant wholesalers (4234)",
          "3890": "Furniture and related product manufacturing (337)",
          "4070": "Motor vehicles, parts and supplies, merchant wholesalers  (4231)",
          "7460": "Scientific research and development services (5417)",
          "7580": "Employment services (5613)",
          "9080": "Funeral homes, cemeteries, and crematories (8122)",
          "4770": "Furniture and home furnishings stores (442)",
          "0290": "Support activities for agriculture and forestry (115)",
          "7490": "Other professional, scientific, and technical services (5419 except 54194)",
          "1390": "Tobacco manufacturing (3122)",
          "0180": "Animal production (112)",
          "4790": "Radio, TV, and computer stores (443112, 44312)",
          "6290": "Services incidental to transportation (488)",
          "1280": "Seafood and other miscellaneous foods, n.e.c. (3117, 3119)",
          "3470": "Household appliance manufacturing (3352)",
          "4570": "Farm supplies, merchant wholesalers (42491)",
          "6070": "Air transportation (481)",
          "5790": "Not specified retail trade (Part 44, 45)",
          "8380": "Community food and housing, and emergency services (6242)",
          "4470": "Groceries and related products, merchant wholesalers (4244)",
          "7980": "Offices of dentists (6212)",
          "1880": "Paperboard containers and boxes (32221)",
          "8390": "Vocational rehabilitation services (6243)",
          "1870": "Pulp, paper, and paperboard mills (3221)",
          "2180": "Agricultural chemical manufacturing  (3253)",
          "7870": "Colleges and universities, including junior colleges (6112, 6113)",
          "8880": "Personal and household goods repair and maintenance (8114 except 81143)",
          "3870": "Miscellaneous wood products (3219 except 321991, 321992)",
          "0480": "Not specified type of mining (Part 21)",
          "2970": "Ordnance (332992, 332993, 332994, 332995)",
          "7880": "Business, technical, and trade schools and training (6114, 6115)",
          "8970": "Barber shops (812111)",
          "7890": "Other schools, instruction, and educational services (6116, 6117)",
          "1790": "Leather tanning and products, except footwear manufacturing (3161, 3169)",
          "0580": "Natural gas distribution (2212)",
          "9390": "Other general government and support (92119)",
          "4380": "Drugs, sundries, and chemical and allied products, merchant wholesalers (4242, 4246)",
          "6570": "Motion pictures and video industries (5121)",
          "1680": "Cut and sew apparel manufacturing (3152)",
          "0470": "Nonmetallic mineral mining and quarrying (2123)",
          "6690": "Other telecommunications services (517 except 5171, 5175)"
        }
      }
    },
    "AAST3D": {
      "label": "AS: Allocation flag for EAST3D",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "ASJDATE2": {
      "label": "JB: Allocation flag for TSJDATE2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation(derivation)",
          "1": "Statistical imputation(hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "2": "Cold deck imputation"
        }
      }
    },
    "TFEARN": {
      "label": "FA: Total family earned income for this month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "-1500000",
            "max": "1500000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "ASJDATE1": {
      "label": "JB: Allocation flag for TSJDATE1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation(hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation(derivation)",
          "2": "Cold deck imputation",
          "0": "Not imputed"
        }
      }
    },
    "RSCHANGE": {
      "label": "SF: Change in related subfam composition from previous month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Change occurred",
          "2": "No change occurred",
          "0": "Not In Universe"
        }
      }
    },
    "EBKFSYN": {
      "label": "PE: Receipt of breakfast under Fed School Breakfast Prog.",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "1": "Yes",
          "-1": "Not in Universe"
        }
      }
    },
    "EPAOTHR4": {
      "label": "GI: Whether ... received clothing assistance",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "EPAOTHR3": {
      "label": "GI: Whether ... received food assistance",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "1": "Yes",
          "-1": "Not in Universe"
        }
      }
    },
    "EPAOTHR2": {
      "label": "GI: Whether ... child care services or assistance",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "EPAOTHR1": {
      "label": "GI: Whether ... received transportation assistance",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not in Universe",
          "2": "No"
        }
      }
    },
    "TEMPSIZ1": {
      "label": "JB: Employees at worker's location",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "5": "101 to 200 employees",
          "7": "501 to 1000 employees",
          "1": "Under 10 employees",
          "-1": "Not in Universe",
          "8": "More than 1000 employees",
          "2": "10 to 25 employees",
          "4": "51 to 100 employees",
          "3": "26 to 50 employees",
          "6": "201 to 500 employees"
        }
      }
    },
    "ECITIZEN": {
      "label": "PE: US Citizenship Status of Respondent",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "AR29": {
      "label": "GI: Allocation flag for ER29",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "TEMPSIZ2": {
      "label": "JB: Employees at worker's location",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "26 to 50 employees",
          "6": "201 to 500 employees",
          "4": "51 to 100 employees",
          "2": "10 to 25 employees",
          "8": "More than 1000 employees",
          "1": "Under 10 employees",
          "7": "501 to 1000 employees",
          "-1": "Not in Universe",
          "5": "101 to 200 employees"
        }
      }
    },
    "AR27": {
      "label": "GI: Allocation flag for ER27",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "EORIGIN": {
      "label": "PE: Spanish, Hispanic or Latino",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "1": "Yes"
        }
      }
    },
    "ROB1R2": {
      "label": "GI: 2nd reason applying for Other Welfare the 1st time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "New child (or other dependent) or pregnancy",
          "7": "No change - just heard about the program",
          "9": "Other",
          "4": "Loss or reduction of other income",
          "3": "Job loss or wages reduced",
          "6": "No change - just decided it was time",
          "8": "Needed to re-certify",
          "2": "Separation, divorced or widowed",
          "-1": "Not in Universe",
          "5": "Became disabled or otherwise unable to work"
        }
      }
    },
    "A56AMT": {
      "label": "GI: Allocation flag for T56AMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "AR28": {
      "label": "GI: Allocation flag for ER28",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed"
        }
      }
    },
    "AR25": {
      "label": "GI: Allocation flag for ER25",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation"
        }
      }
    },
    "T01AMTA": {
      "label": "GI: Amount of Social Security - Adult (ISS Code 1)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "99999",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "AR23": {
      "label": "GI: Allocation flag for ER23",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "THICVYR": {
      "label": "HI: In what year was ... last covered by health ins",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "1970",
            "max": "2030",
            "description": "Year last covered"
          }
        ]
      }
    },
    "AR24": {
      "label": "GI: Allocation flag for ER24",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "AR21": {
      "label": "GI: Allocation flag for ER21",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "ROB1R1": {
      "label": "GI: 1st reason applying for Other Welfare the 1st time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "5": "Became disabled or otherwise unable to work",
          "6": "No change - just decided it was time",
          "1": "New child (or other dependent) or pregnancy",
          "3": "Job loss or wages reduced",
          "8": "Needed to re-certify",
          "9": "Other",
          "7": "No change - just heard about the program",
          "2": "Separation, divorced or widowed",
          "-1": "Not in Universe",
          "4": "Loss or reduction of other income"
        }
      }
    },
    "AR20": {
      "label": "GI: Allocation flag for ER20",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "EAST4B": {
      "label": "AS: Royalty income received",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not in Universe",
          "2": "No"
        }
      }
    },
    "EAST4A": {
      "label": "AS: Rental property owned",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "THSSI": {
      "label": "HH: Total Household Supplemental Security Income Recode",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "0",
            "max": "150000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "AAST2B": {
      "label": "AS: Allocation flag for EAST2B",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "THPRPINC": {
      "label": "HH: Total household property income",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "-1500000",
            "max": "1500000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "ADISABL": {
      "label": "LF: Allocation flag for EDISABL",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "3": "Logical imputation(derivation)",
          "1": "Statistical imputation(hot deck)",
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "EAST4C": {
      "label": "AS: Other financial investments owned",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "AAST2A": {
      "label": "AS: Allocation flag for EAST2A",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "TJBOCC2": {
      "label": "JB: Occupational classification code",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1230": "Statisticians (15-2041)",
          "3400": "Emergency medical technicians and paramedics (29-2041)",
          "4610": "Personal and home care aides (39-9021)",
          "1360": "Civil engineers (17-2051)",
          "3410": "Health diagnosing and treating practitioner support technicians (29-2050)",
          "3300": "Clinical laboratory technologists and technicians (29-2010)",
          "4530": "Baggage porters, bellhops, and concierges (39-6010)",
          "6700": "Elevator installers and repairers (47-4021)",
          "6820": "Earth drillers, except oil and gas (47-5021)",
          "6740": "Rail-track laying and maintenance equipment operators (47-4061)",
          "6500": "Reinforcing iron and rebar workers (47-2171)",
          "7830": "Food and tobacco roasting, baking, and drying machine operators and tenders (51-3091)",
          "2140": "Paralegals and legal assistants (23-2011)",
          "8930": "Paper goods machine setters, operators, and tenders (51-9196)",
          "6760": "Miscellaneous construction and related workers (47-4090)",
          "3010": "Dentists (29-1020)",
          "2040": "Clergy (21-2011)",
          "3250": "Veterinarians (29-1131)",
          "8710": "Cutting workers (51-9030)",
          "8830": "Photographic process workers and processing machine operators (51-9130)",
          "3260": "Health diagnosing and treating practitioners, all other (29-1199)",
          "6300": "Paving, surfacing, and tamping equipment operators (47-2071)",
          "7520": "Commercial divers (49-9092)",
          "4140": "Dishwashers (35-9021)",
          "5230": "Credit authorizers, checkers, and clerks (43-4041)",
          "4030": "Food preparation workers (35-2021)",
          "5240": "Customer service representatives (43-4051)",
          "7540": "Locksmiths and safe repairers (49-9094)",
          "7300": "Control and valve installers and repairers (49-9010)",
          "5250": "Eligibility interviewers, government programs (43-4061)",
          "6460": "Plasterers and stucco masons (47-2161)",
          "9610": "Cleaners of vehicles and equipment (53-7061)",
          "9740": "Tank car, truck, and ship loaders (53-7121)",
          "5020": "Telephone operators (43-2021)",
          "8410": "Textile knitting and weaving machine setters, operators, and tenders (51-6063)",
          "9500": "Conveyor operators and tenders (53-7011)",
          "4050": "Combined food preparation and serving workers, including fast food (35-3021)",
          "9410": "Transportation inspectors (53-6051)",
          "8440": "Fabric and apparel patternmakers (51-6092)",
          "7350": "Maintenance workers, machinery (49-9043)",
          "1800": "Economists (19-3011)",
          "0830": "Credit analysts (13-2041)",
          "8450": "Upholsterers (51-6093)",
          "2900": "Broadcast and sound engineering technicians and radio operators (27-4010)",
          "0720": "Meeting and convention planners (13-1121)",
          "8340": "Shoe machine operators and tenders (51-6042)",
          "8230": "Bookbinders and bindery workers (51-5010)",
          "8360": "Textile bleaching and dyeing machine operators and tenders (51-6061)",
          "1840": "Urban and regional planners (19-3051)",
          "3900": "Animal control workers (33-9011)",
          "8130": "Tool and die makers (51-4111)",
          "9340": "Bridge and lock tenders (53-6011)",
          "7160": "Automotive glass installers and repairers (49-3022)",
          "2820": "Public relations specialists (27-3031)",
          "9350": "Parking lot attendants (53-6021)",
          "2840": "Technical writers (27-3042)",
          "4900": "Models, demonstrators, and product promoters (41-9010)",
          "9130": "Driver/sales workers and truck drivers (53-3030)",
          "1520": "Petroleum engineers (17-2171)",
          "9140": "Taxi drivers and chauffeurs (53-3041)",
          "1530": "Engineers, all other (17-2199)",
          "2740": "Dancers and choreographers (27-2030)",
          "0320": "Funeral directors (11-9061)",
          "0340": "Lodging managers (11-9081)",
          "9030": "Aircraft pilots and flight engineers (53-2010)",
          "1540": "Drafters (17-3010)",
          "3860": "Transit and railroad police (33-3052)",
          "0230": "Education administrators (11-9030)",
          "9040": "Air traffic controllers and airfield operations specialists (53-2020)",
          "3730": "Supervisors, protective service workers, all other (33-1099)",
          "4940": "Telemarketers (41-9041)",
          "4820": "Securities, commodities, and financial services sales agents (41-3031)",
          "4850": "Sales representatives, wholesale and manufacturing (41-4010)",
          "2430": "Librarians (25-4021)",
          "0140": "Industrial production managers(11-3051)",
          "1100": "Network and computer systems administrators (15-1071)",
          "4500": "Barbers (39-5011)",
          "6800": "Derrick, rotary drill, and service unit operators, oil, gas, and mining (47-5010)",
          "4640": "Residential advisors (39-9041)",
          "4650": "Personal care and service workers, all other (39-9099)",
          "4410": "Motion picture projectionists (39-3021)",
          "3210": "Recreational therapists (29-1125)",
          "5500": "Cargo and freight agents (43-5011)",
          "7800": "Bakers (51-3011)",
          "6710": "Fence erectors (47-4031)",
          "7940": "Rolling machine setters, operators, and tenders, metal and plastic (51-4023)",
          "6600": "Helpers, construction trades (47-3010)",
          "7810": "Butchers and other meat, poultry, and fish processing workers (51-3020)",
          "7720": "Electrical, electronics, and electromechanical assemblers (51-2020)",
          "1060": "Database administrators (15-1061)",
          "5310": "Interviewers, except eligibility and loan (43-4111)",
          "8940": "Tire builders (51-9197)",
          "4230": "Maids and housekeeping cleaners (37-2012)",
          "6530": "Structural iron and steel workers (47-2221)",
          "3140": "Audiologists (29-1121)",
          "6660": "Construction and building inspectors (47-4011)",
          "7510": "Coin, vending, and amusement machine servicers and repairers (49-9091)",
          "8600": "Power plant operators, distributors, and dispatchers (51-8010)",
          "6420": "Painters, construction and maintenance (47-2141)",
          "8840": "Semiconductor processors (51-9141)",
          "6310": "Pile-driver operators (47-2072)",
          "8610": "Stationary engineers and boiler operators (51-8021)",
          "3040": "Optometrists (29-1041)",
          "8750": "Jewelers and precious stone and metal workers (51-9071)",
          "5130": "Gaming cage workers (43-3041)",
          "5010": "Switchboard operators, including answering service (43-2011)",
          "6100": "Fishers and related fishing workers (45-3011)",
          "6230": "Carpenters (47-2031)",
          "7560": "Riggers (49-9096)",
          "6240": "Carpet, floor, and tile installers and finishers (47-2040)",
          "8540": "Woodworking machine setters, operators, and tenders, except sawing (51-7042)",
          "0810": "Appraisers and assessors of real estate (13-2021)",
          "8310": "Pressers, textile, garment, and related materials (51-6021)",
          "0700": "Logisticians (13-1081)",
          "0940": "Tax preparers (13-2082)",
          "1920": "Chemical technicians (19-4031)",
          "7120": "Electronic home entertainment equipment installers and repairers (49-2097)",
          "8330": "Shoe and leather workers and repairers (51-6041)",
          "8210": "Tool grinders, filers, and sharpeners (51-4194)",
          "1810": "Market and survey researchers (19-3020)",
          "9310": "Ship and boat captains and operators (53-5020)",
          "8460": "Textile, apparel, and furnishings workers, all other (51-6099)",
          "0730": "Other business operations specialists (13-11XX)",
          "1940": "Nuclear technicians (19-4051)",
          "8350": "Tailors, dressmakers, and sewers (51-6050)",
          "7140": "Aircraft mechanics and service technicians (49-3011)",
          "0620": "Human resources, training, and labor relations specialists (13-1070)",
          "1710": "Atmospheric and space scientists (19-2021)",
          "0500": "Agents and business managers of artists, performers, and athletes (13-1011)",
          "8250": "Prepress technicians and workers (51-5022)",
          "0520": "Wholesale and retail buyers, except farm products (13-1022)",
          "0530": "Purchasing agents, except wholesale, retail, and farm products (13-1023)",
          "1400": "Computer hardware engineers (17-2061)",
          "1640": "Conservation scientists and foresters (19-1030)",
          "4800": "Advertising sales agents (41-3011)",
          "1450": "Materials engineers (17-2131)",
          "3740": "Fire fighters (33-2011)",
          "1220": "Operations research analysts (15-2031)",
          "0010": "Chief executives (11-1011)",
          "2550": "Other education, training, and library workers (25-90XX)",
          "1460": "Mechanical engineers (17-2141)",
          "5810": "Data entry keyers (43-9021)",
          "1350": "Chemical engineers (17-2041)",
          "6910": "Roof bolters, mining (47-5061)",
          "0150": "Purchasing managers (11-3061)",
          "4760": "Retail salespersons (41-2031)",
          "6930": "Helpers--extraction workers (47-5081)",
          "5860": "Office clerks, general (43-9061)",
          "5620": "Stock clerks and order fillers (43-5081)",
          "4400": "Gaming services workers (39-3010)",
          "4540": "Tour and travel guides (39-6020)",
          "4420": "Ushers, lobby attendants, and ticket takers (39-3031)",
          "0060": "Public relations managers (11-2031)",
          "4430": "Miscellaneous entertainment attendants and related workers (39-3090)",
          "5520": "Dispatchers (43-5030)",
          "5400": "Receptionists and information clerks (43-4171)",
          "1040": "Computer support specialists (15-1041)",
          "8900": "Cooling and freezing equipment operators and tenders (51-9193)",
          "7700": "First-line supervisors/managers of production and operating workers (51-1011)",
          "6510": "Roofers (47-2181)",
          "4340": "Animal trainers (39-2011)",
          "6400": "Insulation workers (47-2130)",
          "7610": "Helpers--installation, maintenance, and repair workers (49-9098)",
          "4350": "Nonfarm animal caretakers (39-2021)",
          "7620": "Other installation, maintenance, and repair workers (49-909X)",
          "8960": "Production workers, all other (51-9199)",
          "7750": "Miscellaneous assemblers and fabricators (51-2090)",
          "4000": "Chefs and head cooks (35-1011)",
          "4130": "Dining room and cafeteria attendants and bartender helpers (35-9011)",
          "5340": "New accounts clerks (43-4141)",
          "3160": "Physical therapists (29-1123)",
          "3060": "Physicians and surgeons (29-1060)",
          "6330": "Drywall installers, ceiling tile installers, and tapers (47-2080)",
          "4040": "Bartenders (35-3011)",
          "7550": "Manufactured building and mobile home installers (49-9095)",
          "8640": "Chemical processing machine setters, operators, and tenders (51-9010)",
          "4160": "Food preparation and serving related workers, all other (35-9099)",
          "5030": "Communications equipment operators, all other (43-2099)",
          "8420": "Textile winding, twisting, and drawing out machine setters, operators, and tenders (51-6",
          "7210": "Bus and truck mechanics and diesel engine specialists (49-3031)",
          "7220": "Heavy vehicle and mobile equipment service technicians and mechanics (49-3040)",
          "0820": "Budget analysts (13-2031)",
          "8320": "Sewing machine operators (51-6031)",
          "7240": "Small engine mechanics (49-3050)",
          "7360": "Millwrights (49-9044)",
          "0850": "Personal financial advisors (13-2052)",
          "1830": "Sociologists (19-3041)",
          "0860": "Insurance underwriters (13-2053)",
          "3910": "Private detectives and investigators (33-9021)",
          "8260": "Printing machine operators (51-5023)",
          "8140": "Welding, soldering, and brazing workers (51-4120)",
          "2830": "Editors (27-3041)",
          "0560": "Compliance officers, except agriculture, construction, health and safety, and transporta",
          "4920": "Real estate brokers and sales agents (41-9020)",
          "2760": "Entertainers and performers, sports and related workers, all other (27-2099)",
          "2630": "Designers (27-1020)",
          "1430": "Industrial engineers, including health and safety (17-2110)",
          "0110": "Computer and information systems managers (11-3021)",
          "1320": "Aerospace engineers (17-2011)",
          "1210": "Mathematicians (15-2021)",
          "5930": "Office and administrative support workers, all other (43-9199)",
          "4740": "Counter and rental clerks (41-2021)",
          "3530": "Miscellaneous health technologists and technicians (29-2090)",
          "2440": "Library technicians (25-4031)",
          "2310": "Elementary and middle school teachers (25-2020)",
          "1240": "Miscellaneous mathematical science occupations (15-2090)",
          "5830": "Desktop publishers (43-9031)",
          "0040": "Advertising and promotions managers (11-2011)",
          "0160": "Transportation, storage, and distribution managers (11-3071)",
          "6830": "Explosives workers, ordnance handling experts, and blasters (47-5031)",
          "1020": "Computer software engineers (15-1030)",
          "3220": "Respiratory therapists (29-1126)",
          "5530": "Meter readers, utilities (43-5041)",
          "8910": "Etchers and engravers (51-9194)",
          "7840": "Food batchmakers (51-3092)",
          "6750": "Septic tank servicers and sewer pipe cleaners (47-4071)",
          "8810": "Painting workers (51-9120)",
          "8800": "Packaging and filling machine operators and tenders (51-9111)",
          "5330": "Loan interviewers and clerks (43-4131)",
          "2060": "Religious workers, all other (21-2099)",
          "5350": "Order clerks (43-4151)",
          "4150": "Hosts and hostesses, restaurant, lounge, and coffee shop (35-9031)",
          "5360": "Human resources assistants, except payroll and timekeeping (43-4161)",
          "6210": "Boilermakers (47-2011)",
          "9600": "Industrial truck and tractor operators (53-7051)",
          "0900": "Financial examiners (13-2061)",
          "6220": "Brickmasons, blockmasons, and stonemasons (47-2020)",
          "6350": "Electricians (47-2111)",
          "9620": "Laborers and freight, stock, and material movers, hand (53-7062)",
          "9510": "Crane and tower operators (53-7021)",
          "4060": "Counter attendants, cafeteria, food concession, and coffee shop (35-3022)",
          "0930": "Tax examiners, collectors, and revenue agents (13-2081)",
          "9520": "Dredge, excavating, and loading machine operators (53-7030)",
          "6130": "Logging workers (45-4020)",
          "8550": "Woodworkers, all other (51-7099)",
          "8200": "Plating and coating machine setters, operators, and tenders, metal and plastic (51-4193)",
          "9300": "Sailors and marine oilers (53-5011)",
          "0600": "Cost estimators (13-1051)",
          "0840": "Financial analysts (13-2051)",
          "7130": "Security and fire alarm systems installers (49-2098)",
          "2910": "Photographers (27-4021)",
          "8000": "Grinding, lapping, polishing, and buffing machine tool setters, operators, and tenders,",
          "8240": "Job printers (51-5021)",
          "0510": "Purchasing agents and buyers, farm products (13-1021)",
          "1960": "Other life, physical, and social science technicians (19-40XX)",
          "7040": "Electric motor, power tool, and related repairers (49-2092)",
          "1610": "Biological scientists (19-1020)",
          "3920": "Security guards and gaming surveillance officers (33-9030)",
          "9360": "Service station attendants (53-6031)",
          "2600": "Artists and related workers (27-1010)",
          "0540": "Claims adjusters, appraisers, examiners, and investigators (13-1030)",
          "9260": "Subway, streetcar, and other rail transportation workers (53-40XX)",
          "3830": "Fish and game wardens (33-3031)",
          "3710": "First-line supervisors/managers of police and detectives (33-1012)",
          "1550": "Engineering technicians, except drafters (17-3020)",
          "1560": "Surveying and mapping technicians (17-3031)",
          "3610": "Occupational therapist assistants and aides (31-2010)",
          "1310": "Surveyors, cartographers, and photogrammetrists (17-1020)",
          "5910": "Proofreaders and copy markers (43-9081)",
          "3500": "Licensed practical and licensed vocational nurses (29-2061)",
          "4830": "Travel agents (41-3041)",
          "5920": "Statistical assistants (43-9111)",
          "5800": "Computer operators (43-9011)",
          "0130": "Human resources managers (11-3040)",
          "3510": "Medical records and health information technicians (29-2071)",
          "3630": "Massage therapists (31-9011)",
          "4840": "Sales representatives, services, all other (41-3099)",
          "3650": "Medical assistants and other healthcare support occupations (31-909X)",
          "3540": "Other healthcare practitioners and technical occupations (29-9000)",
          "4520": "Miscellaneous personal appearance workers (39-5090)",
          "5600": "Production, planning, and expediting clerks (43-5061)",
          "2000": "Counselors (21-1010)",
          "4550": "Transportation attendants (39-6030)",
          "8920": "Molders, shapers, and casters, except metal and plastic (51-9195)",
          "3110": "Physician assistants (29-1071)",
          "5420": "Information and record clerks, all other (43-4199)",
          "7960": "Drilling and boring machine tool setters, operators, and tenders, metal and plastic (51-",
          "4460": "Funeral service workers (39-4000)",
          "4110": "Waiters and waitresses (35-3031)",
          "4240": "Pest control workers (37-2021)",
          "4120": "Food servers, nonrestaurant (35-3041)",
          "8720": "Extruding, forming, pressing, and compacting machine setters, operators, and tenders (51",
          "3030": "Dietitians and nutritionists (29-1031)",
          "3150": "Occupational therapists (29-1122)",
          "8730": "Furnace, kiln, oven, drier, and kettle operators and tenders (51-9051)",
          "8860": "Cleaning, washing, and metal pickling equipment operators and tenders (51-9192)",
          "6320": "Operating engineers and other construction equipment operators (47-2073)",
          "5110": "Billing and posting clerks and machine operators (43-3021)",
          "6200": "First-line supervisors/managers of construction trades and extraction workers (47-1011)",
          "7410": "Electrical power-line installers and repairers (49-9051)",
          "8620": "Water and liquid waste treatment plant and system operators (51-8031)",
          "9720": "Refuse and recyclable material collectors (53-7081)",
          "7430": "Precision instrument and equipment repairers (49-9060)",
          "8760": "Medical, dental, and ophthalmic laboratory technicians (51-9080)",
          "8530": "Sawing machine setters, operators, and tenders, wood (51-7041)",
          "9750": "Material moving workers, all other (53-7199)",
          "5150": "Procurement clerks (43-3061)",
          "7340": "Maintenance and repair workers, general (49-9042)",
          "7100": "Electrical and electronics repairers, industrial and utility (49-209X)",
          "9640": "Packers and packagers, hand (53-7064)",
          "7110": "Electronic equipment installers and repairers, motor vehicles (49-2096)",
          "6020": "Animal breeders (45-2021)",
          "9650": "Pumping station operators (53-7070)",
          "0710": "Management analysts (13-1111)",
          "6040": "Graders and sorters, agricultural products (45-2041)",
          "7260": "Miscellaneous vehicle and mobile equipment mechanics, installers, and repairers (49-3090",
          "7020": "Radio and telecommunications equipment installers and repairers (49-2020)",
          "9330": "Ship engineers (53-5031)",
          "1720": "Chemists and materials scientists (19-2030)",
          "2700": "Actors (27-2011)",
          "9230": "Railroad brake, signal, and switch operators (53-4021)",
          "9120": "Bus drivers (53-3020)",
          "2960": "Media and communication equipment workers, all other (27-4099)",
          "2850": "Writers and authors (27-3043)",
          "1410": "Electrical and electronic engineers (17-2070)",
          "0330": "Gaming managers (11-9071)",
          "1420": "Environmental engineers (17-2081)",
          "3720": "First-line supervisors/managers of fire fighting and prevention workers (33-1021)",
          "4930": "Sales engineers (41-9031)",
          "1440": "Marine engineers and naval architects (17-2121)",
          "0100": "Administrative services managers (11-3011)",
          "3750": "Fire inspectors (33-2020)",
          "4960": "Sales and related workers, all other (41-9099)",
          "1330": "Agricultural engineers (17-2021)",
          "0360": "Natural sciences managers (11-9121)",
          "1340": "Biomedical engineers (17-2031)",
          "0020": "General and operations managers (11-1021)",
          "5700": "Secretaries and administrative assistants (43-6010)",
          "1000": "Computer scientists and systems analysts (15-10XX)",
          "2200": "Postsecondary teachers (25-1000)",
          "3310": "Dental hygienists (29-2021)",
          "4510": "Hairdressers, hairstylists, and cosmetologists (39-5012)",
          "7900": "Computer control programmers and operators (51-4010)",
          "3200": "Radiation therapists (29-1124)",
          "0050": "Marketing and sales managers (11-2020)",
          "5630": "Weighers, measurers, checkers, and samplers, recordkeeping (43-5111)",
          "6720": "Hazardous materials removal workers (47-4041)",
          "4300": "First-line supervisors/managers of gaming workers (39-1010)",
          "5510": "Couriers and messengers (43-5021)",
          "4320": "First-line supervisors/managers of personal service workers (39-1021)",
          "4200": "First-line supervisors/managers of housekeeping and janitorial workers (37-1011)",
          "5410": "Reservation and transportation ticket agents and travel clerks (43-4181)",
          "4210": "First-line supervisors/managers of landscaping, lawn service, and groundskeeping workers",
          "5300": "Hotel, motel, and resort desk clerks (43-4081)",
          "2150": "Miscellaneous legal support workers (23-2090)",
          "4220": "Janitors and building cleaners (37-201X)",
          "7730": "Engine and other machine assemblers (51-2031)",
          "7850": "Food cooking machine operators and tenders (51-3093)",
          "5560": "Postal service mail sorters, processors, and processing machine operators (43-5053)",
          "5320": "Library assistants, clerical (43-4121)",
          "5200": "Brokerage clerks (43-4011)",
          "2050": "Directors, religious activities and education (21-2021)",
          "5210": "Correspondence clerks (43-4021)",
          "6430": "Paperhangers (47-2142)",
          "5220": "Court, municipal, and license clerks (43-4031)",
          "8740": "Inspectors, testers, sorters, samplers, and weighers (51-9061)",
          "8500": "Cabinetmakers and bench carpenters (51-7011)",
          "8630": "Miscellaneous plant and system operators (51-8090)",
          "7420": "Telecommunications line installers and repairers (49-9052)",
          "8520": "Model makers and patternmakers, wood (51-7030)",
          "8400": "Textile cutting machine setters, operators, and tenders (51-6062)",
          "0910": "Loan counselors and officers (13-2070)",
          "5140": "Payroll and timekeeping clerks (43-3051)",
          "7200": "Automotive service technicians and mechanics (49-3023)",
          "8650": "Crushing, grinding, polishing, mixing, and blending workers (51-9020)",
          "5260": "File Clerks (43-4071)",
          "0800": "Accountants and auditors (13-2011)",
          "6120": "Forest and conservation workers (45-4011)",
          "9630": "Machine feeders and offbearers (53-7063)",
          "6360": "Glaziers (47-2121)",
          "1900": "Agricultural and food science technicians (19-4011)",
          "6010": "Agricultural inspectors (45-2011)",
          "0950": "Financial specialists, all other (13-2099)",
          "9420": "Other transportation workers (53-60XX)",
          "1820": "Psychologists (19-3030)",
          "9560": "Hoist and winch operators (53-7041)",
          "1600": "Agricultural and food scientists (19-1010)",
          "8020": "Milling and planing machine setters, operators, and tenders, metal and plastic (51-4035)",
          "1500": "Mining and geological engineers, including mining safety engineers (17-2151)",
          "3800": "Bailiffs, correctional officers, and jailers (33-3010)",
          "9240": "Railroad conductors and yardmasters (53-4031)",
          "0430": "Managers, all other (11-9199)",
          "3820": "Detectives and criminal investigators (33-3021)",
          "3700": "First-line supervisors/managers of correctional officers (33-1011)",
          "3950": "Lifeguards and other protective service workers (33-909X)",
          "9150": "Motor vehicle operators, all other (53-3099)",
          "1300": "Architects, except naval (17-1010)",
          "0210": "Farmers and ranchers (11-9012)",
          "0350": "Medical and health services managers (11-9111)",
          "0220": "Construction managers (11-9021)",
          "3850": "Police and sheriff's patrol officers(33-3051)",
          "4700": "First-line supervisors/managers of retail sales workers (41-1011)",
          "3640": "Dental assistants (31-9091)",
          "2300": "Preschool and kindergarten teachers (25-2010)",
          "4600": "Child care workers (39-9011)",
          "1110": "Network systems and data communications analysts (15-1081)",
          "3520": "Opticians, dispensing (29-2081)",
          "5840": "Insurance claims and policy processing clerks (43-9041)",
          "4620": "Recreation and fitness workers (39-9030)",
          "6920": "Roustabouts, oil and gas (47-5071)",
          "5850": "Mail clerks and mail machine operators, except postal service (43-9051)",
          "6940": "Other extraction workers (47-50XX)",
          "2100": "Lawyers (23-1011)",
          "1010": "Computer programmers (15-1021)",
          "2340": "Other teachers and instructors (25-3000)",
          "7930": "Forging machine setters, operators, and tenders, metal and plastic (51-4022)",
          "7920": "Extruding and drawing machine setters, operators, and tenders, metal and plastic (51-402",
          "6730": "Highway maintenance workers (47-4051)",
          "7950": "Cutting, punching, and press machine setters, operators, and tenders, metal and plastic",
          "7710": "Aircraft structure, surfaces, rigging, and systems assemblers (51-2011)",
          "3230": "Speech-language pathologists (29-1127)",
          "5540": "Postal service clerks (43-5051)",
          "3000": "Chiropractors (29-1011)",
          "3120": "Podiatrists (29-1081)",
          "3130": "Registered nurses (29-1111)",
          "7740": "Structural metal fabricators and fitters (51-2041)",
          "8850": "Cementing and gluing machine operators and tenders (51-9191)",
          "5100": "Bill and account collectors (43-3011)",
          "4020": "Cooks (35-2010)",
          "6440": "Pipelayers, plumbers, pipefitters, and steamfitters (47-2150)",
          "-1": "Not in Universe",
          "5120": "Bookkeeping, accounting, and auditing clerks (43-3031)",
          "5000": "First-line supervisors/managers of office and administrative support workers (43-1011)",
          "8510": "Furniture finishers (51-7021)",
          "7320": "Home appliance repairers (49-9031)",
          "7330": "Industrial and refractory machinery mechanics (49-904X)",
          "8300": "Laundry and dry-cleaning workers (51-6011)",
          "6000": "First-line supervisors/managers of farming, fishing, and forestry workers (45-1010)",
          "8430": "Extruding and forming machine setters, operators, and tenders, synthetic and glass fiber",
          "1910": "Biological technicians (19-4021)",
          "7000": "First-line supervisors/managers of mechanics, installers, and repairers (49-1011)",
          "8220": "Metalworkers and plastic workers, all other (51-4199)",
          "8100": "Molders and molding machine setters, operators, and tenders, metal and plastic (51-4070)",
          "9200": "Locomotive engineers and operators (53-4010)",
          "6050": "Miscellaneous agricultural workers (45-2090)",
          "2920": "Television, video, and motion picture camera operators and editors (27-4030)",
          "8120": "Multiple machine tool setters, operators, and tenders, metal and plastic (51-4081)",
          "7030": "Avionics technicians (49-2091)",
          "2810": "News analysts, reporters and correspondents (27-3020)",
          "8010": "Lathe and turning machine tool setters, operators, and tenders, metal and plastic (51-40",
          "1860": "Miscellaneous social scientists and related workers (19-3090)",
          "8030": "Machinists (51-4041)",
          "0420": "Social and community service managers (11-9151)",
          "1510": "Nuclear engineers (17-2161)",
          "0300": "Engineering managers (11-9041)",
          "0310": "Food service managers (11-9051)",
          "1760": "Physical scientists, all other (19-2099)",
          "0200": "Farm, ranch, and other agricultural managers (11-9011)",
          "1650": "Medical scientists (19-1040)",
          "2860": "Miscellaneous media and communication workers (27-3090)",
          "4810": "Insurance sales agents (41-3021)",
          "2540": "Teacher assistants (25-9041)",
          "1200": "Actuaries (15-2011)",
          "4720": "Cashiers (41-2010)",
          "2320": "Secondary school teachers (25-2030)",
          "5820": "Word processors and typists (43-9022)",
          "4750": "Parts salespersons (41-2022)",
          "2330": "Special education teachers (25-2040)",
          "3320": "Diagnostic related technologists and technicians (29-2030)",
          "5610": "Shipping, receiving, and traffic clerks (43-5071)",
          "6840": "Mining machine operators (47-5040)",
          "2010": "Social workers (21-1020)",
          "2020": "Miscellaneous community and social service specialists (21-1090)",
          "7600": "Signal and track switch repairers (49-9097)",
          "3240": "Therapists, all other (29-1129)",
          "5550": "Postal service mail carriers (43-5052)",
          "6520": "Sheet metal workers (47-2211)",
          "8950": "Helpers--production workers (51-9198)",
          "4250": "Grounds maintenance workers (37-3010)",
          "4010": "First-line supervisors/managers of food preparation and serving workers (35-1012)",
          "3050": "Pharmacists (29-1051)",
          "9840": "Persons whose current labor force status is unemployed and last job was Armed Forces",
          "9730": "Shuttle car operators (53-7111)",
          "7310": "Heating, air conditioning, and refrigeration mechanics and installers (49-9021)",
          "6110": "Hunters and trappers (45-3021)",
          "5160": "Tellers (43-3071)",
          "6250": "Cement masons, concrete finishers, and terrazzo workers (47-2050)",
          "6260": "Construction laborers (47-2061)",
          "1930": "Geological and petroleum technicians (19-4041)",
          "7010": "Computer, automated teller, and office machine repairers (49-2011)",
          "1700": "Astronomers and physicists (19-2010)",
          "2800": "Announcers (27-3010)",
          "7150": "Automotive body and related repairers (49-3021)",
          "7050": "Electrical and electronics installers and repairers, transportation equipment (49-2093)",
          "9110": "Ambulance drivers and attendants, except emergency medical technicians (53-3011)",
          "2710": "Producers and directors (27-2012)",
          "0410": "Property, real estate, and community association managers (11-9141)",
          "1740": "Environmental scientists and geoscientists (19-2040)",
          "9000": "Supervisors, transportation and material moving workers (53-1000)",
          "8150": "Heat treating equipment setters, operators, and tenders, metal and plastic (51-4191)",
          "2720": "Athletes, coaches, umpires, and related workers (27-2020)",
          "8160": "Lay-out workers, metal and plastic (51-4192)",
          "8040": "Metal furnace and kiln operators and tenders (51-4050)",
          "3940": "Crossing guards (33-9091)",
          "8060": "Model makers and patternmakers, metal and plastic (51-4060)",
          "3600": "Nursing, psychiatric, and home health aides (31-1010)",
          "2750": "Musicians, singers, and related workers (27-2040)",
          "3840": "Parking enforcement workers (33-3041)",
          "5900": "Office machine operators, except computer (43-9071)",
          "2400": "Archivists, curators, and museum technicians (25-4010)",
          "0120": "Financial managers (11-3031)",
          "3620": "Physical therapist assistants and aides (31-2020)",
          "4950": "Door-to-door sales workers, news and street vendors, and related workers (41-9091)",
          "4710": "First-line supervisors/managers of non-retail sales workers (41-1012)"
        }
      }
    },
    "AAST2D": {
      "label": "AS: Allocation flag for EAST2D",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "AAST2C": {
      "label": "AS: Allocation flag for EAST2C",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "TJBOCC1": {
      "label": "JB: Occupation classification code",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "7310": "Heating, air conditioning, and refrigeration mechanics and installers (49-9021)",
          "7430": "Precision instrument and equipment repairers (49-9060)",
          "8400": "Textile cutting machine setters, operators, and tenders (51-6062)",
          "5140": "Payroll and timekeeping clerks (43-3051)",
          "6110": "Hunters and trappers (45-3021)",
          "0800": "Accountants and auditors (13-2011)",
          "8540": "Woodworking machine setters, operators, and tenders, except sawing (51-7042)",
          "4060": "Counter attendants, cafeteria, food concession, and coffee shop (35-3022)",
          "0810": "Appraisers and assessors of real estate (13-2021)",
          "8430": "Extruding and forming machine setters, operators, and tenders, synthetic and glass fiber",
          "1800": "Economists (19-3011)",
          "7360": "Millwrights (49-9044)",
          "1930": "Geological and petroleum technicians (19-4041)",
          "1940": "Nuclear technicians (19-4051)",
          "1710": "Atmospheric and space scientists (19-2021)",
          "0500": "Agents and business managers of artists, performers, and athletes (13-1011)",
          "9350": "Parking lot attendants (53-6021)",
          "3800": "Bailiffs, correctional officers, and jailers (33-3010)",
          "0540": "Claims adjusters, appraisers, examiners, and investigators (13-1030)",
          "0310": "Food service managers (11-9051)",
          "1400": "Computer hardware engineers (17-2061)",
          "1520": "Petroleum engineers (17-2171)",
          "1760": "Physical scientists, all other (19-2099)",
          "3940": "Crossing guards (33-9091)",
          "4800": "Advertising sales agents (41-3011)",
          "3600": "Nursing, psychiatric, and home health aides (31-1010)",
          "2750": "Musicians, singers, and related workers (27-2040)",
          "4810": "Insurance sales agents (41-3021)",
          "3860": "Transit and railroad police (33-3052)",
          "0220": "Construction managers (11-9021)",
          "0100": "Administrative services managers (11-3011)",
          "3730": "Supervisors, protective service workers, all other (33-1099)",
          "3620": "Physical therapist assistants and aides (31-2020)",
          "4850": "Sales representatives, wholesale and manufacturing (41-4010)",
          "2300": "Preschool and kindergarten teachers (25-2010)",
          "3650": "Medical assistants and other healthcare support occupations (31-909X)",
          "2320": "Secondary school teachers (25-2030)",
          "1230": "Statisticians (15-2041)",
          "2310": "Elementary and middle school teachers (25-2020)",
          "5820": "Word processors and typists (43-9022)",
          "6910": "Roof bolters, mining (47-5061)",
          "1240": "Miscellaneous mathematical science occupations (15-2090)",
          "4520": "Miscellaneous personal appearance workers (39-5090)",
          "2100": "Lawyers (23-1011)",
          "4530": "Baggage porters, bellhops, and concierges (39-6010)",
          "6830": "Explosives workers, ordnance handling experts, and blasters (47-5031)",
          "0050": "Marketing and sales managers (11-2020)",
          "5630": "Weighers, measurers, checkers, and samplers, recordkeeping (43-5111)",
          "4300": "First-line supervisors/managers of gaming workers (39-1010)",
          "2000": "Counselors (21-1010)",
          "5400": "Receptionists and information clerks (43-4171)",
          "5530": "Meter readers, utilities (43-5041)",
          "4200": "First-line supervisors/managers of housekeeping and janitorial workers (37-1011)",
          "5410": "Reservation and transportation ticket agents and travel clerks (43-4181)",
          "7710": "Aircraft structure, surfaces, rigging, and systems assemblers (51-2011)",
          "2020": "Miscellaneous community and social service specialists (21-1090)",
          "7960": "Drilling and boring machine tool setters, operators, and tenders, metal and plastic (51-",
          "7610": "Helpers--installation, maintenance, and repair workers (49-9098)",
          "5560": "Postal service mail sorters, processors, and processing machine operators (43-5053)",
          "5200": "Brokerage clerks (43-4011)",
          "7740": "Structural metal fabricators and fitters (51-2041)",
          "2050": "Directors, religious activities and education (21-2021)",
          "4240": "Pest control workers (37-2021)",
          "2060": "Religious workers, all other (21-2099)",
          "4140": "Dishwashers (35-9021)",
          "6320": "Operating engineers and other construction equipment operators (47-2073)",
          "7410": "Electrical power-line installers and repairers (49-9051)",
          "8500": "Cabinetmakers and bench carpenters (51-7011)",
          "4030": "Food preparation workers (35-2021)",
          "6210": "Boilermakers (47-2011)",
          "9720": "Refuse and recyclable material collectors (53-7081)",
          "9600": "Industrial truck and tractor operators (53-7051)",
          "5250": "Eligibility interviewers, government programs (43-4061)",
          "9730": "Shuttle car operators (53-7111)",
          "5010": "Switchboard operators, including answering service (43-2011)",
          "8530": "Sawing machine setters, operators, and tenders, wood (51-7041)",
          "8420": "Textile winding, twisting, and drawing out machine setters, operators, and tenders (51-6",
          "9630": "Machine feeders and offbearers (53-7063)",
          "6240": "Carpet, floor, and tile installers and finishers (47-2040)",
          "1900": "Agricultural and food science technicians (19-4011)",
          "9520": "Dredge, excavating, and loading machine operators (53-7030)",
          "0830": "Credit analysts (13-2041)",
          "8210": "Tool grinders, filers, and sharpeners (51-4194)",
          "8450": "Upholsterers (51-6093)",
          "0600": "Cost estimators (13-1051)",
          "0840": "Financial analysts (13-2051)",
          "1820": "Psychologists (19-3030)",
          "1830": "Sociologists (19-3041)",
          "1720": "Chemists and materials scientists (19-2030)",
          "8130": "Tool and die makers (51-4111)",
          "8010": "Lathe and turning machine tool setters, operators, and tenders, metal and plastic (51-40",
          "2700": "Actors (27-2011)",
          "0520": "Wholesale and retail buyers, except farm products (13-1022)",
          "9110": "Ambulance drivers and attendants, except emergency medical technicians (53-3011)",
          "3920": "Security guards and gaming surveillance officers (33-9030)",
          "0420": "Social and community service managers (11-9151)",
          "0300": "Engineering managers (11-9041)",
          "9260": "Subway, streetcar, and other rail transportation workers (53-40XX)",
          "3830": "Fish and game wardens (33-3031)",
          "8060": "Model makers and patternmakers, metal and plastic (51-4060)",
          "0230": "Education administrators (11-9030)",
          "1560": "Surveying and mapping technicians (17-3031)",
          "1430": "Industrial engineers, including health and safety (17-2110)",
          "4700": "First-line supervisors/managers of retail sales workers (41-1011)",
          "1330": "Agricultural engineers (17-2021)",
          "0120": "Financial managers (11-3031)",
          "1200": "Actuaries (15-2011)",
          "1340": "Biomedical engineers (17-2031)",
          "1110": "Network systems and data communications analysts (15-1081)",
          "1100": "Network and computer systems administrators (15-1071)",
          "2330": "Special education teachers (25-2040)",
          "4500": "Barbers (39-5011)",
          "6930": "Helpers--extraction workers (47-5081)",
          "3320": "Diagnostic related technologists and technicians (29-2030)",
          "7930": "Forging machine setters, operators, and tenders, metal and plastic (51-4022)",
          "5510": "Couriers and messengers (43-5021)",
          "3210": "Recreational therapists (29-1125)",
          "7920": "Extruding and drawing machine setters, operators, and tenders, metal and plastic (51-402",
          "1040": "Computer support specialists (15-1041)",
          "6740": "Rail-track laying and maintenance equipment operators (47-4061)",
          "2140": "Paralegals and legal assistants (23-2011)",
          "6510": "Roofers (47-2181)",
          "1060": "Database administrators (15-1061)",
          "6760": "Miscellaneous construction and related workers (47-4090)",
          "6520": "Sheet metal workers (47-2211)",
          "8830": "Photographic process workers and processing machine operators (51-9130)",
          "4120": "Food servers, nonrestaurant (35-3041)",
          "4010": "First-line supervisors/managers of food preparation and serving workers (35-1012)",
          "8740": "Inspectors, testers, sorters, samplers, and weighers (51-9061)",
          "5110": "Billing and posting clerks and machine operators (43-3021)",
          "8640": "Chemical processing machine setters, operators, and tenders (51-9010)",
          "5020": "Telephone operators (43-2021)",
          "7560": "Riggers (49-9096)",
          "8410": "Textile knitting and weaving machine setters, operators, and tenders (51-6063)",
          "6360": "Glaziers (47-2121)",
          "8310": "Pressers, textile, garment, and related materials (51-6021)",
          "9640": "Packers and packagers, hand (53-7064)",
          "0700": "Logisticians (13-1081)",
          "7110": "Electronic equipment installers and repairers, motor vehicles (49-2096)",
          "6020": "Animal breeders (45-2021)",
          "8320": "Sewing machine operators (51-6031)",
          "8000": "Grinding, lapping, polishing, and buffing machine tool setters, operators, and tenders,",
          "3910": "Private detectives and investigators (33-9021)",
          "8260": "Printing machine operators (51-5023)",
          "9120": "Bus drivers (53-3020)",
          "8030": "Machinists (51-4041)",
          "9240": "Railroad conductors and yardmasters (53-4031)",
          "4900": "Models, demonstrators, and product promoters (41-9010)",
          "3820": "Detectives and criminal investigators (33-3021)",
          "3950": "Lifeguards and other protective service workers (33-909X)",
          "4920": "Real estate brokers and sales agents (41-9020)",
          "4940": "Telemarketers (41-9041)",
          "3750": "Fire inspectors (33-2020)",
          "4960": "Sales and related workers, all other (41-9099)",
          "2540": "Teacher assistants (25-9041)",
          "4710": "First-line supervisors/managers of non-retail sales workers (41-1012)",
          "5920": "Statistical assistants (43-9111)",
          "5800": "Computer operators (43-9011)",
          "2550": "Other education, training, and library workers (25-90XX)",
          "3310": "Dental hygienists (29-2021)",
          "4510": "Hairdressers, hairstylists, and cosmetologists (39-5012)",
          "4410": "Motion picture projectionists (39-3021)",
          "3200": "Radiation therapists (29-1124)",
          "7950": "Cutting, punching, and press machine setters, operators, and tenders, metal and plastic",
          "4320": "First-line supervisors/managers of personal service workers (39-1021)",
          "6500": "Reinforcing iron and rebar workers (47-2171)",
          "5540": "Postal service clerks (43-5051)",
          "7720": "Electrical, electronics, and electromechanical assemblers (51-2020)",
          "3120": "Podiatrists (29-1081)",
          "4460": "Funeral service workers (39-4000)",
          "7730": "Engine and other machine assemblers (51-2031)",
          "3130": "Registered nurses (29-1111)",
          "8710": "Cutting workers (51-9030)",
          "3260": "Health diagnosing and treating practitioners, all other (29-1199)",
          "5330": "Loan interviewers and clerks (43-4131)",
          "6420": "Painters, construction and maintenance (47-2141)",
          "8840": "Semiconductor processors (51-9141)",
          "4250": "Grounds maintenance workers (37-3010)",
          "8850": "Cementing and gluing machine operators and tenders (51-9191)",
          "7520": "Commercial divers (49-9092)",
          "8730": "Furnace, kiln, oven, drier, and kettle operators and tenders (51-9051)",
          "3040": "Optometrists (29-1041)",
          "5350": "Order clerks (43-4151)",
          "-1": "Not in Universe",
          "8620": "Water and liquid waste treatment plant and system operators (51-8031)",
          "3050": "Pharmacists (29-1051)",
          "8630": "Miscellaneous plant and system operators (51-8090)",
          "5120": "Bookkeeping, accounting, and auditing clerks (43-3031)",
          "0900": "Financial examiners (13-2061)",
          "4040": "Bartenders (35-3011)",
          "6100": "Fishers and related fishing workers (45-3011)",
          "9610": "Cleaners of vehicles and equipment (53-7061)",
          "9500": "Conveyor operators and tenders (53-7011)",
          "5260": "File Clerks (43-4071)",
          "7210": "Bus and truck mechanics and diesel engine specialists (49-3031)",
          "5150": "Procurement clerks (43-3061)",
          "0820": "Budget analysts (13-2031)",
          "9650": "Pumping station operators (53-7070)",
          "7350": "Maintenance workers, machinery (49-9043)",
          "0710": "Management analysts (13-1111)",
          "9300": "Sailors and marine oilers (53-5011)",
          "7010": "Computer, automated teller, and office machine repairers (49-2011)",
          "7130": "Security and fire alarm systems installers (49-2098)",
          "9200": "Locomotive engineers and operators (53-4010)",
          "7260": "Miscellaneous vehicle and mobile equipment mechanics, installers, and repairers (49-3090",
          "0620": "Human resources, training, and labor relations specialists (13-1070)",
          "8120": "Multiple machine tool setters, operators, and tenders, metal and plastic (51-4081)",
          "1840": "Urban and regional planners (19-3051)",
          "2820": "Public relations specialists (27-3031)",
          "8020": "Milling and planing machine setters, operators, and tenders, metal and plastic (51-4035)",
          "2710": "Producers and directors (27-2012)",
          "2600": "Artists and related workers (27-1010)",
          "2840": "Technical writers (27-3042)",
          "0560": "Compliance officers, except agriculture, construction, health and safety, and transporta",
          "0200": "Farm, ranch, and other agricultural managers (11-9011)",
          "1410": "Electrical and electronic engineers (17-2070)",
          "1530": "Engineers, all other (17-2199)",
          "3710": "First-line supervisors/managers of police and detectives (33-1012)",
          "0340": "Lodging managers (11-9081)",
          "0330": "Gaming managers (11-9071)",
          "1540": "Drafters (17-3010)",
          "3720": "First-line supervisors/managers of fire fighting and prevention workers (33-1021)",
          "4930": "Sales engineers (41-9031)",
          "5900": "Office machine operators, except computer (43-9071)",
          "9040": "Air traffic controllers and airfield operations specialists (53-2020)",
          "3610": "Occupational therapist assistants and aides (31-2010)",
          "3740": "Fire fighters (33-2011)",
          "4830": "Travel agents (41-3041)",
          "4600": "Child care workers (39-9011)",
          "5810": "Data entry keyers (43-9021)",
          "1350": "Chemical engineers (17-2041)",
          "0140": "Industrial production managers(11-3051)",
          "4610": "Personal and home care aides (39-9021)",
          "3540": "Other healthcare practitioners and technical occupations (29-9000)",
          "0150": "Purchasing managers (11-3061)",
          "6920": "Roustabouts, oil and gas (47-5071)",
          "1010": "Computer programmers (15-1021)",
          "6820": "Earth drillers, except oil and gas (47-5021)",
          "5500": "Cargo and freight agents (43-5011)",
          "7940": "Rolling machine setters, operators, and tenders, metal and plastic (51-4023)",
          "3220": "Respiratory therapists (29-1126)",
          "6600": "Helpers, construction trades (47-3010)",
          "4210": "First-line supervisors/managers of landscaping, lawn service, and groundskeeping workers",
          "6750": "Septic tank servicers and sewer pipe cleaners (47-4071)",
          "7600": "Signal and track switch repairers (49-9097)",
          "3240": "Therapists, all other (29-1129)",
          "2150": "Miscellaneous legal support workers (23-2090)",
          "5550": "Postal service mail carriers (43-5052)",
          "6400": "Insulation workers (47-2130)",
          "2040": "Clergy (21-2011)",
          "3250": "Veterinarians (29-1131)",
          "7510": "Coin, vending, and amusement machine servicers and repairers (49-9091)",
          "8600": "Power plant operators, distributors, and dispatchers (51-8010)",
          "5220": "Court, municipal, and license clerks (43-4031)",
          "5100": "Bill and account collectors (43-3011)",
          "9840": "Persons whose current labor force status is unemployed and last job was Armed Forces",
          "5000": "First-line supervisors/managers of office and administrative support workers (43-1011)",
          "8510": "Furniture finishers (51-7021)",
          "4160": "Food preparation and serving related workers, all other (35-9099)",
          "9740": "Tank car, truck, and ship loaders (53-7121)",
          "9620": "Laborers and freight, stock, and material movers, hand (53-7062)",
          "5030": "Communications equipment operators, all other (43-2099)",
          "7330": "Industrial and refractory machinery mechanics (49-904X)",
          "0930": "Tax examiners, collectors, and revenue agents (13-2081)",
          "8330": "Shoe and leather workers and repairers (51-6041)",
          "9420": "Other transportation workers (53-60XX)",
          "7240": "Small engine mechanics (49-3050)",
          "0720": "Meeting and convention planners (13-1121)",
          "6040": "Graders and sorters, agricultural products (45-2041)",
          "8350": "Tailors, dressmakers, and sewers (51-6050)",
          "2920": "Television, video, and motion picture camera operators and editors (27-4030)",
          "1600": "Agricultural and food scientists (19-1010)",
          "7040": "Electric motor, power tool, and related repairers (49-2092)",
          "9340": "Bridge and lock tenders (53-6011)",
          "0410": "Property, real estate, and community association managers (11-9141)",
          "9130": "Driver/sales workers and truck drivers (53-3030)",
          "1640": "Conservation scientists and foresters (19-1030)",
          "0430": "Managers, all other (11-9199)",
          "1420": "Environmental engineers (17-2081)",
          "1310": "Surveyors, cartographers, and photogrammetrists (17-1020)",
          "5910": "Proofreaders and copy markers (43-9081)",
          "4950": "Door-to-door sales workers, news and street vendors, and related workers (41-9091)",
          "3640": "Dental assistants (31-9091)",
          "1460": "Mechanical engineers (17-2141)",
          "4740": "Counter and rental clerks (41-2021)",
          "3530": "Miscellaneous health technologists and technicians (29-2090)",
          "3400": "Emergency medical technicians and paramedics (29-2041)",
          "3520": "Opticians, dispensing (29-2081)",
          "5700": "Secretaries and administrative assistants (43-6010)",
          "5840": "Insurance claims and policy processing clerks (43-9041)",
          "3410": "Health diagnosing and treating practitioner support technicians (29-2050)",
          "4620": "Recreation and fitness workers (39-9030)",
          "6940": "Other extraction workers (47-50XX)",
          "2340": "Other teachers and instructors (25-3000)",
          "3300": "Clinical laboratory technologists and technicians (29-2010)",
          "5600": "Production, planning, and expediting clerks (43-5061)",
          "4650": "Personal care and service workers, all other (39-9099)",
          "5860": "Office clerks, general (43-9061)",
          "4430": "Miscellaneous entertainment attendants and related workers (39-3090)",
          "2010": "Social workers (21-1020)",
          "8920": "Molders, shapers, and casters, except metal and plastic (51-9195)",
          "8910": "Etchers and engravers (51-9194)",
          "5420": "Information and record clerks, all other (43-4199)",
          "8810": "Painting workers (51-9120)",
          "7850": "Food cooking machine operators and tenders (51-3093)",
          "6530": "Structural iron and steel workers (47-2221)",
          "8950": "Helpers--production workers (51-9198)",
          "3140": "Audiologists (29-1121)",
          "7750": "Miscellaneous assemblers and fabricators (51-2090)",
          "4000": "Chefs and head cooks (35-1011)",
          "8610": "Stationary engineers and boiler operators (51-8021)",
          "3160": "Physical therapists (29-1123)",
          "6440": "Pipelayers, plumbers, pipefitters, and steamfitters (47-2150)",
          "5240": "Customer service representatives (43-4051)",
          "7540": "Locksmiths and safe repairers (49-9094)",
          "7550": "Manufactured building and mobile home installers (49-9095)",
          "8520": "Model makers and patternmakers, wood (51-7030)",
          "6230": "Carpenters (47-2031)",
          "7200": "Automotive service technicians and mechanics (49-3023)",
          "7320": "Home appliance repairers (49-9031)",
          "5160": "Tellers (43-3071)",
          "1910": "Biological technicians (19-4021)",
          "0940": "Tax preparers (13-2082)",
          "9310": "Ship and boat captains and operators (53-5020)",
          "8340": "Shoe machine operators and tenders (51-6042)",
          "1700": "Astronomers and physicists (19-2010)",
          "0730": "Other business operations specialists (13-11XX)",
          "9560": "Hoist and winch operators (53-7041)",
          "7140": "Aircraft mechanics and service technicians (49-3011)",
          "2800": "Announcers (27-3010)",
          "0860": "Insurance underwriters (13-2053)",
          "9330": "Ship engineers (53-5031)",
          "1960": "Other life, physical, and social science technicians (19-40XX)",
          "8250": "Prepress technicians and workers (51-5022)",
          "7050": "Electrical and electronics installers and repairers, transportation equipment (49-2093)",
          "8140": "Welding, soldering, and brazing workers (51-4120)",
          "1740": "Environmental scientists and geoscientists (19-2040)",
          "1860": "Miscellaneous social scientists and related workers (19-3090)",
          "9360": "Service station attendants (53-6031)",
          "2960": "Media and communication equipment workers, all other (27-4099)",
          "3700": "First-line supervisors/managers of correctional officers (33-1011)",
          "0320": "Funeral directors (11-9061)",
          "2860": "Miscellaneous media and communication workers (27-3090)",
          "9030": "Aircraft pilots and flight engineers (53-2010)",
          "0350": "Medical and health services managers (11-9111)",
          "2400": "Archivists, curators, and museum technicians (25-4010)",
          "4820": "Securities, commodities, and financial services sales agents (41-3031)",
          "0110": "Computer and information systems managers (11-3021)",
          "0130": "Human resources managers (11-3040)",
          "2430": "Librarians (25-4021)",
          "1210": "Mathematicians (15-2021)",
          "4750": "Parts salespersons (41-2022)",
          "1000": "Computer scientists and systems analysts (15-10XX)",
          "2200": "Postsecondary teachers (25-1000)",
          "4760": "Retail salespersons (41-2031)",
          "4640": "Residential advisors (39-9041)",
          "6700": "Elevator installers and repairers (47-4021)",
          "4420": "Ushers, lobby attendants, and ticket takers (39-3031)",
          "6710": "Fence erectors (47-4031)",
          "4550": "Transportation attendants (39-6030)",
          "8900": "Cooling and freezing equipment operators and tenders (51-9193)",
          "3230": "Speech-language pathologists (29-1127)",
          "7700": "First-line supervisors/managers of production and operating workers (51-1011)",
          "7840": "Food batchmakers (51-3092)",
          "5300": "Hotel, motel, and resort desk clerks (43-4081)",
          "5310": "Interviewers, except eligibility and loan (43-4111)",
          "3010": "Dentists (29-1020)",
          "7620": "Other installation, maintenance, and repair workers (49-909X)",
          "5210": "Correspondence clerks (43-4021)",
          "6300": "Paving, surfacing, and tamping equipment operators (47-2071)",
          "8860": "Cleaning, washing, and metal pickling equipment operators and tenders (51-9192)",
          "4150": "Hosts and hostesses, restaurant, lounge, and coffee shop (35-9031)",
          "5360": "Human resources assistants, except payroll and timekeeping (43-4161)",
          "6460": "Plasterers and stucco masons (47-2161)",
          "6220": "Brickmasons, blockmasons, and stonemasons (47-2020)",
          "8760": "Medical, dental, and ophthalmic laboratory technicians (51-9080)",
          "0910": "Loan counselors and officers (13-2070)",
          "4050": "Combined food preparation and serving workers, including fast food (35-3021)",
          "6120": "Forest and conservation workers (45-4011)",
          "8300": "Laundry and dry-cleaning workers (51-6011)",
          "6130": "Logging workers (45-4020)",
          "7340": "Maintenance and repair workers, general (49-9042)",
          "7100": "Electrical and electronics repairers, industrial and utility (49-209X)",
          "8200": "Plating and coating machine setters, operators, and tenders, metal and plastic (51-4193)",
          "9410": "Transportation inspectors (53-6051)",
          "8440": "Fabric and apparel patternmakers (51-6092)",
          "1920": "Chemical technicians (19-4031)",
          "0950": "Financial specialists, all other (13-2099)",
          "7000": "First-line supervisors/managers of mechanics, installers, and repairers (49-1011)",
          "7120": "Electronic home entertainment equipment installers and repairers (49-2097)",
          "1810": "Market and survey researchers (19-3020)",
          "8100": "Molders and molding machine setters, operators, and tenders, metal and plastic (51-4070)",
          "2910": "Photographers (27-4021)",
          "6050": "Miscellaneous agricultural workers (45-2090)",
          "8360": "Textile bleaching and dyeing machine operators and tenders (51-6061)",
          "0510": "Purchasing agents and buyers, farm products (13-1021)",
          "2810": "News analysts, reporters and correspondents (27-3020)",
          "9230": "Railroad brake, signal, and switch operators (53-4021)",
          "2830": "Editors (27-3041)",
          "8160": "Lay-out workers, metal and plastic (51-4192)",
          "8040": "Metal furnace and kiln operators and tenders (51-4050)",
          "2850": "Writers and authors (27-3043)",
          "1650": "Medical scientists (19-1040)",
          "1550": "Engineering technicians, except drafters (17-3020)",
          "2760": "Entertainers and performers, sports and related workers, all other (27-2099)",
          "9150": "Motor vehicle operators, all other (53-3099)",
          "0210": "Farmers and ranchers (11-9012)",
          "3840": "Parking enforcement workers (33-3041)",
          "1440": "Marine engineers and naval architects (17-2121)",
          "3850": "Police and sheriff's patrol officers(33-3051)",
          "1450": "Materials engineers (17-2131)",
          "0360": "Natural sciences managers (11-9121)",
          "3500": "Licensed practical and licensed vocational nurses (29-2061)",
          "1320": "Aerospace engineers (17-2011)",
          "1220": "Operations research analysts (15-2031)",
          "3510": "Medical records and health information technicians (29-2071)",
          "3630": "Massage therapists (31-9011)",
          "4840": "Sales representatives, services, all other (41-3099)",
          "5930": "Office and administrative support workers, all other (43-9199)",
          "2440": "Library technicians (25-4031)",
          "5830": "Desktop publishers (43-9031)",
          "6800": "Derrick, rotary drill, and service unit operators, oil, gas, and mining (47-5010)",
          "5850": "Mail clerks and mail machine operators, except postal service (43-9051)",
          "7900": "Computer control programmers and operators (51-4010)",
          "5620": "Stock clerks and order fillers (43-5081)",
          "1020": "Computer software engineers (15-1030)",
          "5610": "Shipping, receiving, and traffic clerks (43-5071)",
          "6720": "Hazardous materials removal workers (47-4041)",
          "6840": "Mining machine operators (47-5040)",
          "7800": "Bakers (51-3011)",
          "5520": "Dispatchers (43-5030)",
          "6730": "Highway maintenance workers (47-4051)",
          "7830": "Food and tobacco roasting, baking, and drying machine operators and tenders (51-3091)",
          "3110": "Physician assistants (29-1071)",
          "8930": "Paper goods machine setters, operators, and tenders (51-9196)",
          "3000": "Chiropractors (29-1011)",
          "4340": "Animal trainers (39-2011)",
          "8940": "Tire builders (51-9197)",
          "4230": "Maids and housekeeping cleaners (37-2012)",
          "8720": "Extruding, forming, pressing, and compacting machine setters, operators, and tenders (51",
          "3030": "Dietitians and nutritionists (29-1031)",
          "4020": "Cooks (35-2010)",
          "6200": "First-line supervisors/managers of construction trades and extraction workers (47-1011)",
          "3060": "Physicians and surgeons (29-1060)",
          "5130": "Gaming cage workers (43-3041)",
          "6350": "Electricians (47-2111)",
          "8650": "Crushing, grinding, polishing, mixing, and blending workers (51-9020)",
          "9510": "Crane and tower operators (53-7021)",
          "6000": "First-line supervisors/managers of farming, fishing, and forestry workers (45-1010)",
          "9750": "Material moving workers, all other (53-7199)",
          "6010": "Agricultural inspectors (45-2011)",
          "7220": "Heavy vehicle and mobile equipment service technicians and mechanics (49-3040)",
          "8550": "Woodworkers, all other (51-7099)",
          "6250": "Cement masons, concrete finishers, and terrazzo workers (47-2050)",
          "6260": "Construction laborers (47-2061)",
          "2900": "Broadcast and sound engineering technicians and radio operators (27-4010)",
          "8220": "Metalworkers and plastic workers, all other (51-4199)",
          "8460": "Textile, apparel, and furnishings workers, all other (51-6099)",
          "0850": "Personal financial advisors (13-2052)",
          "8230": "Bookbinders and bindery workers (51-5010)",
          "7020": "Radio and telecommunications equipment installers and repairers (49-2020)",
          "7150": "Automotive body and related repairers (49-3021)",
          "8240": "Job printers (51-5021)",
          "7030": "Avionics technicians (49-2091)",
          "3900": "Animal control workers (33-9011)",
          "7160": "Automotive glass installers and repairers (49-3022)",
          "1610": "Biological scientists (19-1020)",
          "1500": "Mining and geological engineers, including mining safety engineers (17-2151)",
          "0530": "Purchasing agents, except wholesale, retail, and farm products (13-1023)",
          "9000": "Supervisors, transportation and material moving workers (53-1000)",
          "8150": "Heat treating equipment setters, operators, and tenders, metal and plastic (51-4191)",
          "1510": "Nuclear engineers (17-2161)",
          "2720": "Athletes, coaches, umpires, and related workers (27-2020)",
          "9140": "Taxi drivers and chauffeurs (53-3041)",
          "2740": "Dancers and choreographers (27-2030)",
          "1300": "Architects, except naval (17-1010)",
          "2630": "Designers (27-1020)",
          "0010": "Chief executives (11-1011)",
          "4720": "Cashiers (41-2010)",
          "0020": "General and operations managers (11-1021)",
          "1360": "Civil engineers (17-2051)",
          "0040": "Advertising and promotions managers (11-2011)",
          "0160": "Transportation, storage, and distribution managers (11-3071)",
          "4400": "Gaming services workers (39-3010)",
          "4540": "Tour and travel guides (39-6020)",
          "0060": "Public relations managers (11-2031)",
          "7810": "Butchers and other meat, poultry, and fish processing workers (51-3020)",
          "8800": "Packaging and filling machine operators and tenders (51-9111)",
          "4220": "Janitors and building cleaners (37-201X)",
          "4350": "Nonfarm animal caretakers (39-2021)",
          "4110": "Waiters and waitresses (35-3031)",
          "5320": "Library assistants, clerical (43-4121)",
          "8960": "Production workers, all other (51-9199)",
          "6660": "Construction and building inspectors (47-4011)",
          "3150": "Occupational therapists (29-1122)",
          "4130": "Dining room and cafeteria attendants and bartender helpers (35-9011)",
          "5340": "New accounts clerks (43-4141)",
          "6430": "Paperhangers (47-2142)",
          "6310": "Pile-driver operators (47-2072)",
          "5230": "Credit authorizers, checkers, and clerks (43-4041)",
          "8750": "Jewelers and precious stone and metal workers (51-9071)",
          "7420": "Telecommunications line installers and repairers (49-9052)",
          "6330": "Drywall installers, ceiling tile installers, and tapers (47-2080)",
          "7300": "Control and valve installers and repairers (49-9010)"
        }
      }
    },
    "A10AMT": {
      "label": "GI: Allocation flag for T10AMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed"
        }
      }
    },
    "T01AMTK": {
      "label": "GI: Amount of Social Security - Child (ISS Code 1)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "99999",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "ASSICHLD": {
      "label": "GI: Allocation flag for ESSICHLD",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed"
        }
      }
    },
    "EPAOTHR6": {
      "label": "GI: Whether ... received welfare assistance",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not in Universe",
          "2": "No"
        }
      }
    },
    "EPAOTHR5": {
      "label": "GI: Whether ... received housing assistance",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "1": "Yes",
          "-1": "Not in Universe"
        }
      }
    },
    "THUNEMP": {
      "label": "HH: Total Household Unemployment Income Recode",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "0",
            "max": "150000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "TPYRATE1": {
      "label": "JB: Regular hourly pay rate",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not in universe or none"
        },
        "range": [
          {
            "min": "0.01",
            "max": "35.0",
            "description": "Dollars and cents (two implied decimals)"
          }
        ]
      }
    },
    "TPYRATE2": {
      "label": "JB: Regular hourly pay rate",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not in universe or none"
        },
        "range": [
          {
            "min": "0.01",
            "max": "35.0",
            "description": "Dollars and cents (two implied decimals)"
          }
        ]
      }
    },
    "EASST10": {
      "label": "ED: Employer provided educational assistance",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Received",
          "2": "Did not receive",
          "-1": "Not in Universe"
        }
      }
    },
    "RHNF": {
      "label": "HH: Number of families and pseudo families in this hhld",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "1",
            "max": "30",
            "description": "Number of families and pseudo families in household"
          }
        ]
      }
    },
    "AR38": {
      "label": "GI: Allocation flag for ER38",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "EASST12": {
      "label": "ED: Aid from a state or local welfare office",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Did not receive",
          "-1": "Not in Universe",
          "1": "Received"
        }
      }
    },
    "EASST11": {
      "label": "ED: Other Financial Aid excl. aid from parents, trust,etc",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "2": "Did not receive",
          "1": "Received"
        }
      }
    },
    "AR39": {
      "label": "GI: Allocation flag for ER39",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "AR36": {
      "label": "GI: Allocation flag for ER36",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "AR34": {
      "label": "GI: Allocation flag for ER34",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed"
        }
      }
    },
    "AR35": {
      "label": "GI: Allocation flag for ER35",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "AR32": {
      "label": "GI: Allocation flag for ER32",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation",
          "0": "Not imputed"
        }
      }
    },
    "EASST09": {
      "label": "ED: Grant/Scholarship from other source",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Did not receive",
          "-1": "Not in Universe",
          "1": "Received"
        }
      }
    },
    "AR30": {
      "label": "GI: Allocation flag for ER30",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "EASST08": {
      "label": "ED: Grant/Scholarship from the state",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "2": "Did not receive",
          "1": "Received"
        }
      }
    },
    "AR31": {
      "label": "GI: Allocation flag for ER31",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed"
        }
      }
    },
    "EAST3A": {
      "label": "AS: Mutual funds owned",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "EAST3C": {
      "label": "AS: Municipal or corporate bonds owned",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "AFREEBRK": {
      "label": "HH: Allocation flag for EFREEBRK",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation"
        }
      }
    },
    "EAST3B": {
      "label": "AS: Stocks owned",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "EAST3E": {
      "label": "AS: Mortgage held",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "EAST3D": {
      "label": "AS: U.S. government securities owned",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "RNKBRK": {
      "label": "HH:  Number of children receiving complete breakfast",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "1",
            "max": "30",
            "description": "Number of children"
          }
        ]
      }
    },
    "TMDOINT": {
      "label": "AS: Amt of monthly interest from own money market deposit",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "2000",
            "description": "Dollars"
          }
        ]
      }
    },
    "ESSSELF": {
      "label": "GI: Receipt of Social Security payments for self",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "EEGYPMT3": {
      "label": "HH: Energy assist paymnt to utils, fuel dealers, landlord",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not in Universe",
          "2": "No"
        }
      }
    },
    "WSFINWGT": {
      "label": "WW: 'WPFINWGT' for head of subfamily",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "is-weight": true,
      "values": {
        "item": {
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "0.0",
            "max": "99999.9999",
            "description": "Weight of related subfamily reference person"
          }
        ]
      }
    },
    "EEGYPMT1": {
      "label": "HH: Energy assistance payment by check",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "1": "Yes",
          "-1": "Not in Universe"
        }
      }
    },
    "EEGYPMT2": {
      "label": "HH: Energy assistance payment by coupons",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "T24AMT": {
      "label": "GI: Amount of other welfare (ISS Code 24)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "99999",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "AEGYPMT": {
      "label": "HH: Allocation flag for EEGYPMT1-EEGYPMT3",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "AABRE": {
      "label": "LF: Allocation flag for EABRE",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "1": "Statistical imputation(hot deck)",
          "3": "Logical imputation(derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed"
        }
      }
    },
    "EASST01": {
      "label": "ED: Federal Pell Grant",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "2": "Did not receive",
          "1": "Received"
        }
      }
    },
    "ECNTRC2": {
      "label": "JB: Coverage by union or something like a union contract",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "RFID": {
      "label": "FA: Family ID Number for this month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "1",
            "max": "120",
            "description": "Family ID number"
          }
        ]
      }
    },
    "ECNTRC1": {
      "label": "JB: Coverage by union or something like a union contract",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "1": "Yes",
          "-1": "Not in Universe"
        }
      }
    },
    "EASST03": {
      "label": "ED: Assistance from college (or fed) work study program",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "2": "Did not receive",
          "1": "Received"
        }
      }
    },
    "AAST4B": {
      "label": "AS: Allocation flag for EAST4B",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "AAST4A": {
      "label": "AS: Allocation flag for EAST4A",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed"
        }
      }
    },
    "EHIYNGKD": {
      "label": "HI: Coverage of younger child (under 20) outside the hhld",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No, not covered",
          "-1": "Not in Universe",
          "1": "Yes, covered"
        }
      }
    },
    "TINTINC": {
      "label": "AS: Amount of all interest income",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in univerese"
        },
        "range": [
          {
            "min": "1",
            "max": "999999",
            "description": "Dollars"
          }
        ]
      }
    },
    "EASST05": {
      "label": "ED: Loan that has to be repaid (Stafford or Perkins)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Received",
          "2": "Did not receive"
        }
      }
    },
    "EASST04": {
      "label": "ED: Other Federal Grant or Program; e.g., SEOG, ROTC",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Received",
          "2": "Did not receive",
          "-1": "Not in Universe"
        }
      }
    },
    "EBUSCNTR": {
      "label": "LF: Number of businesses owned during reference period",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Owned contingent business(es) only",
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "1",
            "max": "25",
            "description": "Number of businesses"
          }
        ]
      }
    },
    "EASST07": {
      "label": "ED: Teaching or Research Assistantship from the school",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Received",
          "2": "Did not receive"
        }
      }
    },
    "AGVOINT": {
      "label": "AS: Allocation flag for TGVOINT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "6": "Derived from range based values",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "EASST06": {
      "label": "ED: Grant, Scholarship, or Tuition remission from school",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Received",
          "2": "Did not receive",
          "-1": "Not in Universe"
        }
      }
    },
    "AR42": {
      "label": "GI: Allocation flag for ER42",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "ENATCIT": {
      "label": "PE: How the respondent became a US citizen",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "4": "Born in a U.S. Island Area or born in the United States",
          "5": "Born abroad of U.S. citizen parent or parents",
          "2": "Through you or your spouse's military service in U.S. Armed Forces",
          "1": "Naturalized",
          "3": "Adopted by U.S. citizen parent or parents"
        }
      }
    },
    "AMLMSUM": {
      "label": "LF: Allocation flag for TMLMSUM",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "1": "Statistical imputation(hot deck)",
          "2": "Cold deck imputation",
          "3": "Logical imputation(derivation)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "EAST2B": {
      "label": "AS: Savings account owned",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "APACASH1": {
      "label": "GI: Allocation flag for EPACASH1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "AAST4C": {
      "label": "AS: Allocation flag for EAST4C",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation"
        }
      }
    },
    "EAST2A": {
      "label": "AS: Interest earning checking account owned",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "APACASH2": {
      "label": "GI: Allocation flag for EPACASH2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation"
        }
      }
    },
    "APACASH3": {
      "label": "GI: Allocation flag for EPACASH3",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "EAST2D": {
      "label": "AS: Certificate of deposit owned",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "EAST2C": {
      "label": "AS: Money market deposit account owned",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "2": "No",
          "1": "Yes"
        }
      }
    },
    "TGVOINT": {
      "label": "AS: Amount of monthly int from own US Govt securities",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "9200",
            "description": "Dollars"
          }
        ]
      }
    },
    "EEVERET": {
      "label": "LF: Ever retired from a job",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "1": "Yes",
          "-1": "Not in Universe"
        }
      }
    },
    "RHTYPE": {
      "label": "HH: Household type",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Family hh - Married couple",
          "6": "Group Quarters",
          "4": "Nonfamily hh - Male householder nonfamily household",
          "5": "Nonfamily hh - Female householder nonfamily household",
          "2": "Family hh - Male householder",
          "3": "Family hh - Female householder"
        }
      }
    },
    "RCUOW24B": {
      "label": "PE: Person number of second owner of other welfare coverage",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not In Universe"
        },
        "range": [
          {
            "min": "101",
            "max": "1699",
            "description": "Person Number"
          }
        ]
      }
    },
    "AJARNT": {
      "label": "AS: Allocation flag for TJARNT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "6": "Derived from range based values",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "0": "Not imputed"
        }
      }
    },
    "EPUBHSE": {
      "label": "HH: Residence in public housing project",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "1": "Yes",
          "-1": "Not in Universe"
        }
      }
    },
    "RCUOW24A": {
      "label": "PE: Person number of first owner of other welfare coverage",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not In Universe"
        },
        "range": [
          {
            "min": "101",
            "max": "1699",
            "description": "Person Number"
          }
        ]
      }
    },
    "ASLRYB1": {
      "label": "BS: Allocation flag for ESLRYB1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation(hot deck)",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "3": "Logical imputation(derivation)"
        }
      }
    },
    "ASLRYB2": {
      "label": "BS: Allocation flag for ESLRYB2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation(hot deck)",
          "3": "Logical imputation(derivation)",
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation"
        }
      }
    },
    "APNDAD": {
      "label": "PE: Allocation flag for EPNDAD",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "T02AMT": {
      "label": "GI: Amount of Railroad Retirement (ISS Code 2)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "99999",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "RMHRSWK": {
      "label": "LF: Usual hours worked per week recode in month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Did not work (did not have a job, or was absent without pay from a job all weeks in month)",
          "5": "At least 1 but not all weeks 35+ hours, all other weeks 0 hours",
          "1": "All weeks 35+",
          "3": "Some weeks 35+ and some weeks less than 35, all weeks equal to or greater than 1 hour",
          "2": "All weeks 1-34 hours",
          "-1": "Not in Universe",
          "4": "Some weeks 35+, some weeks 1-34 hours, some weeks 0 hours",
          "6": "At least 1 week but not all weeks 1 to 34 hours, all other weeks 0 hours"
        }
      }
    },
    "EBRKFST": {
      "label": "HH: Receipt of school breakfast",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "1": "Yes",
          "-1": "Not in Universe"
        }
      }
    },
    "AR56": {
      "label": "GI: Allocation flag for ER56",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "AR55": {
      "label": "GI: Allocation flag for ER55",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "AR52": {
      "label": "GI: Allocation flag for ER52",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "AVAQUES": {
      "label": "AF: Allocation flag for EVAQUES",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed"
        }
      }
    },
    "AR51": {
      "label": "GI: Allocation flag for ER51",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation"
        }
      }
    },
    "TSPNDIST": {
      "label": "SF: Related subfamily distributions from pension plans",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "1500000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "EEDUCATE": {
      "label": "ED: Highest Degree received or grade completed",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "46": "Professional School degree (for example: MD(doctor),DDS(dentist),JD(lawyer)",
          "-1": "Not in Universe",
          "39": "High School Graduate - (diploma or GED or equivalent)",
          "36": "10th Grade",
          "37": "11th Grade",
          "40": "Some college, but no degree",
          "45": "Master's degree (For example: MA, MS, MEng, MEd, MSW, MBA)",
          "35": "9th Grade",
          "47": "Doctorate degree (for example: Ph.D., Ed.D)",
          "38": "12th grade, no diploma",
          "44": "Bachelor's degree (for example: BA, AB, BS)",
          "41": "Diploma or certificate from a vocational, technical, trade or business school beyond high",
          "43": "Associate (2-yr) college degree (include academic/occupational degree)",
          "33": "5th Or 6th Grade",
          "34": "7th Or 8th Grade",
          "31": "Less Than 1st Grade",
          "32": "1st, 2nd, 3rd or 4th grade"
        }
      }
    },
    "AEMPDRSN": {
      "label": "GI: Allocation flag for REMPDRSN",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "THVETS": {
      "label": "HH: Total Household Veterans Payments Recode",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "0",
            "max": "150000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "AVETSRSN": {
      "label": "GI: Allocation flag for RVETSRSN",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "A32AMT": {
      "label": "GI: Allocation flag for T32AMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed"
        }
      }
    },
    "EFTYPE": {
      "label": "FA: Type of family (or pseudo-family)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Primary family (including those with related subfamilies)",
          "3": "Unrelated Subfamily",
          "5": "Secondary individual",
          "4": "Primary Individual"
        }
      }
    },
    "ECKJT": {
      "label": "AS: Jointly owned interest earning checking account",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "1": "Yes",
          "-1": "Not in Universe"
        }
      }
    },
    "ACDJT": {
      "label": "AS: Allocation flag for ECDJT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "ASJADIV": {
      "label": "AS: Allocation flag for TSJADIV",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "6": "Derived from range based values"
        }
      }
    },
    "EGVTRNT": {
      "label": "HH: Receipt of government subsidized rent",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "ECSYN": {
      "label": "GI: Receipt of child support payments (ISS Code 28)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "TBSOCC1": {
      "label": "BS: Occupation code",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2910": "Photographers (27-4021)",
          "8230": "Bookbinders and bindery workers (51-5010)",
          "1710": "Atmospheric and space scientists (19-2021)",
          "8130": "Tool and die makers (51-4111)",
          "8250": "Prepress technicians and workers (51-5022)",
          "0530": "Purchasing agents, except wholesale, retail, and farm products (13-1023)",
          "1740": "Environmental scientists and geoscientists (19-2040)",
          "2840": "Technical writers (27-3042)",
          "0430": "Managers, all other (11-9199)",
          "3600": "Nursing, psychiatric, and home health aides (31-1010)",
          "5900": "Office machine operators, except computer (43-9071)",
          "3610": "Occupational therapist assistants and aides (31-2010)",
          "0110": "Computer and information systems managers (11-3021)",
          "4950": "Door-to-door sales workers, news and street vendors, and related workers (41-9091)",
          "3640": "Dental assistants (31-9091)",
          "6910": "Roof bolters, mining (47-5061)",
          "6800": "Derrick, rotary drill, and service unit operators, oil, gas, and mining (47-5010)",
          "4760": "Retail salespersons (41-2031)",
          "2100": "Lawyers (23-1011)",
          "5600": "Production, planning, and expediting clerks (43-5061)",
          "5860": "Office clerks, general (43-9061)",
          "5620": "Stock clerks and order fillers (43-5081)",
          "0050": "Marketing and sales managers (11-2020)",
          "0060": "Public relations managers (11-2031)",
          "4430": "Miscellaneous entertainment attendants and related workers (39-3090)",
          "5400": "Receptionists and information clerks (43-4171)",
          "5530": "Meter readers, utilities (43-5041)",
          "8910": "Etchers and engravers (51-9194)",
          "7840": "Food batchmakers (51-3092)",
          "5420": "Information and record clerks, all other (43-4199)",
          "6750": "Septic tank servicers and sewer pipe cleaners (47-4071)",
          "3240": "Therapists, all other (29-1129)",
          "2050": "Directors, religious activities and education (21-2021)",
          "5330": "Loan interviewers and clerks (43-4131)",
          "4000": "Chefs and head cooks (35-1011)",
          "8600": "Power plant operators, distributors, and dispatchers (51-8010)",
          "3030": "Dietitians and nutritionists (29-1031)",
          "6430": "Paperhangers (47-2142)",
          "4010": "First-line supervisors/managers of food preparation and serving workers (35-1012)",
          "3050": "Pharmacists (29-1051)",
          "5240": "Customer service representatives (43-4051)",
          "6330": "Drywall installers, ceiling tile installers, and tapers (47-2080)",
          "6460": "Plasterers and stucco masons (47-2161)",
          "8520": "Model makers and patternmakers, wood (51-7030)",
          "6220": "Brickmasons, blockmasons, and stonemasons (47-2020)",
          "9620": "Laborers and freight, stock, and material movers, hand (53-7062)",
          "8650": "Crushing, grinding, polishing, mixing, and blending workers (51-9020)",
          "4050": "Combined food preparation and serving workers, including fast food (35-3021)",
          "7210": "Bus and truck mechanics and diesel engine specialists (49-3031)",
          "9520": "Dredge, excavating, and loading machine operators (53-7030)",
          "8430": "Extruding and forming machine setters, operators, and tenders, synthetic and glass  fibe",
          "6250": "Cement masons, concrete finishers, and terrazzo workers (47-2050)",
          "0940": "Tax preparers (13-2082)",
          "8440": "Fabric and apparel patternmakers (51-6092)",
          "1800": "Economists (19-3011)",
          "8450": "Upholsterers (51-6093)",
          "1810": "Market and survey researchers (19-3020)",
          "7010": "Computer, automated teller, and office machine repairers (49-2011)",
          "9200": "Locomotive engineers and operators (53-4010)",
          "7260": "Miscellaneous vehicle and mobile equipment mechanics, installers, and repairers (49-3090",
          "8350": "Tailors, dressmakers, and sewers (51-6050)",
          "0500": "Agents and business managers of artists, performers, and athletes (13-1011)",
          "7040": "Electric motor, power tool, and related repairers (49-2092)",
          "9340": "Bridge and lock tenders (53-6011)",
          "9230": "Railroad brake, signal, and switch operators (53-4021)",
          "7050": "Electrical and electronics installers and repairers, transportation equipment (49-2093)",
          "8260": "Printing machine operators (51-5023)",
          "8140": "Welding, soldering, and brazing workers (51-4120)",
          "0300": "Engineering managers (11-9041)",
          "3830": "Fish and game wardens (33-3031)",
          "3840": "Parking enforcement workers (33-3041)",
          "0350": "Medical and health services managers (11-9111)",
          "1440": "Marine engineers and naval architects (17-2121)",
          "1560": "Surveying and mapping technicians (17-3031)",
          "1310": "Surveyors, cartographers, and photogrammetrists (17-1020)",
          "1430": "Industrial engineers, including health and safety (17-2110)",
          "4940": "Telemarketers (41-9041)",
          "0360": "Natural sciences managers (11-9121)",
          "1200": "Actuaries (15-2011)",
          "2550": "Other education, training, and library workers (25-90XX)",
          "4740": "Counter and rental clerks (41-2021)",
          "2320": "Secondary school teachers (25-2030)",
          "1230": "Statisticians (15-2041)",
          "2310": "Elementary and middle school teachers (25-2020)",
          "4610": "Personal and home care aides (39-9021)",
          "4750": "Parts salespersons (41-2022)",
          "5840": "Insurance claims and policy processing clerks (43-9041)",
          "5830": "Desktop publishers (43-9031)",
          "4500": "Barbers (39-5011)",
          "6830": "Explosives workers, ordnance handling experts, and blasters (47-5031)",
          "4540": "Tour and travel guides (39-6020)",
          "8900": "Cooling and freezing equipment operators and tenders (51-9193)",
          "5410": "Reservation and transportation ticket agents and travel clerks (43-4181)",
          "6500": "Reinforcing iron and rebar workers (47-2171)",
          "2140": "Paralegals and legal assistants (23-2011)",
          "6520": "Sheet metal workers (47-2211)",
          "8940": "Tire builders (51-9197)",
          "4350": "Nonfarm animal caretakers (39-2021)",
          "5560": "Postal service mail sorters, processors, and processing machine operators (43-5053)",
          "4120": "Food servers, nonrestaurant (35-3041)",
          "8720": "Extruding, forming, pressing, and compacting machine setters, operators, and tenders (51",
          "8860": "Cleaning, washing, and metal pickling equipment operators and tenders (51-9192)",
          "6320": "Operating engineers and other construction equipment operators (47-2073)",
          "6200": "First-line supervisors/managers of construction trades and extraction workers (47-1011)",
          "4030": "Food preparation workers (35-2021)",
          "5120": "Bookkeeping, accounting, and auditing clerks (43-3031)",
          "7300": "Control and valve installers and repairers (49-9010)",
          "9720": "Refuse and recyclable material collectors (53-7081)",
          "8640": "Chemical processing machine setters, operators, and tenders (51-9010)",
          "6100": "Fishers and related fishing workers (45-3011)",
          "8400": "Textile cutting machine setters, operators, and tenders (51-6062)",
          "9610": "Cleaners of vehicles and equipment (53-7061)",
          "6240": "Carpet, floor, and tile installers and finishers (47-2040)",
          "0930": "Tax examiners, collectors, and revenue agents (13-2081)",
          "8200": "Plating and coating machine setters, operators, and tenders, metal and plastic (51-4193)",
          "9310": "Ship and boat captains and operators (53-5020)",
          "8460": "Textile, apparel, and furnishings workers, all other (51-6099)",
          "1940": "Nuclear technicians (19-4051)",
          "7140": "Aircraft mechanics and service technicians (49-3011)",
          "0620": "Human resources, training, and labor relations specialists (13-1070)",
          "8240": "Job printers (51-5021)",
          "3900": "Animal control workers (33-9011)",
          "2700": "Actors (27-2011)",
          "0520": "Wholesale and retail buyers, except farm products (13-1022)",
          "9110": "Ambulance drivers and attendants, except emergency medical technicians (53-3011)",
          "2830": "Editors (27-3041)",
          "2600": "Artists and related workers (27-1010)",
          "2960": "Media and communication equipment workers, all other (27-4099)",
          "8160": "Lay-out workers, metal and plastic (51-4192)",
          "9130": "Driver/sales workers and truck drivers (53-3030)",
          "1760": "Physical scientists, all other (19-2099)",
          "9140": "Taxi drivers and chauffeurs (53-3041)",
          "0200": "Farm, ranch, and other agricultural managers (11-9011)",
          "2740": "Dancers and choreographers (27-2030)",
          "1650": "Medical scientists (19-1040)",
          "4800": "Advertising sales agents (41-3011)",
          "0340": "Lodging managers (11-9081)",
          "9150": "Motor vehicle operators, all other (53-3099)",
          "2630": "Designers (27-1020)",
          "0210": "Farmers and ranchers (11-9012)",
          "3720": "First-line supervisors/managers of fire fighting and prevention workers (33-1021)",
          "4930": "Sales engineers (41-9031)",
          "5910": "Proofreaders and copy markers (43-9081)",
          "4960": "Sales and related workers, all other (41-9099)",
          "3740": "Fire fighters (33-2011)",
          "5800": "Computer operators (43-9011)",
          "3630": "Massage therapists (31-9011)",
          "5930": "Office and administrative support workers, all other (43-9199)",
          "5820": "Word processors and typists (43-9022)",
          "3540": "Other healthcare practitioners and technical occupations (29-9000)",
          "6940": "Other extraction workers (47-50XX)",
          "4520": "Miscellaneous personal appearance workers (39-5090)",
          "3300": "Clinical laboratory technologists and technicians (29-2010)",
          "3320": "Diagnostic related technologists and technicians (29-2030)",
          "6700": "Elevator installers and repairers (47-4021)",
          "4420": "Ushers, lobby attendants, and ticket takers (39-3031)",
          "6720": "Hazardous materials removal workers (47-4041)",
          "7920": "Extruding and drawing machine setters, operators, and tenders, metal and plastic (51-402",
          "1040": "Computer support specialists (15-1041)",
          "4320": "First-line supervisors/managers of personal service workers (39-1021)",
          "3230": "Speech-language pathologists (29-1127)",
          "5540": "Postal service clerks (43-5051)",
          "7600": "Signal and track switch repairers (49-9097)",
          "3120": "Podiatrists (29-1081)",
          "2150": "Miscellaneous legal support workers (23-2090)",
          "1060": "Database administrators (15-1061)",
          "8800": "Packaging and filling machine operators and tenders (51-9111)",
          "7750": "Miscellaneous assemblers and fabricators (51-2090)",
          "6420": "Painters, construction and maintenance (47-2141)",
          "5100": "Bill and account collectors (43-3011)",
          "7520": "Commercial divers (49-9092)",
          "4140": "Dishwashers (35-9021)",
          "4020": "Cooks (35-2010)",
          "8620": "Water and liquid waste treatment plant and system operators (51-8031)",
          "3060": "Physicians and surgeons (29-1060)",
          "8750": "Jewelers and precious stone and metal workers (51-9071)",
          "5010": "Switchboard operators, including answering service (43-2011)",
          "6230": "Carpenters (47-2031)",
          "6110": "Hunters and trappers (45-3021)",
          "7320": "Home appliance repairers (49-9031)",
          "8300": "Laundry and dry-cleaning workers (51-6011)",
          "5150": "Procurement clerks (43-3061)",
          "1900": "Agricultural and food science technicians (19-4011)",
          "1910": "Biological technicians (19-4021)",
          "0700": "Logisticians (13-1081)",
          "7350": "Maintenance workers, machinery (49-9043)",
          "0710": "Management analysts (13-1111)",
          "0730": "Other business operations specialists (13-11XX)",
          "1820": "Psychologists (19-3030)",
          "6050": "Miscellaneous agricultural workers (45-2090)",
          "1840": "Urban and regional planners (19-3051)",
          "7160": "Automotive glass installers and repairers (49-3022)",
          "9350": "Parking lot attendants (53-6021)",
          "0410": "Property, real estate, and community association managers (11-9141)",
          "1510": "Nuclear engineers (17-2161)",
          "2720": "Athletes, coaches, umpires, and related workers (27-2020)",
          "8040": "Metal furnace and kiln operators and tenders (51-4050)",
          "1640": "Conservation scientists and foresters (19-1030)",
          "3940": "Crossing guards (33-9091)",
          "0320": "Funeral directors (11-9061)",
          "4920": "Real estate brokers and sales agents (41-9020)",
          "2760": "Entertainers and performers, sports and related workers, all other (27-2099)",
          "9030": "Aircraft pilots and flight engineers (53-2010)",
          "1420": "Environmental engineers (17-2081)",
          "0230": "Education administrators (11-9030)",
          "9040": "Air traffic controllers and airfield operations specialists (53-2020)",
          "3730": "Supervisors, protective service workers, all other (33-1099)",
          "1330": "Agricultural engineers (17-2021)",
          "2540": "Teacher assistants (25-9041)",
          "3500": "Licensed practical and licensed vocational nurses (29-2061)",
          "2430": "Librarians (25-4021)",
          "1460": "Mechanical engineers (17-2141)",
          "1210": "Mathematicians (15-2021)",
          "4600": "Child care workers (39-9011)",
          "5810": "Data entry keyers (43-9021)",
          "2440": "Library technicians (25-4031)",
          "5700": "Secretaries and administrative assistants (43-6010)",
          "1000": "Computer scientists and systems analysts (15-10XX)",
          "0150": "Purchasing managers (11-3061)",
          "1240": "Miscellaneous mathematical science occupations (15-2090)",
          "4620": "Recreation and fitness workers (39-9030)",
          "7900": "Computer control programmers and operators (51-4010)",
          "1020": "Computer software engineers (15-1030)",
          "7930": "Forging machine setters, operators, and tenders, metal and plastic (51-4022)",
          "5500": "Cargo and freight agents (43-5011)",
          "7800": "Bakers (51-3011)",
          "7810": "Butchers and other meat, poultry, and fish processing workers (51-3020)",
          "4200": "First-line supervisors/managers of housekeeping and janitorial workers (37-1011)",
          "7850": "Food cooking machine operators and tenders (51-3093)",
          "5200": "Brokerage clerks (43-4011)",
          "8830": "Photographic process workers and processing machine operators (51-9130)",
          "6660": "Construction and building inspectors (47-4011)",
          "5210": "Correspondence clerks (43-4021)",
          "7510": "Coin, vending, and amusement machine servicers and repairers (49-9091)",
          "8840": "Semiconductor processors (51-9141)",
          "3150": "Occupational therapists (29-1122)",
          "4250": "Grounds maintenance workers (37-3010)",
          "6310": "Pile-driver operators (47-2072)",
          "8730": "Furnace, kiln, oven, drier, and kettle operators and tenders (51-9051)",
          "3160": "Physical therapists (29-1123)",
          "5360": "Human resources assistants, except payroll and timekeeping (43-4161)",
          "8630": "Miscellaneous plant and system operators (51-8090)",
          "7430": "Precision instrument and equipment repairers (49-9060)",
          "6120": "Forest and conservation workers (45-4011)",
          "9630": "Machine feeders and offbearers (53-7063)",
          "6000": "First-line supervisors/managers of farming, fishing, and forestry workers (45-1010)",
          "9750": "Material moving workers, all other (53-7199)",
          "4060": "Counter attendants, cafeteria, food concession, and coffee shop (35-3022)",
          "6360": "Glaziers (47-2121)",
          "8550": "Woodworkers, all other (51-7099)",
          "5160": "Tellers (43-3071)",
          "1920": "Chemical technicians (19-4031)",
          "0950": "Financial specialists, all other (13-2099)",
          "8330": "Shoe and leather workers and repairers (51-6041)",
          "8210": "Tool grinders, filers, and sharpeners (51-4194)",
          "9420": "Other transportation workers (53-60XX)",
          "7360": "Millwrights (49-9044)",
          "8340": "Shoe machine operators and tenders (51-6042)",
          "8010": "Lathe and turning machine tool setters, operators, and tenders, metal and plastic (51-40",
          "1610": "Biological scientists (19-1020)",
          "1500": "Mining and geological engineers, including mining safety engineers (17-2151)",
          "1860": "Miscellaneous social scientists and related workers (19-3090)",
          "3800": "Bailiffs, correctional officers, and jailers (33-3010)",
          "1400": "Computer hardware engineers (17-2061)",
          "3700": "First-line supervisors/managers of correctional officers (33-1011)",
          "1410": "Electrical and electronic engineers (17-2070)",
          "1550": "Engineering technicians, except drafters (17-3020)",
          "8060": "Model makers and patternmakers, metal and plastic (51-4060)",
          "1300": "Architects, except naval (17-1010)",
          "4810": "Insurance sales agents (41-3021)",
          "5920": "Statistical assistants (43-9111)",
          "0010": "Chief executives (11-1011)",
          "0020": "General and operations managers (11-1021)",
          "1110": "Network systems and data communications analysts (15-1081)",
          "3520": "Opticians, dispensing (29-2081)",
          "2330": "Special education teachers (25-2040)",
          "3310": "Dental hygienists (29-2021)",
          "6930": "Helpers--extraction workers (47-5081)",
          "4530": "Baggage porters, bellhops, and concierges (39-6010)",
          "3200": "Radiation therapists (29-1124)",
          "6820": "Earth drillers, except oil and gas (47-5021)",
          "7950": "Cutting, punching, and press machine setters, operators, and tenders, metal and plastic",
          "8920": "Molders, shapers, and casters, except metal and plastic (51-9195)",
          "7830": "Food and tobacco roasting, baking, and drying machine operators and tenders (51-3091)",
          "2020": "Miscellaneous community and social service specialists (21-1090)",
          "8930": "Paper goods machine setters, operators, and tenders (51-9196)",
          "4210": "First-line supervisors/managers of landscaping, lawn service, and groundskeeping workers",
          "7720": "Electrical, electronics, and electromechanical assemblers (51-2020)",
          "6760": "Miscellaneous construction and related workers (47-4090)",
          "3010": "Dentists (29-1020)",
          "5320": "Library assistants, clerical (43-4121)",
          "8710": "Cutting workers (51-9030)",
          "7740": "Structural metal fabricators and fitters (51-2041)",
          "3260": "Health diagnosing and treating practitioners, all other (29-1199)",
          "2060": "Religious workers, all other (21-2099)",
          "7420": "Telecommunications line installers and repairers (49-9052)",
          "9730": "Shuttle car operators (53-7111)",
          "8760": "Medical, dental, and ophthalmic laboratory technicians (51-9080)",
          "9740": "Tank car, truck, and ship loaders (53-7121)",
          "5030": "Communications equipment operators, all other (43-2099)",
          "8310": "Pressers, textile, garment, and related materials (51-6021)",
          "7340": "Maintenance and repair workers, general (49-9042)",
          "7100": "Electrical and electronics repairers, industrial and utility (49-209X)",
          "9640": "Packers and packagers, hand (53-7064)",
          "7110": "Electronic equipment installers and repairers, motor vehicles (49-2096)",
          "6020": "Animal breeders (45-2021)",
          "8320": "Sewing machine operators (51-6031)",
          "6260": "Construction laborers (47-2061)",
          "0830": "Credit analysts (13-2041)",
          "9300": "Sailors and marine oilers (53-5011)",
          "0600": "Cost estimators (13-1051)",
          "2900": "Broadcast and sound engineering technicians and radio operators (27-4010)",
          "7130": "Security and fire alarm systems installers (49-2098)",
          "2920": "Television, video, and motion picture camera operators and editors (27-4030)",
          "8000": "Grinding, lapping, polishing, and buffing machine tool setters, operators, and tenders,",
          "8120": "Multiple machine tool setters, operators, and tenders, metal and plastic (51-4081)",
          "7030": "Avionics technicians (49-2091)",
          "1720": "Chemists and materials scientists (19-2030)",
          "8020": "Milling and planing machine setters, operators, and tenders, metal and plastic (51-4035)",
          "3920": "Security guards and gaming surveillance officers (33-9030)",
          "9120": "Bus drivers (53-3020)",
          "9360": "Service station attendants (53-6031)",
          "9240": "Railroad conductors and yardmasters (53-4031)",
          "3820": "Detectives and criminal investigators (33-3021)",
          "0330": "Gaming managers (11-9071)",
          "1540": "Drafters (17-3010)",
          "0220": "Construction managers (11-9021)",
          "4820": "Securities, commodities, and financial services sales agents (41-3031)",
          "1450": "Materials engineers (17-2131)",
          "3620": "Physical therapist assistants and aides (31-2020)",
          "1320": "Aerospace engineers (17-2011)",
          "4850": "Sales representatives, wholesale and manufacturing (41-4010)",
          "1220": "Operations research analysts (15-2031)",
          "2300": "Preschool and kindergarten teachers (25-2010)",
          "3510": "Medical records and health information technicians (29-2071)",
          "4840": "Sales representatives, services, all other (41-3099)",
          "3650": "Medical assistants and other healthcare support occupations (31-909X)",
          "3530": "Miscellaneous health technologists and technicians (29-2090)",
          "0140": "Industrial production managers (11-3051)",
          "1100": "Network and computer systems administrators (15-1071)",
          "5850": "Mail clerks and mail machine operators, except postal service (43-9051)",
          "4410": "Motion picture projectionists (39-3021)",
          "5510": "Couriers and messengers (43-5021)",
          "3210": "Recreational therapists (29-1125)",
          "4550": "Transportation attendants (39-6030)",
          "6730": "Highway maintenance workers (47-4051)",
          "6740": "Rail-track laying and maintenance equipment operators (47-4061)",
          "7710": "Aircraft structure, surfaces, rigging, and systems assemblers (51-2011)",
          "7960": "Drilling and boring machine tool setters, operators, and tenders, metal and plastic (51-",
          "8810": "Painting workers (51-9120)",
          "6510": "Roofers (47-2181)",
          "3130": "Registered nurses (29-1111)",
          "4110": "Waiters and waitresses (35-3031)",
          "6530": "Structural iron and steel workers (47-2221)",
          "8850": "Cementing and gluing machine operators and tenders (51-9191)",
          "4130": "Dining room and cafeteria attendants and bartender helpers (35-9011)",
          "5350": "Order clerks (43-4151)",
          "6440": "Pipelayers, plumbers, pipefitters, and steamfitters (47-2150)",
          "7540": "Locksmiths and safe repairers (49-9094)",
          "9600": "Industrial truck and tractor operators (53-7051)",
          "4040": "Bartenders (35-3011)",
          "7550": "Manufactured building and mobile home installers (49-9095)",
          "4160": "Food preparation and serving related workers, all other (35-9099)",
          "5140": "Payroll and timekeeping clerks (43-3051)",
          "8410": "Textile knitting and weaving machine setters, operators, and tenders (51-6063)",
          "7200": "Automotive service technicians and mechanics (49-3023)",
          "5260": "File Clerks (43-4071)",
          "0800": "Accountants and auditors (13-2011)",
          "8540": "Woodworking machine setters, operators, and tenders, except sawing (51-7042)",
          "7220": "Heavy vehicle and mobile equipment service technicians and mechanics (49-3040)",
          "0820": "Budget analysts (13-2031)",
          "0840": "Financial analysts (13-2051)",
          "1930": "Geological and petroleum technicians (19-4041)",
          "1700": "Astronomers and physicists (19-2010)",
          "2800": "Announcers (27-3010)",
          "1830": "Sociologists (19-3041)",
          "8360": "Textile bleaching and dyeing machine operators and tenders (51-6061)",
          "1600": "Agricultural and food scientists (19-1010)",
          "2810": "News analysts, reporters and correspondents (27-3020)",
          "1960": "Other life, physical, and social science technicians (19-40XX)",
          "0420": "Social and community service managers (11-9151)",
          "0540": "Claims adjusters, appraisers, examiners, and investigators (13-1030)",
          "4900": "Models, demonstrators, and product promoters (41-9010)",
          "1520": "Petroleum engineers (17-2171)",
          "3950": "Lifeguards and other protective service workers (33-909X)",
          "3860": "Transit and railroad police (33-3052)",
          "3850": "Police and sheriff's patrol officers (33-3051)",
          "4830": "Travel agents (41-3041)",
          "4720": "Cashiers (41-2010)",
          "2200": "Postsecondary teachers (25-1000)",
          "6920": "Roustabouts, oil and gas (47-5071)",
          "1010": "Computer programmers (15-1021)",
          "2340": "Other teachers and instructors (25-3000)",
          "4510": "Hairdressers, hairstylists, and cosmetologists (39-5012)",
          "4650": "Personal care and service workers, all other (39-9099)",
          "4400": "Gaming services workers (39-3010)",
          "5610": "Shipping, receiving, and traffic clerks (43-5071)",
          "5630": "Weighers, measurers, checkers, and samplers, recordkeeping (43-5111)",
          "6840": "Mining machine operators (47-5040)",
          "3220": "Respiratory therapists (29-1126)",
          "7700": "First-line supervisors/managers of production and operating workers (51-1011)",
          "5300": "Hotel, motel, and resort desk clerks (43-4081)",
          "4460": "Funeral service workers (39-4000)",
          "4340": "Animal trainers (39-2011)",
          "4220": "Janitors and building cleaners (37-201X)",
          "6400": "Insulation workers (47-2130)",
          "7610": "Helpers--installation, maintenance, and repair workers (49-9098)",
          "7620": "Other installation, maintenance, and repair workers (49-909X)",
          "8950": "Helpers--production workers (51-9198)",
          "3140": "Audiologists (29-1121)",
          "8960": "Production workers, all other (51-9199)",
          "6300": "Paving, surfacing, and tamping equipment operators (47-2071)",
          "5340": "New accounts clerks (43-4141)",
          "8610": "Stationary engineers and boiler operators (51-8021)",
          "3040": "Optometrists (29-1041)",
          "5110": "Billing and posting clerks and machine operators (43-3021)",
          "9840": "Persons whose current labor force status is unemployed and last job was Armed Forces",
          "0900": "Financial examiners (13-2061)",
          "5130": "Gaming cage workers (43-3041)",
          "5020": "Telephone operators (43-2021)",
          "9500": "Conveyor operators and tenders (53-7011)",
          "8420": "Textile winding, twisting, and drawing out machine setters, operators, and tenders (51-6",
          "0810": "Appraisers and assessors of real estate (13-2021)",
          "6010": "Agricultural inspectors (45-2011)",
          "6130": "Logging workers (45-4020)",
          "7000": "First-line supervisors/managers of mechanics, installers, and repairers (49-1011)",
          "0720": "Meeting and convention planners (13-1121)",
          "8220": "Metalworkers and plastic workers, all other (51-4199)",
          "6040": "Graders and sorters, agricultural products (45-2041)",
          "0850": "Personal financial advisors (13-2052)",
          "9560": "Hoist and winch operators (53-7041)",
          "7020": "Radio and telecommunications equipment installers and repairers (49-2020)",
          "0860": "Insurance underwriters (13-2053)",
          "7150": "Automotive body and related repairers (49-3021)",
          "9330": "Ship engineers (53-5031)",
          "0510": "Purchasing agents and buyers, farm products (13-1021)",
          "2820": "Public relations specialists (27-3031)",
          "3910": "Private detectives and investigators (33-9021)",
          "2710": "Producers and directors (27-2012)",
          "9000": "Supervisors, transportation and material moving workers (53-1000)",
          "8150": "Heat treating equipment setters, operators, and tenders, metal and plastic (51-4191)",
          "8030": "Machinists (51-4041)",
          "0560": "Compliance officers, except agriculture, construction, health and safety, and transporta",
          "0310": "Food service managers (11-9051)",
          "2850": "Writers and authors (27-3043)",
          "9260": "Subway, streetcar, and other rail transportation workers (53-40XX)",
          "1530": "Engineers, all other (17-2199)",
          "2860": "Miscellaneous media and communication workers (27-3090)",
          "3710": "First-line supervisors/managers of police and detectives (33-1012)",
          "2750": "Musicians, singers, and related workers (27-2040)",
          "2400": "Archivists, curators, and museum technicians (25-4010)",
          "0100": "Administrative services managers (11-3011)",
          "4700": "First-line supervisors/managers of retail sales workers (41-1011)",
          "3750": "Fire inspectors (33-2020)",
          "0120": "Financial managers (11-3031)",
          "4710": "First-line supervisors/managers of non-retail sales workers (41-1012)",
          "0130": "Human resources managers (11-3040)",
          "1340": "Biomedical engineers (17-2031)",
          "1350": "Chemical engineers (17-2041)",
          "3400": "Emergency medical technicians and paramedics (29-2041)",
          "1360": "Civil engineers (17-2051)",
          "3410": "Health diagnosing and treating practitioner support technicians (29-2050)",
          "4640": "Residential advisors (39-9041)",
          "0040": "Advertising and promotions managers (11-2011)",
          "0160": "Transportation, storage, and distribution managers (11-3071)",
          "4300": "First-line supervisors/managers of gaming workers (39-1010)",
          "2000": "Counselors (21-1010)",
          "6710": "Fence erectors (47-4031)",
          "5520": "Dispatchers (43-5030)",
          "7940": "Rolling machine setters, operators, and tenders, metal and plastic (51-4023)",
          "2010": "Social workers (21-1020)",
          "6600": "Helpers, construction trades (47-3010)",
          "3110": "Physician assistants (29-1071)",
          "3000": "Chiropractors (29-1011)",
          "5550": "Postal service mail carriers (43-5052)",
          "7730": "Engine and other machine assemblers (51-2031)",
          "5310": "Interviewers, except eligibility and loan (43-4111)",
          "2040": "Clergy (21-2011)",
          "3250": "Veterinarians (29-1131)",
          "4230": "Maids and housekeeping cleaners (37-2012)",
          "4240": "Pest control workers (37-2021)",
          "5220": "Court, municipal, and license clerks (43-4031)",
          "8740": "Inspectors, testers, sorters, samplers, and weighers (51-9061)",
          "5230": "Credit authorizers, checkers, and clerks (43-4041)",
          "-1": "Not in Universe",
          "7410": "Electrical power-line installers and repairers (49-9051)",
          "8500": "Cabinetmakers and bench carpenters (51-7011)",
          "4150": "Hosts and hostesses, restaurant, lounge, and coffee shop (35-9031)",
          "6210": "Boilermakers (47-2011)",
          "5000": "First-line supervisors/managers of office and administrative support workers (43-1011)",
          "8510": "Furniture finishers (51-7021)",
          "5250": "Eligibility interviewers, government programs (43-4061)",
          "7310": "Heating, air conditioning, and refrigeration mechanics and installers (49-9021)",
          "0910": "Loan counselors and officers (13-2070)",
          "8530": "Sawing machine setters, operators, and tenders, wood (51-7041)",
          "6350": "Electricians (47-2111)",
          "7560": "Riggers (49-9096)",
          "7330": "Industrial and refractory machinery mechanics (49-904X)",
          "9510": "Crane and tower operators (53-7021)",
          "9410": "Transportation inspectors (53-6051)",
          "9650": "Pumping station operators (53-7070)",
          "7120": "Electronic home entertainment equipment installers and repairers (49-2097)",
          "7240": "Small engine mechanics (49-3050)",
          "8100": "Molders and molding machine setters, operators, and tenders, metal and plastic (51-4070)"
        }
      }
    },
    "AJNTRNT": {
      "label": "AS: Allocation flag for EJNTRNT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "TBSOCC2": {
      "label": "BS: Occupation code",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3040": "Optometrists (29-1041)",
          "8620": "Water and liquid waste treatment plant and system operators (51-8031)",
          "8750": "Jewelers and precious stone and metal workers (51-9071)",
          "5120": "Bookkeeping, accounting, and auditing clerks (43-3031)",
          "5250": "Eligibility interviewers, government programs (43-4061)",
          "7550": "Manufactured building and mobile home installers (49-9095)",
          "6460": "Plasterers and stucco masons (47-2161)",
          "6350": "Electricians (47-2111)",
          "7320": "Home appliance repairers (49-9031)",
          "7210": "Bus and truck mechanics and diesel engine specialists (49-3031)",
          "9750": "Material moving workers, all other (53-7199)",
          "8310": "Pressers, textile, garment, and related materials (51-6021)",
          "8320": "Sewing machine operators (51-6031)",
          "7010": "Computer, automated teller, and office machine repairers (49-2011)",
          "1830": "Sociologists (19-3041)",
          "7040": "Electric motor, power tool, and related repairers (49-2092)",
          "1500": "Mining and geological engineers, including mining safety engineers (17-2151)",
          "0530": "Purchasing agents, except wholesale, retail, and farm products (13-1023)",
          "1740": "Environmental scientists and geoscientists (19-2040)",
          "8160": "Lay-out workers, metal and plastic (51-4192)",
          "0320": "Funeral directors (11-9061)",
          "2860": "Miscellaneous media and communication workers (27-3090)",
          "4800": "Advertising sales agents (41-3011)",
          "0340": "Lodging managers (11-9081)",
          "3600": "Nursing, psychiatric, and home health aides (31-1010)",
          "1300": "Architects, except naval (17-1010)",
          "0210": "Farmers and ranchers (11-9012)",
          "4700": "First-line supervisors/managers of retail sales workers (41-1011)",
          "1330": "Agricultural engineers (17-2021)",
          "6840": "Mining machine operators (47-5040)",
          "3220": "Respiratory therapists (29-1126)",
          "7950": "Cutting, punching, and press machine setters, operators, and tenders, metal and plastic",
          "2020": "Miscellaneous community and social service specialists (21-1090)",
          "5300": "Hotel, motel, and resort desk clerks (43-4081)",
          "2150": "Miscellaneous legal support workers (23-2090)",
          "7850": "Food cooking machine operators and tenders (51-3093)",
          "7610": "Helpers--installation, maintenance, and repair workers (49-9098)",
          "4110": "Waiters and waitresses (35-3031)",
          "7620": "Other installation, maintenance, and repair workers (49-909X)",
          "2050": "Directors, religious activities and education (21-2021)",
          "6660": "Construction and building inspectors (47-4011)",
          "4000": "Chefs and head cooks (35-1011)",
          "6300": "Paving, surfacing, and tamping equipment operators (47-2071)",
          "4250": "Grounds maintenance workers (37-3010)",
          "8850": "Cementing and gluing machine operators and tenders (51-9191)",
          "2430": "Librarians (25-4021)",
          "0140": "Industrial production managers (11-3051)",
          "6940": "Other extraction workers (47-50XX)",
          "6930": "Helpers--extraction workers (47-5081)",
          "3320": "Diagnostic related technologists and technicians (29-2030)",
          "4540": "Tour and travel guides (39-6020)",
          "5350": "Order clerks (43-4151)",
          "8740": "Inspectors, testers, sorters, samplers, and weighers (51-9061)",
          "4150": "Hosts and hostesses, restaurant, lounge, and coffee shop (35-9031)",
          "8510": "Furniture finishers (51-7021)",
          "9630": "Machine feeders and offbearers (53-7063)",
          "2900": "Broadcast and sound engineering technicians and radio operators (27-4010)",
          "7130": "Security and fire alarm systems installers (49-2098)",
          "6040": "Graders and sorters, agricultural products (45-2041)",
          "1700": "Astronomers and physicists (19-2010)",
          "0730": "Other business operations specialists (13-11XX)",
          "3740": "Fire fighters (33-2011)",
          "8350": "Tailors, dressmakers, and sewers (51-6050)",
          "7020": "Radio and telecommunications equipment installers and repairers (49-2020)",
          "2800": "Announcers (27-3010)",
          "2920": "Television, video, and motion picture camera operators and editors (27-4030)",
          "8120": "Multiple machine tool setters, operators, and tenders, metal and plastic (51-4081)",
          "7050": "Electrical and electronics installers and repairers, transportation equipment (49-2093)",
          "2710": "Producers and directors (27-2012)",
          "1860": "Miscellaneous social scientists and related workers (19-3090)",
          "9120": "Bus drivers (53-3020)",
          "1510": "Nuclear engineers (17-2161)",
          "9130": "Driver/sales workers and truck drivers (53-3030)",
          "0310": "Food service managers (11-9051)",
          "1520": "Petroleum engineers (17-2171)",
          "0430": "Managers, all other (11-9199)",
          "1760": "Physical scientists, all other (19-2099)",
          "3830": "Fish and game wardens (33-3031)",
          "3710": "First-line supervisors/managers of police and detectives (33-1012)",
          "1420": "Environmental engineers (17-2081)",
          "1540": "Drafters (17-3010)",
          "2750": "Musicians, singers, and related workers (27-2040)",
          "3840": "Parking enforcement workers (33-3041)",
          "1560": "Surveying and mapping technicians (17-3031)",
          "9040": "Air traffic controllers and airfield operations specialists (53-2020)",
          "5910": "Proofreaders and copy markers (43-9081)",
          "0110": "Computer and information systems managers (11-3021)",
          "1200": "Actuaries (15-2011)",
          "4430": "Miscellaneous entertainment attendants and related workers (39-3090)",
          "8900": "Cooling and freezing equipment operators and tenders (51-9193)",
          "6500": "Reinforcing iron and rebar workers (47-2171)",
          "8930": "Paper goods machine setters, operators, and tenders (51-9196)",
          "5550": "Postal service mail carriers (43-5052)",
          "4220": "Janitors and building cleaners (37-201X)",
          "7730": "Engine and other machine assemblers (51-2031)",
          "3250": "Veterinarians (29-1131)",
          "6530": "Structural iron and steel workers (47-2221)",
          "8830": "Photographic process workers and processing machine operators (51-9130)",
          "5210": "Correspondence clerks (43-4021)",
          "6420": "Painters, construction and maintenance (47-2141)",
          "5100": "Bill and account collectors (43-3011)",
          "0130": "Human resources managers (11-3040)",
          "2550": "Other education, training, and library workers (25-90XX)",
          "3510": "Medical records and health information technicians (29-2071)",
          "4740": "Counter and rental clerks (41-2021)",
          "5820": "Word processors and typists (43-9022)",
          "4520": "Miscellaneous personal appearance workers (39-5090)",
          "4410": "Motion picture projectionists (39-3021)",
          "4420": "Ushers, lobby attendants, and ticket takers (39-3031)",
          "7520": "Commercial divers (49-9092)",
          "8730": "Furnace, kiln, oven, drier, and kettle operators and tenders (51-9051)",
          "3160": "Physical therapists (29-1123)",
          "6320": "Operating engineers and other construction equipment operators (47-2073)",
          "8640": "Chemical processing machine setters, operators, and tenders (51-9010)",
          "8520": "Model makers and patternmakers, wood (51-7030)",
          "9730": "Shuttle car operators (53-7111)",
          "8760": "Medical, dental, and ophthalmic laboratory technicians (51-9080)",
          "8400": "Textile cutting machine setters, operators, and tenders (51-6062)",
          "0800": "Accountants and auditors (13-2011)",
          "9510": "Crane and tower operators (53-7021)",
          "5150": "Procurement clerks (43-3061)",
          "0930": "Tax examiners, collectors, and revenue agents (13-2081)",
          "7100": "Electrical and electronics repairers, industrial and utility (49-209X)",
          "7110": "Electronic equipment installers and repairers, motor vehicles (49-2096)",
          "8440": "Fabric and apparel patternmakers (51-6092)",
          "8450": "Upholsterers (51-6093)",
          "1810": "Market and survey researchers (19-3020)",
          "1930": "Geological and petroleum technicians (19-4041)",
          "0720": "Meeting and convention planners (13-1121)",
          "4710": "First-line supervisors/managers of non-retail sales workers (41-1012)",
          "5800": "Computer operators (43-9011)",
          "7260": "Miscellaneous vehicle and mobile equipment mechanics, installers, and repairers (49-3090",
          "7030": "Avionics technicians (49-2091)",
          "0510": "Purchasing agents and buyers, farm products (13-1021)",
          "1600": "Agricultural and food scientists (19-1010)",
          "2810": "News analysts, reporters and correspondents (27-3020)",
          "8130": "Tool and die makers (51-4111)",
          "7160": "Automotive glass installers and repairers (49-3022)",
          "2820": "Public relations specialists (27-3031)",
          "9230": "Railroad brake, signal, and switch operators (53-4021)",
          "0410": "Property, real estate, and community association managers (11-9141)",
          "0540": "Claims adjusters, appraisers, examiners, and investigators (13-1030)",
          "0560": "Compliance officers, except agriculture, construction, health and safety, and transporta",
          "8040": "Metal furnace and kiln operators and tenders (51-4050)",
          "9140": "Taxi drivers and chauffeurs (53-3041)",
          "5900": "Office machine operators, except computer (43-9071)",
          "0230": "Education administrators (11-9030)",
          "3730": "Supervisors, protective service workers, all other (33-1099)",
          "1450": "Materials engineers (17-2131)",
          "3500": "Licensed practical and licensed vocational nurses (29-2061)",
          "7930": "Forging machine setters, operators, and tenders, metal and plastic (51-4022)",
          "2000": "Counselors (21-1010)",
          "7800": "Bakers (51-3011)",
          "6710": "Fence erectors (47-4031)",
          "5530": "Meter readers, utilities (43-5041)",
          "6510": "Roofers (47-2181)",
          "3000": "Chiropractors (29-1011)",
          "4460": "Funeral service workers (39-4000)",
          "4340": "Animal trainers (39-2011)",
          "3010": "Dentists (29-1020)",
          "8960": "Production workers, all other (51-9199)",
          "8600": "Power plant operators, distributors, and dispatchers (51-8010)",
          "5340": "New accounts clerks (43-4141)",
          "5220": "Court, municipal, and license clerks (43-4031)",
          "0020": "General and operations managers (11-1021)",
          "1350": "Chemical engineers (17-2041)",
          "5700": "Secretaries and administrative assistants (43-6010)",
          "5830": "Desktop publishers (43-9031)",
          "6920": "Roustabouts, oil and gas (47-5071)",
          "3310": "Dental hygienists (29-2021)",
          "0040": "Advertising and promotions managers (11-2011)",
          "2340": "Other teachers and instructors (25-3000)",
          "5620": "Stock clerks and order fillers (43-5081)",
          "6720": "Hazardous materials removal workers (47-4041)",
          "4020": "Cooks (35-2010)",
          "9840": "Persons whose current labor force status is unemployed and last job was Armed Forces",
          "9600": "Industrial truck and tractor operators (53-7051)",
          "8530": "Sawing machine setters, operators, and tenders, wood (51-7041)",
          "9740": "Tank car, truck, and ship loaders (53-7121)",
          "7560": "Riggers (49-9096)",
          "9620": "Laborers and freight, stock, and material movers, hand (53-7062)",
          "5260": "File Clerks (43-4071)",
          "8420": "Textile winding, twisting, and drawing out machine setters, operators, and tenders (51-6",
          "0810": "Appraisers and assessors of real estate (13-2021)",
          "8430": "Extruding and forming machine setters, operators, and tenders, synthetic and glass fiber",
          "9640": "Packers and packagers, hand (53-7064)",
          "9410": "Transportation inspectors (53-6051)",
          "9650": "Pumping station operators (53-7070)",
          "7360": "Millwrights (49-9044)",
          "9310": "Ship and boat captains and operators (53-5020)",
          "8460": "Textile, apparel, and furnishings workers, all other (51-6099)",
          "8240": "Job printers (51-5021)",
          "1720": "Chemists and materials scientists (19-2030)",
          "3910": "Private detectives and investigators (33-9021)",
          "9110": "Ambulance drivers and attendants, except emergency medical technicians (53-3011)",
          "8030": "Machinists (51-4041)",
          "1640": "Conservation scientists and foresters (19-1030)",
          "0200": "Farm, ranch, and other agricultural managers (11-9011)",
          "3720": "First-line supervisors/managers of fire fighting and prevention workers (33-1021)",
          "4810": "Insurance sales agents (41-3021)",
          "2400": "Archivists, curators, and museum technicians (25-4010)",
          "0100": "Administrative services managers (11-3011)",
          "4940": "Telemarketers (41-9041)",
          "0360": "Natural sciences managers (11-9121)",
          "7920": "Extruding and drawing machine setters, operators, and tenders, metal and plastic (51-402",
          "6730": "Highway maintenance workers (47-4051)",
          "6740": "Rail-track laying and maintenance equipment operators (47-4061)",
          "4320": "First-line supervisors/managers of personal service workers (39-1021)",
          "5410": "Reservation and transportation ticket agents and travel clerks (43-4181)",
          "3240": "Therapists, all other (29-1129)",
          "6760": "Miscellaneous construction and related workers (47-4090)",
          "8940": "Tire builders (51-9197)",
          "5560": "Postal service mail sorters, processors, and processing machine operators (43-5053)",
          "3260": "Health diagnosing and treating practitioners, all other (29-1199)",
          "5330": "Loan interviewers and clerks (43-4131)",
          "8840": "Semiconductor processors (51-9141)",
          "4850": "Sales representatives, wholesale and manufacturing (41-4010)",
          "1210": "Mathematicians (15-2021)",
          "3650": "Medical assistants and other healthcare support occupations (31-909X)",
          "3400": "Emergency medical technicians and paramedics (29-2041)",
          "4610": "Personal and home care aides (39-9021)",
          "0150": "Purchasing managers (11-3061)",
          "4760": "Retail salespersons (41-2031)",
          "0160": "Transportation, storage, and distribution managers (11-3071)",
          "4510": "Hairdressers, hairstylists, and cosmetologists (39-5012)",
          "4650": "Personal care and service workers, all other (39-9099)",
          "5860": "Office clerks, general (43-9061)",
          "4400": "Gaming services workers (39-3010)",
          "5230": "Credit authorizers, checkers, and clerks (43-4041)",
          "5110": "Billing and posting clerks and machine operators (43-3021)",
          "-1": "Not in Universe",
          "8500": "Cabinetmakers and bench carpenters (51-7011)",
          "5010": "Switchboard operators, including answering service (43-2011)",
          "6100": "Fishers and related fishing workers (45-3011)",
          "7430": "Precision instrument and equipment repairers (49-9060)",
          "5020": "Telephone operators (43-2021)",
          "7200": "Automotive service technicians and mechanics (49-3023)",
          "6110": "Hunters and trappers (45-3021)",
          "6120": "Forest and conservation workers (45-4011)",
          "6130": "Logging workers (45-4020)",
          "8550": "Woodworkers, all other (51-7099)",
          "6250": "Cement masons, concrete finishers, and terrazzo workers (47-2050)",
          "0820": "Budget analysts (13-2031)",
          "7350": "Maintenance workers, machinery (49-9043)",
          "6260": "Construction laborers (47-2061)",
          "0710": "Management analysts (13-1111)",
          "1920": "Chemical technicians (19-4031)",
          "8220": "Metalworkers and plastic workers, all other (51-4199)",
          "8100": "Molders and molding machine setters, operators, and tenders, metal and plastic (51-4070)",
          "1820": "Psychologists (19-3030)",
          "4950": "Door-to-door sales workers, news and street vendors, and related workers (41-9091)",
          "5920": "Statistical assistants (43-9111)",
          "7140": "Aircraft mechanics and service technicians (49-3011)",
          "0620": "Human resources, training, and labor relations specialists (13-1070)",
          "8000": "Grinding, lapping, polishing, and buffing machine tool setters, operators, and tenders,",
          "7150": "Automotive body and related repairers (49-3021)",
          "8360": "Textile bleaching and dyeing machine operators and tenders (51-6061)",
          "1960": "Other life, physical, and social science technicians (19-40XX)",
          "8010": "Lathe and turning machine tool setters, operators, and tenders, metal and plastic (51-40",
          "8250": "Prepress technicians and workers (51-5022)",
          "8150": "Heat treating equipment setters, operators, and tenders, metal and plastic (51-4191)",
          "2600": "Artists and related workers (27-1010)",
          "0300": "Engineering managers (11-9041)",
          "2840": "Technical writers (27-3042)",
          "4900": "Models, demonstrators, and product promoters (41-9010)",
          "3940": "Crossing guards (33-9091)",
          "3700": "First-line supervisors/managers of correctional officers (33-1011)",
          "9260": "Subway, streetcar, and other rail transportation workers (53-40XX)",
          "1530": "Engineers, all other (17-2199)",
          "1650": "Medical scientists (19-1040)",
          "2760": "Entertainers and performers, sports and related workers, all other (27-2099)",
          "4930": "Sales engineers (41-9031)",
          "1440": "Marine engineers and naval architects (17-2121)",
          "0220": "Construction managers (11-9021)",
          "1430": "Industrial engineers, including health and safety (17-2110)",
          "3750": "Fire inspectors (33-2020)",
          "2540": "Teacher assistants (25-9041)",
          "0060": "Public relations managers (11-2031)",
          "7940": "Rolling machine setters, operators, and tenders, metal and plastic (51-4023)",
          "6600": "Helpers, construction trades (47-3010)",
          "7830": "Food and tobacco roasting, baking, and drying machine operators and tenders (51-3091)",
          "3110": "Physician assistants (29-1071)",
          "6750": "Septic tank servicers and sewer pipe cleaners (47-4071)",
          "8810": "Painting workers (51-9120)",
          "3120": "Podiatrists (29-1081)",
          "5310": "Interviewers, except eligibility and loan (43-4111)",
          "6400": "Insulation workers (47-2130)",
          "3130": "Registered nurses (29-1111)",
          "4350": "Nonfarm animal caretakers (39-2021)",
          "4010": "First-line supervisors/managers of food preparation and serving workers (35-1012)",
          "3630": "Massage therapists (31-9011)",
          "4720": "Cashiers (41-2010)",
          "5930": "Office and administrative support workers, all other (43-9199)",
          "4600": "Child care workers (39-9011)",
          "5810": "Data entry keyers (43-9021)",
          "1110": "Network systems and data communications analysts (15-1081)",
          "2440": "Library technicians (25-4031)",
          "6910": "Roof bolters, mining (47-5061)",
          "4750": "Parts salespersons (41-2022)",
          "3540": "Other healthcare practitioners and technical occupations (29-9000)",
          "4640": "Residential advisors (39-9041)",
          "1010": "Computer programmers (15-1021)",
          "6830": "Explosives workers, ordnance handling experts, and blasters (47-5031)",
          "6700": "Elevator installers and repairers (47-4021)",
          "6820": "Earth drillers, except oil and gas (47-5021)",
          "6310": "Pile-driver operators (47-2072)",
          "8610": "Stationary engineers and boiler operators (51-8021)",
          "8860": "Cleaning, washing, and metal pickling equipment operators and tenders (51-9192)",
          "4140": "Dishwashers (35-9021)",
          "7410": "Electrical power-line installers and repairers (49-9051)",
          "5360": "Human resources assistants, except payroll and timekeeping (43-4161)",
          "5240": "Customer service representatives (43-4051)",
          "6330": "Drywall installers, ceiling tile installers, and tapers (47-2080)",
          "0900": "Financial examiners (13-2061)",
          "0910": "Loan counselors and officers (13-2070)",
          "6230": "Carpenters (47-2031)",
          "8650": "Crushing, grinding, polishing, mixing, and blending workers (51-9020)",
          "9500": "Conveyor operators and tenders (53-7011)",
          "8300": "Laundry and dry-cleaning workers (51-6011)",
          "6010": "Agricultural inspectors (45-2011)",
          "7220": "Heavy vehicle and mobile equipment service technicians and mechanics (49-3040)",
          "9520": "Dredge, excavating, and loading machine operators (53-7030)",
          "7340": "Maintenance and repair workers, general (49-9042)",
          "5160": "Tellers (43-3071)",
          "1910": "Biological technicians (19-4021)",
          "6020": "Animal breeders (45-2021)",
          "1800": "Economists (19-3011)",
          "7000": "First-line supervisors/managers of mechanics, installers, and repairers (49-1011)",
          "7240": "Small engine mechanics (49-3050)",
          "0600": "Cost estimators (13-1051)",
          "8340": "Shoe machine operators and tenders (51-6042)",
          "3620": "Physical therapist assistants and aides (31-2020)",
          "6050": "Miscellaneous agricultural workers (45-2090)",
          "9560": "Hoist and winch operators (53-7041)",
          "0500": "Agents and business managers of artists, performers, and athletes (13-1011)",
          "8020": "Milling and planing machine setters, operators, and tenders, metal and plastic (51-4035)",
          "8260": "Printing machine operators (51-5023)",
          "2850": "Writers and authors (27-3043)",
          "3820": "Detectives and criminal investigators (33-3021)",
          "1410": "Electrical and electronic engineers (17-2070)",
          "2740": "Dancers and choreographers (27-2030)",
          "4920": "Real estate brokers and sales agents (41-9020)",
          "9150": "Motor vehicle operators, all other (53-3099)",
          "4820": "Securities, commodities, and financial services sales agents (41-3031)",
          "4960": "Sales and related workers, all other (41-9099)",
          "4550": "Transportation attendants (39-6030)",
          "5520": "Dispatchers (43-5030)",
          "5400": "Receptionists and information clerks (43-4171)",
          "1040": "Computer support specialists (15-1041)",
          "4200": "First-line supervisors/managers of housekeeping and janitorial workers (37-1011)",
          "7710": "Aircraft structure, surfaces, rigging, and systems assemblers (51-2011)",
          "2140": "Paralegals and legal assistants (23-2011)",
          "5540": "Postal service clerks (43-5051)",
          "5420": "Information and record clerks, all other (43-4199)",
          "7960": "Drilling and boring machine tool setters, operators, and tenders, metal and plastic (51-",
          "7720": "Electrical, electronics, and electromechanical assemblers (51-2020)",
          "8800": "Packaging and filling machine operators and tenders (51-9111)",
          "2040": "Clergy (21-2011)",
          "8710": "Cutting workers (51-9030)",
          "7510": "Coin, vending, and amusement machine servicers and repairers (49-9091)",
          "3150": "Occupational therapists (29-1122)",
          "4130": "Dining room and cafeteria attendants and bartender helpers (35-9011)",
          "0010": "Chief executives (11-1011)",
          "4840": "Sales representatives, services, all other (41-3099)",
          "3530": "Miscellaneous health technologists and technicians (29-2090)",
          "2330": "Special education teachers (25-2040)",
          "1240": "Miscellaneous mathematical science occupations (15-2090)",
          "1360": "Civil engineers (17-2051)",
          "2200": "Postsecondary teachers (25-1000)",
          "3410": "Health diagnosing and treating practitioner support technicians (29-2050)",
          "6800": "Derrick, rotary drill, and service unit operators, oil, gas, and mining (47-5010)",
          "2100": "Lawyers (23-1011)",
          "3300": "Clinical laboratory technologists and technicians (29-2010)",
          "5600": "Production, planning, and expediting clerks (43-5061)",
          "4530": "Baggage porters, bellhops, and concierges (39-6010)",
          "3200": "Radiation therapists (29-1124)",
          "1020": "Computer software engineers (15-1030)",
          "5610": "Shipping, receiving, and traffic clerks (43-5071)",
          "4030": "Food preparation workers (35-2021)",
          "8630": "Miscellaneous plant and system operators (51-8090)",
          "7420": "Telecommunications line installers and repairers (49-9052)",
          "7540": "Locksmiths and safe repairers (49-9094)",
          "7300": "Control and valve installers and repairers (49-9010)",
          "9720": "Refuse and recyclable material collectors (53-7081)",
          "5130": "Gaming cage workers (43-3041)",
          "7310": "Heating, air conditioning, and refrigeration mechanics and installers (49-9021)",
          "6220": "Brickmasons, blockmasons, and stonemasons (47-2020)",
          "4160": "Food preparation and serving related workers, all other (35-9099)",
          "5140": "Payroll and timekeeping clerks (43-3051)",
          "8410": "Textile knitting and weaving machine setters, operators, and tenders (51-6063)",
          "5030": "Communications equipment operators, all other (43-2099)",
          "6240": "Carpet, floor, and tile installers and finishers (47-2040)",
          "6000": "First-line supervisors/managers of farming, fishing, and forestry workers (45-1010)",
          "8540": "Woodworking machine setters, operators, and tenders, except sawing (51-7042)",
          "1900": "Agricultural and food science technicians (19-4011)",
          "0700": "Logisticians (13-1081)",
          "0940": "Tax preparers (13-2082)",
          "8200": "Plating and coating machine setters, operators, and tenders, metal and plastic (51-4193)",
          "9300": "Sailors and marine oilers (53-5011)",
          "8210": "Tool grinders, filers, and sharpeners (51-4194)",
          "9420": "Other transportation workers (53-60XX)",
          "2910": "Photographers (27-4021)",
          "0850": "Personal financial advisors (13-2052)",
          "0860": "Insurance underwriters (13-2053)",
          "1840": "Urban and regional planners (19-3051)",
          "1610": "Biological scientists (19-1020)",
          "8140": "Welding, soldering, and brazing workers (51-4120)",
          "9350": "Parking lot attendants (53-6021)",
          "3920": "Security guards and gaming surveillance officers (33-9030)",
          "9000": "Supervisors, transportation and material moving workers (53-1000)",
          "2720": "Athletes, coaches, umpires, and related workers (27-2020)",
          "3950": "Lifeguards and other protective service workers (33-909X)",
          "0330": "Gaming managers (11-9071)",
          "3860": "Transit and railroad police (33-3052)",
          "0350": "Medical and health services managers (11-9111)",
          "0120": "Financial managers (11-3031)",
          "4300": "First-line supervisors/managers of gaming workers (39-1010)",
          "5510": "Couriers and messengers (43-5021)",
          "3210": "Recreational therapists (29-1125)",
          "5500": "Cargo and freight agents (43-5011)",
          "7810": "Butchers and other meat, poultry, and fish processing workers (51-3020)",
          "8920": "Molders, shapers, and casters, except metal and plastic (51-9195)",
          "3230": "Speech-language pathologists (29-1127)",
          "7700": "First-line supervisors/managers of production and operating workers (51-1011)",
          "4210": "First-line supervisors/managers of landscaping, lawn service, and groundskeeping workers",
          "6520": "Sheet metal workers (47-2211)",
          "4230": "Maids and housekeeping cleaners (37-2012)",
          "8950": "Helpers--production workers (51-9198)",
          "7750": "Miscellaneous assemblers and fabricators (51-2090)",
          "8720": "Extruding, forming, pressing, and compacting machine setters, operators, and tenders (51",
          "3640": "Dental assistants (31-9091)",
          "1220": "Operations research analysts (15-2031)",
          "1460": "Mechanical engineers (17-2141)",
          "1230": "Statisticians (15-2041)",
          "1100": "Network and computer systems administrators (15-1071)",
          "1000": "Computer scientists and systems analysts (15-10XX)",
          "4620": "Recreation and fitness workers (39-9030)",
          "4500": "Barbers (39-5011)",
          "5850": "Mail clerks and mail machine operators, except postal service (43-9051)",
          "6440": "Pipelayers, plumbers, pipefitters, and steamfitters (47-2150)",
          "6200": "First-line supervisors/managers of construction trades and extraction workers (47-1011)",
          "3050": "Pharmacists (29-1051)",
          "3060": "Physicians and surgeons (29-1060)",
          "6210": "Boilermakers (47-2011)",
          "5000": "First-line supervisors/managers of office and administrative support workers (43-1011)",
          "4040": "Bartenders (35-3011)",
          "9610": "Cleaners of vehicles and equipment (53-7061)",
          "4050": "Combined food preparation and serving workers, including fast food (35-3021)",
          "7330": "Industrial and refractory machinery mechanics (49-904X)",
          "4060": "Counter attendants, cafeteria, food concession, and coffee shop (35-3022)",
          "6360": "Glaziers (47-2121)",
          "0950": "Financial specialists, all other (13-2099)",
          "0830": "Credit analysts (13-2041)",
          "7120": "Electronic home entertainment equipment installers and repairers (49-2097)",
          "8330": "Shoe and leather workers and repairers (51-6041)",
          "0840": "Financial analysts (13-2051)",
          "1940": "Nuclear technicians (19-4051)",
          "1320": "Aerospace engineers (17-2011)",
          "4830": "Travel agents (41-3041)",
          "9200": "Locomotive engineers and operators (53-4010)",
          "8230": "Bookbinders and bindery workers (51-5010)",
          "1710": "Atmospheric and space scientists (19-2021)",
          "9330": "Ship engineers (53-5031)",
          "3900": "Animal control workers (33-9011)",
          "9340": "Bridge and lock tenders (53-6011)",
          "2700": "Actors (27-2011)",
          "0520": "Wholesale and retail buyers, except farm products (13-1022)",
          "2830": "Editors (27-3041)",
          "3800": "Bailiffs, correctional officers, and jailers (33-3010)",
          "9360": "Service station attendants (53-6031)",
          "9240": "Railroad conductors and yardmasters (53-4031)",
          "0420": "Social and community service managers (11-9151)",
          "2960": "Media and communication equipment workers, all other (27-4099)",
          "1400": "Computer hardware engineers (17-2061)",
          "1550": "Engineering technicians, except drafters (17-3020)",
          "8060": "Model makers and patternmakers, metal and plastic (51-4060)",
          "9030": "Aircraft pilots and flight engineers (53-2010)",
          "2630": "Designers (27-1020)",
          "3610": "Occupational therapist assistants and aides (31-2010)",
          "1310": "Surveyors, cartographers, and photogrammetrists (17-1020)",
          "3850": "Police and sheriff's patrol officers (33-3051)",
          "2010": "Social workers (21-1020)",
          "8910": "Etchers and engravers (51-9194)",
          "7840": "Food batchmakers (51-3092)",
          "7600": "Signal and track switch repairers (49-9097)",
          "1060": "Database administrators (15-1061)",
          "5320": "Library assistants, clerical (43-4121)",
          "5200": "Brokerage clerks (43-4011)",
          "7740": "Structural metal fabricators and fitters (51-2041)",
          "3140": "Audiologists (29-1121)",
          "4240": "Pest control workers (37-2021)",
          "4120": "Food servers, nonrestaurant (35-3041)",
          "3030": "Dietitians and nutritionists (29-1031)",
          "2060": "Religious workers, all other (21-2099)",
          "6430": "Paperhangers (47-2142)",
          "1340": "Biomedical engineers (17-2031)",
          "2300": "Preschool and kindergarten teachers (25-2010)",
          "2320": "Secondary school teachers (25-2030)",
          "2310": "Elementary and middle school teachers (25-2020)",
          "3520": "Opticians, dispensing (29-2081)",
          "5840": "Insurance claims and policy processing clerks (43-9041)",
          "7900": "Computer control programmers and operators (51-4010)",
          "0050": "Marketing and sales managers (11-2020)",
          "5630": "Weighers, measurers, checkers, and samplers, recordkeeping (43-5111)"
        }
      }
    },
    "AMANYCHK": {
      "label": "AS: Allocation flag for EMANYCHK",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "T36AMT": {
      "label": "GI: Amount of income from paid-up life insurance policy",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "20000",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "APNGUARD": {
      "label": "PE: Allocation flag for EPNGUARD",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "RESTARSN": {
      "label": "GI: Reason for receiving income from estates and trusts",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "8": "No payment received",
          "-1": "Not in Universe",
          "3": "Survivor"
        }
      }
    },
    "AR64": {
      "label": "GI: Allocation flag for ER64",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "AR61": {
      "label": "GI: Allocation flag for ER61",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation"
        }
      }
    },
    "AR62": {
      "label": "GI: Allocation flag for ER62",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed"
        }
      }
    },
    "AWELAC23": {
      "label": "GI: Allocation flag for EWELAC23",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "No imputation",
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)",
          "4": "Imputed from the previous wave",
          "2": "Cold deck"
        }
      }
    },
    "AHICOST": {
      "label": "HI: Allocation flag for EHICOST",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed"
        }
      }
    },
    "RWB2R1": {
      "label": "GI: First reason for applying for WIC the 2nd time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "New child (or other dependent) or pregnancy",
          "3": "Job loss or wages reduced",
          "5": "Became disabled or otherwise unable to work",
          "7": "No change - just heard about the program",
          "2": "Separation, divorced or widowed",
          "6": "No change - just decided it was time",
          "-1": "Not in Universe",
          "8": "Needed to re-certify",
          "9": "Other",
          "4": "Loss or reduction of other income"
        }
      }
    },
    "RWB2R2": {
      "label": "GI: Second reason for applying for WIC the 2nd time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Job loss or wages reduced",
          "8": "Needed to re-certify",
          "1": "New child (or other dependent) or pregnancy",
          "5": "Became disabled or otherwise unable to work",
          "6": "No change - just decided it was time",
          "7": "No change - just heard about the program",
          "4": "Loss or reduction of other income",
          "9": "Other",
          "-1": "Not in Universe",
          "2": "Separation, divorced or widowed"
        }
      }
    },
    "WPFINWGT": {
      "label": "WW: Person weight",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "is-weight": true,
      "values": {
        "range": [
          {
            "min": "0.0",
            "max": "99999.9999",
            "description": "Final person weight"
          }
        ]
      }
    },
    "AWELAC21": {
      "label": "GI: Allocation flag for EWELAC21",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "0": "No imputation",
          "2": "Cold deck imputation",
          "4": "Imputed from the previous wave"
        }
      }
    },
    "AWELAC22": {
      "label": "GI: Allocation flag for EWELAC22",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "4": "Imputed from the previous wave",
          "0": "No imputation",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "ARENDB2": {
      "label": "BS: Allocation flag for ERENDB2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation(hot deck)",
          "3": "Logical imputation(derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "2": "Cold deck imputation"
        }
      }
    },
    "AEGYAST": {
      "label": "HH: Allocation Flag for EEGYAST",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "ARENDB1": {
      "label": "BS: Allocation flag for ERENDB1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation(hot deck)",
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "3": "Logical imputation(derivation)"
        }
      }
    },
    "A20AMT": {
      "label": "GI: Allocation flag for T20AMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "ESOKLT18": {
      "label": "SF: Number of own children under 18 in related subfamily",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "No children",
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "1",
            "max": "30",
            "description": "Number of children"
          }
        ]
      }
    },
    "AR75": {
      "label": "GI:  Allocation flag for ER75",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "TJACLR2": {
      "label": "AS: Amount of net income from rental property with others",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "-5600",
            "max": "24000",
            "description": "Dollars"
          }
        ]
      }
    },
    "AAST1A": {
      "label": "AS: Allocation flag for EAST1A",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "AAST1C": {
      "label": "AS: Allocation flag for EAST1C",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed"
        }
      }
    },
    "AAST1B": {
      "label": "AS: Allocation flag for EAST1B",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "ALIFIRSN": {
      "label": "GI: Allocation flag for RLIFIRSN",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "RCUOW21B": {
      "label": "PE: Person number of second owner of Gen Assist coverage",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not In Universe"
        },
        "range": [
          {
            "min": "101",
            "max": "1699",
            "description": "Person Number"
          }
        ]
      }
    },
    "RWCMPRSN": {
      "label": "GI: Reason for receipt of workers' compensation",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "8": "No payment",
          "5": "Disability and Suvivor",
          "1": "Disability",
          "3": "Suvivor",
          "-1": "Not in Universe"
        }
      }
    },
    "RCUOW21A": {
      "label": "PE: Person number of first owner of Gen Assist coverage",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not In Universe"
        },
        "range": [
          {
            "min": "101",
            "max": "1699",
            "description": "Person Number"
          }
        ]
      }
    },
    "ADISPREV": {
      "label": "LF: Allocation flag for EDISPREV",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation(derivation)",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "1": "Statistical imputation(hot deck)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "GVARSTR": {
      "label": "SU: Variance Stratum Code",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "1",
            "max": "114",
            "description": "Stratum Code"
          }
        ]
      }
    },
    "EPPFLAG": {
      "label": "LF: Flag denoting imputation of labor force data",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not applicable"
        }
      }
    },
    "TSOWNADV": {
      "label": "AS: Amount of dividend credited solely held margin accnt",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "4000",
            "description": "Dollars"
          }
        ]
      }
    },
    "ER60G": {
      "label": "GI: Receipt of transportation assistance-gas vouchers (ISS Code 60G)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "2": "No",
          "1": "Yes"
        }
      }
    },
    "T14AMT": {
      "label": "GI: Amount of employer disability payments (ISS Code 14)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "99999",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "ATYPMOM": {
      "label": "PE: Allocation flag for ETYPMOM",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation"
        }
      }
    },
    "TFSSI": {
      "label": "FA: Total Family Supplemental Security Income Recode",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "0",
            "max": "150000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "ER60T": {
      "label": "GI: Receipt of transportation assistance-tokens (ISS Code 60T)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "EMAX": {
      "label": "LF: Number of weeks in the reference period",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "17",
            "max": "18",
            "description": "Number of weeks in the reference period"
          }
        ]
      }
    },
    "EBORNUS": {
      "label": "PE: Respondent was born in the U.S.",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "AFCSRSN": {
      "label": "GI: Allocation flag for RFCSRSN",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "TBMSUM2": {
      "label": "BS: Income received this month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "66666",
            "description": "Dollars"
          }
        ]
      }
    },
    "EVAQUES": {
      "label": "AF: Veteran's annual income questionnaire",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "TBMSUM1": {
      "label": "BS: Income received this month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "66666",
            "description": "Dollars"
          }
        ]
      }
    },
    "ARSEND1": {
      "label": "JB: Allocation flag for ERSEND1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "3": "Logical imputation(derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation(hot deck)",
          "0": "Not imputed"
        }
      }
    },
    "ARSEND2": {
      "label": "JB: Allocation flag for ERSEND2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "1": "Statistical imputation(hot deck)",
          "3": "Logical imputation(derivation)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "T38AMT": {
      "label": "GI: Amt. from other retirement, disability or survivor",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "16000",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "ESLRYB2": {
      "label": "BS: Salary draw from business",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not in Universe",
          "2": "No"
        }
      }
    },
    "ESLRYB1": {
      "label": "BS: Salary draw from business",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "TFIPSST": {
      "label": "HH: FIPS State Code",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "47": "Tennessee",
          "49": "Utah",
          "54": "West Virginia",
          "56": "Wyoming",
          "17": "Illinois",
          "18": "Indiana",
          "29": "Missouri",
          "41": "Oregon",
          "51": "Virginia",
          "25": "Massachusetts",
          "36": "New York",
          "40": "Oklahoma",
          "02": "Alaska",
          "09": "Connecticut",
          "10": "Delaware",
          "55": "Wisconsin",
          "19": "Iowa",
          "27": "Minnesota",
          "30": "Montana",
          "04": "Arizona",
          "05": "Arkansas",
          "11": "DC",
          "21": "Kentucky",
          "26": "Michigan",
          "28": "Mississippi",
          "31": "Nebraska",
          "33": "New Hampshire",
          "35": "New Mexico",
          "46": "South Dakota",
          "48": "Texas",
          "08": "Colorado",
          "16": "Idaho",
          "22": "Louisiana",
          "39": "Ohio",
          "45": "South Carolina",
          "50": "Vermont",
          "20": "Kansas",
          "23": "Maine",
          "01": "Alabama",
          "06": "California",
          "53": "Washington",
          "13": "Georgia",
          "15": "Hawaii",
          "24": "Maryland",
          "34": "New Jersey",
          "37": "North Carolina",
          "44": "Rhode Island",
          "12": "Florida",
          "32": "Nevada",
          "38": "North Dakota",
          "42": "Pennsylvania"
        }
      }
    },
    "A42AMT": {
      "label": "GI: Allocation flag for T42AMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed"
        }
      }
    },
    "TMIJNT": {
      "label": "AS: Amount of interest paid on mortgage owned with spouse",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "6400",
            "description": "Dollars"
          }
        ]
      }
    },
    "AEMPSIZ2": {
      "label": "JB: Allocation flag for EEMPSIZ2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation(derivation)",
          "1": "Statistical imputation(hot deck)"
        }
      }
    },
    "AEMPSIZ1": {
      "label": "JB: Allocation flag for EEMPSIZ1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "1": "Statistical imputation(hot deck)",
          "3": "Logical imputation(derivation)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "EMDOAST": {
      "label": "AS: Solely owned money market deposit account",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "2": "No",
          "1": "Yes"
        }
      }
    },
    "EPOPSTAT": {
      "label": "PE: Population status based on age in 4th reference month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Child (Under 15 years of age)",
          "1": "Adult (15 years of age or older)"
        }
      }
    },
    "ASOTHDIV": {
      "label": "AS: Allocation flag for ESOTHDIV",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "2": "Cold deck imputation"
        }
      }
    },
    "THEARN": {
      "label": "HH: Total household earned income",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "-1500000",
            "max": "1500000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "ARNDUP1": {
      "label": "AS: Allocation flag for TRNDUP1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "6": "Derived from range based values"
        }
      }
    },
    "EHIOTHER": {
      "label": "HI: Health insurance coverage of nonhousehold members",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "EVAYN": {
      "label": "AF: Receipt of payments from the VA this wave",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "2": "No",
          "1": "Yes"
        }
      }
    },
    "AHOTLUNC": {
      "label": "HH: Allocation flag for EHOTLUNC",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "EBNO1": {
      "label": "BS: Across-wave business index/number",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "1",
            "max": "99",
            "description": "Business ID"
          }
        ]
      }
    },
    "RSID": {
      "label": "FA: Related or unrelated subfamily ID Number for this month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "1",
            "max": "120",
            "description": "Family ID number"
          }
        ]
      }
    },
    "AHICVMTH": {
      "label": "HI: Allocation flag for EHICVMTH",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "No imputation",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck"
        }
      }
    },
    "ARNDUP2": {
      "label": "AS: Allocation flag for TRNDUP2.",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "6": "Derived from range based values",
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "EBNO2": {
      "label": "BS: Across-wave business index/number",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "1",
            "max": "99",
            "description": "Business ID"
          }
        ]
      }
    },
    "AHIEVRCV": {
      "label": "HI: Allocation flag for EHIEVRCV",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "0": "No imputation",
          "2": "Cold deck"
        }
      }
    },
    "ESVJT": {
      "label": "AS: Ownership of jointly held savings account",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "1": "Yes",
          "-1": "Not in Universe"
        }
      }
    },
    "ESFKIND": {
      "label": "SF: Kind of family (or pseudo-family)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Male Headed",
          "3": "Female Headed",
          "-1": "Not in Universe",
          "1": "Headed by Husband/Wife"
        }
      }
    },
    "T04AMT": {
      "label": "GI: Amount of State SSI (ISS Code 4)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "99999",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "THNONCSH": {
      "label": "HH: Total Household Noncash Income Recode",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "0",
            "max": "150000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "RRRSN": {
      "label": "GI: Reason for receipt of Railroad Retirement pay",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Disability and retirement",
          "5": "Disability and Survivor",
          "-1": "Not in Universe",
          "6": "Retirement and survivor",
          "7": "Disability, retirement, and survivor",
          "2": "Retirement",
          "1": "Disability",
          "3": "Survivor",
          "8": "No payment received"
        }
      }
    },
    "AFRERDLN": {
      "label": "HH: Allocation flag for EFRERDLN",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "2": "Cold deck imputation"
        }
      }
    },
    "ALMPTYP3": {
      "label": "GI: Allocation flag for ALMPTYP3",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "AORIGIN": {
      "label": "PE: Allocation flag for EORIGIN",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed",
          "2": "Cold deck imputation"
        }
      }
    },
    "ALMPTYP1": {
      "label": "GI: Allocation flag for ELMPTYP1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "ALMPTYP2": {
      "label": "GI: Allocation flag for ELMPTYP2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "ER02": {
      "label": "GI: Receipt of Railroad Retirement (ISS Code 2)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "ER04": {
      "label": "GI: Receipt of State SSI (ISS Code 4)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "ER05": {
      "label": "GI: Receipt of State Unemployment Comp. (ISS Code 5)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "ER06": {
      "label": "GI: Receipt of Supplemental Unemployment Benefits",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "RFS1": {
      "label": "GI: Reason for stopping food stamps the first time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "7": "Other, specify",
          "-1": "Not in Universe",
          "1": "Became ineligible because of increased income",
          "5": "Eligibility ran out because of time limits",
          "6": "The money is not worth it",
          "2": "Became ineligible because of family changes",
          "4": "Became ineligible because program requirements were not met",
          "3": "Still eligible but could not/chose not to collect"
        }
      }
    },
    "RFS2": {
      "label": "GI: Reason for stopping food stamps the second time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Became ineligible because of family changes",
          "4": "Became ineligible because program requirements were not met",
          "5": "Eligibility ran out because of time limits",
          "6": "The money is not worth it",
          "7": "Other, specify",
          "-1": "Not in Universe",
          "1": "Became ineligible because of increased income",
          "3": "Still eligible but could not/chose not to collect"
        }
      }
    },
    "ETYPMOM": {
      "label": "PE: Type of child to mother",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Biological child",
          "2": "Stepchild",
          "3": "Adopted child",
          "-1": "Not in Universe"
        }
      }
    },
    "ER08": {
      "label": "GI: Receipt of Veterans' Compensation (ISS Code 8)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "SPANEL": {
      "label": "SU: Sample Code - Indicates Panel Year",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2008": "Panel Year"
        }
      }
    },
    "A30AMT": {
      "label": "GI: Allocation flag for T30AMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "ALANG1": {
      "label": "HH: Allocation flag for TLANG",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "AGED": {
      "label": "ED: Allocation flag for RGED",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation"
        }
      }
    },
    "EENLEVEL": {
      "label": "ED: Level or grade enrolled",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "4": "College year 2 (sophomore)",
          "1": "Elementary grades 1-8",
          "2": "High school grades 9-12",
          "8": "Second year or higher in graduate or professional school",
          "9": "Vocational, technical, or business school beyond high school level",
          "7": "First year graduate or professional school",
          "3": "College year 1 (freshman)",
          "10": "Enrolled in college, but not working towards degree",
          "5": "College year 3 (junior)",
          "6": "College year 4 (senior)"
        }
      }
    },
    "AMOWNDIV": {
      "label": "AS: Allocation flag for TMOWNDIV",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "6": "Derived from range based values",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "T61AMT": {
      "label": "GI: Amount of food assistance",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "8000",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "RAB2R1": {
      "label": "GI: 1st reason applied for Pub Asst/AFDC/TANF 2nd time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "New child (or other dependent) or pregnancy",
          "9": "Other",
          "3": "Job loss or wages reduced",
          "-1": "Not in Universe",
          "5": "Became disabled or otherwise unable to work",
          "7": "No change - just heard about the program",
          "6": "No change - just decided it was time",
          "2": "Separation, divorce or widowed",
          "8": "Need to re-certify",
          "4": "Loss or reduction of other income"
        }
      }
    },
    "RAB2R2": {
      "label": "GI: 2nd reason applied for Pub Asst/AFDC/TANF 2nd time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Loss or reduction of other income",
          "9": "Other",
          "-1": "Not in Universe",
          "1": "New child (or other dependent) or pregnancy",
          "5": "Became disabled or otherwise unable to work",
          "6": "No change - just decided it was time",
          "2": "Separation, divorce or widowed",
          "7": "No change - just heard about the program",
          "8": "Need to re-certify",
          "3": "Job loss or wages reduced"
        }
      }
    },
    "WFFINWGT": {
      "label": "WW: 'WPFINWGT' for head of family",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "is-weight": true,
      "values": {
        "range": [
          {
            "min": "0.0",
            "max": "99999.9999",
            "description": "Person weight for family reference person"
          }
        ]
      }
    },
    "EPUBHSC3": {
      "label": "GI: Source of ...'s housing assistance--community/religious charity",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "TPRFTB1": {
      "label": "BS: Net profit or loss",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "-70000",
            "max": "60000",
            "description": "Dollars"
          }
        ]
      }
    },
    "EPUBHSC2": {
      "label": "GI: Source of ...'s housing assistance--housing authority",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "1": "Yes",
          "-1": "Not in Universe"
        }
      }
    },
    "RWS2": {
      "label": "GI: Reason for stopping WIC the second time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Became ineligible because of increased income",
          "5": "Benefits are not worth it",
          "6": "Other, specify",
          "3": "Still eligible but could not/chose not to collect",
          "4": "Couldn't get to the WIC clinic",
          "2": "Became ineligible because of family changes"
        }
      }
    },
    "EPUBHSC1": {
      "label": "GI: Source of ...'s housing assistance--government agency",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "AMTHRNT": {
      "label": "HH: Allocation flag for TMTHRNT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "RWS1": {
      "label": "GI: Reason for stopping WIC the first time",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Became ineligible because of family changes",
          "3": "Still eligible but could not/chose not to collect",
          "-1": "Not in Universe",
          "1": "Became ineligible because of increased income",
          "4": "Couldn't get to the WIC clinic",
          "5": "Benefits are not worth it",
          "6": "Other, specify"
        }
      }
    },
    "REMPDRSN": {
      "label": "GI: Reason for receipt of employer disability payments",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "8": "No payment",
          "1": "Disability"
        }
      }
    },
    "RFID2": {
      "label": "FA: Family ID excluding related subfamily members",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "1",
            "max": "120",
            "description": "Family ID number"
          }
        ]
      }
    },
    "AWKSAB": {
      "label": "LF: Allocation flag for RMWKSAB",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "1": "Statistical imputation(hot deck)",
          "3": "Logical imputation(derivation)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "TPRFTB2": {
      "label": "BS: Net profit or loss",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "-70000",
            "max": "60000",
            "description": "Dollars"
          }
        ]
      }
    },
    "EPUBHSC4": {
      "label": "GI: Source of ...'s housing assistance--community/religious charity",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "2": "No",
          "1": "Yes"
        }
      }
    },
    "ASOWNDIV": {
      "label": "AS: Allocation flag for TSOWNDIV",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation",
          "6": "Derived from range based values",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "A64AMT": {
      "label": "GI: Allocation flag for T64AMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed"
        }
      }
    },
    "ABRKFST": {
      "label": "HH: Allocation flag for EBRKFST",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed",
          "2": "Cold deck imputation"
        }
      }
    },
    "RDESGPNT": {
      "label": "PE: Designated parent or guardian flag",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "1": "Yes",
          "-1": "Not in Universe"
        }
      }
    },
    "AEDFUND": {
      "label": "ED: Allocation flag for EEDFUND",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "0": "Not imputed"
        }
      }
    },
    "TSTOTINC": {
      "label": "SF: Total related subfamily income for this month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "-1500000",
            "max": "1500000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "EPSSTHRU": {
      "label": "GI: Receipt of child support as bonus/passthru",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "AMILRSN": {
      "label": "GI: Allocation flag for RMILRSN",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "TSBDATE1": {
      "label": "BS: Date operation of business began",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "19380101",
            "max": "20121231",
            "description": "Date"
          }
        ]
      }
    },
    "TSBDATE2": {
      "label": "BS: Date operation of business began",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "19380101",
            "max": "20121231",
            "description": "Date"
          }
        ]
      }
    },
    "TFAFDC": {
      "label": "FA: Total Family public assistance payments",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "0",
            "max": "150000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "THPNDIST": {
      "label": "HH: Distributions from pension plans",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "0",
            "max": "1500000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "ER20": {
      "label": "GI: Receipt of public assistance payments (ISS Code 20)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not in Universe",
          "2": "No"
        }
      }
    },
    "ER21": {
      "label": "GI: Receipt of General Assistance or General Relief",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "1": "Yes",
          "-1": "Not in Universe"
        }
      }
    },
    "ER23": {
      "label": "GI: Receipt of Foster Child Care Payments (ISS Code 23)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "ER24": {
      "label": "GI: Receipt of Other Welfare (ISS Code 24)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "ER25": {
      "label": "GI: Receipt of WIC (ISS Code 25)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not in Universe",
          "2": "No"
        }
      }
    },
    "ER27": {
      "label": "GI: Receipt of food stamps (ISS Code 27)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "ACDJTINT": {
      "label": "AS: Allocation flag for TCDJTINT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "6": "Derived from range based values",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "ER28": {
      "label": "GI: Receipt of Child Support Payments (ISS Code 28)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "ER29": {
      "label": "GI: Receipt of Alimony Payments (ISS Code 29)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "1": "Yes",
          "-1": "Not in Universe"
        }
      }
    },
    "EAST1A": {
      "label": "AS: U.S. government savings bonds owned",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "EAST1C": {
      "label": "AS: 401k or thrift plan owned",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not in Universe",
          "2": "No"
        }
      }
    },
    "TCDOINT": {
      "label": "AS: Amount of monthly interest from solely owned CDs",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "2800",
            "description": "Dollars"
          }
        ]
      }
    },
    "EAST1B": {
      "label": "AS: IRA or Keogh account owned",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "1": "Yes",
          "-1": "Not in Universe"
        }
      }
    },
    "EHIOTHR": {
      "label": "HI: Coverage of other person(s) outside the household",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes, covered",
          "2": "No, not covered"
        }
      }
    },
    "AHPRTB2": {
      "label": "BS: Allocation flag for EHPRTB2",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation(hot deck)",
          "3": "Logical imputation(derivation)",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "AHPRTB1": {
      "label": "BS: Allocation flag for EHPRTB1",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "3": "Logical imputation(derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation(hot deck)",
          "0": "Not imputed"
        }
      }
    },
    "A29AMT": {
      "label": "GI: Allocation flag for T29AMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "RENRLMA": {
      "label": "ED: Full period enrollment status",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "A52AMT": {
      "label": "GI: Allocation flag for T52AMT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "EVOCAT": {
      "label": "ED: Attended vocational, technical, trade, or business school",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not in Universe",
          "2": "No"
        }
      }
    },
    "RFNKIDS": {
      "label": "FA: Total number of children under 18 in family",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "range": [
          {
            "min": "0",
            "max": "30",
            "description": "Number of children"
          }
        ]
      }
    },
    "ER10": {
      "label": "GI: Receipt of Workers Compensation (ISS Code 10)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "ER13": {
      "label": "GI: Receipt of own sickness, accident insurance payments",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "2": "No",
          "1": "Yes"
        }
      }
    },
    "ER14": {
      "label": "GI: Receipt of Employer Disability Payments (ISS Code 14)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "1": "Yes",
          "-1": "Not in Universe"
        }
      }
    },
    "ERSEND2": {
      "label": "JB: Main reason stopped working for employer",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "13": "Slack work or business conditions",
          "3": "Childcare problems",
          "4": "Other family/personal obligations",
          "5": "Own illness",
          "6": "Own injury",
          "7": "School/Training",
          "10": "Employer sold business",
          "-1": "Not in Universe",
          "8": "Discharged/fired",
          "12": "Quit to take another job",
          "2": "Retirement or old age",
          "9": "Employer bankrupt",
          "1": "On Layoff",
          "11": "Job was temporary and ended",
          "14": "Unsatisfactory work arrangements (hours, pay, etc)",
          "15": "Quit for some other reason"
        }
      }
    },
    "ERSEND1": {
      "label": "JB: Main reason stopped working for employer",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "7": "School/Training",
          "1": "On Layoff",
          "5": "Own illness",
          "9": "Employer bankrupt",
          "13": "Slack work or business conditions",
          "4": "Other family/personal obligations",
          "8": "Discharged/fired",
          "12": "Quit to take another job",
          "15": "Quit for some other reason",
          "11": "Job was temporary and ended",
          "14": "Unsatisfactory work arrangements (hours, pay, etc)",
          "-1": "Not in Universe",
          "2": "Retirement or old age",
          "3": "Childcare problems",
          "6": "Own injury",
          "10": "Employer sold business"
        }
      }
    },
    "ER15": {
      "label": "GI: Receipt of Severance Pay (ISS Code 15)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "ACDOAST": {
      "label": "AS: Allocation flag for ECDOAST.",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed",
          "2": "Cold deck imputation"
        }
      }
    },
    "EEDFUND": {
      "label": "ED: Educational assistance",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not in Universe",
          "2": "No"
        }
      }
    },
    "RCHAMPM": {
      "label": "HI: Military related health care coverage in this month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "2": "No",
          "1": "Yes, covered"
        }
      }
    },
    "ER42": {
      "label": "GI: Receipt of draw from IRA/KEOGH/401k or Thrift Plan",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "EWICYN": {
      "label": "GI: Recipiency of WIC (ISS Code 25)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "TSSSI": {
      "label": "SF: Total related subfamily Supplemental Security Income",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "150000",
            "description": "Dollar amount"
          }
        ]
      }
    },
    "RWKSPERM": {
      "label": "LF: Number of weeks in this month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "5": "Five weeks",
          "-1": "Not in Universe",
          "4": "Four weeks"
        }
      }
    },
    "AJACLR": {
      "label": "AS: Allocation flag for TJACLR",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "6": "Derived from range based values",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "ECDMTH": {
      "label": "HI: Medicaid coverage in this month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes, covered",
          "2": "No, not covered",
          "-1": "Not in Universe"
        }
      }
    },
    "AFSYN": {
      "label": "GI: Allocation flag for EFSYN",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "RCUTYP08": {
      "label": "PE: Veteran payment coverage flag",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes, covered",
          "2": "No, not covered"
        }
      }
    },
    "ARRRSN": {
      "label": "GI: Allocation flag RRRSN",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)"
        }
      }
    },
    "APUBHSC": {
      "label": "GI: Allocation flag for EPUBHSC1-EPUBHSC4",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "APUBHSE": {
      "label": "HH: Allocation flag for EPUBHSE",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "No imputation",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "AWCMPRSN": {
      "label": "GI: Allocation flag for RWCMPRSN",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "2": "Cold deck imputation",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "ELKWRK": {
      "label": "LF: Spent time looking for work",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not in Universe",
          "2": "No"
        }
      }
    },
    "RCUTYP04": {
      "label": "PE: State SSI coverage flag",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes, covered",
          "2": "No, not covered"
        }
      }
    },
    "RCUTYP03": {
      "label": "PE: Federal SSI coverage flag",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes, covered",
          "2": "No, not covered"
        }
      }
    },
    "ASANYCHK": {
      "label": "AS: Allocation flag for ESANYCHK",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "0": "Not imputed"
        }
      }
    },
    "ACKJTINT": {
      "label": "AS: Allocation flag for TCKJTINT.",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "6": "Derived from range based values",
          "4": "Statistical or logical imputation using previous wave data",
          "2": "Cold deck imputation"
        }
      }
    },
    "RCUTYP01": {
      "label": "PE: Social Security coverage flag (ISS 1)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes, covered",
          "2": "No, not covered"
        }
      }
    },
    "EDISABL": {
      "label": "LF: Had a work-limiting physical or mental condition",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not in Universe",
          "2": "No"
        }
      }
    },
    "T51AMT": {
      "label": "GI: Amount of money from relatives or friends",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "20000",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "AMIOWN": {
      "label": "AS: Allocation flag for TMIOWN",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation (derivation)",
          "2": "Cold deck imputation",
          "6": "Derived from range based values",
          "0": "Not imputed",
          "1": "Statistical imputation (hot deck)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "RLNGISOL": {
      "label": "HH: Linguistic isolation",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "In linguistically isolated household",
          "2": "Not in linguistically isolated household",
          "-1": "Not in Universe"
        }
      }
    },
    "AMRTJNT": {
      "label": "AS: Allocation flag for EMRTJNT",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Statistical imputation (hot deck)",
          "0": "Not imputed",
          "2": "Cold deck imputation",
          "4": "Statistical or logical imputation using previous wave data",
          "3": "Logical imputation (derivation)"
        }
      }
    },
    "RMWKLKG": {
      "label": "LF: Number of weeks looking for work/on layoff in month",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "1 week",
          "2": "2 weeks",
          "0": "0 weeks (that is, did not look for work, and was not on layoff) or not applicable",
          "3": "3 weeks",
          "5": "5 weeks (if applicable)",
          "-1": "Not in Universe",
          "4": "4 weeks"
        }
      }
    },
    "AAWOP": {
      "label": "LF: Allocation flag for EAWOP",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "3": "Logical imputation(derivation)",
          "1": "Statistical imputation(hot deck)",
          "2": "Cold deck imputation",
          "0": "Not imputed",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "ER30": {
      "label": "GI: Receipt of pension from a company or union",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "ER31": {
      "label": "GI: Receipt of Federal Civil Service Pension",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "ER32": {
      "label": "GI: Receipt of U.S. Military Retirement Pay (ISS Code 32)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "ER34": {
      "label": "GI: Receipt of State Government Pension (ISS Code 34)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "1": "Yes",
          "-1": "Not in Universe"
        }
      }
    },
    "ER35": {
      "label": "GI: Receipt of Local Government Pension (ISS Code 35)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "2": "No",
          "1": "Yes"
        }
      }
    },
    "ER36": {
      "label": "GI: Receipt of paid-up life insurance annuity",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "AWRSECT8": {
      "label": "HH: Allocation flag for EWRSECT8",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "No imputation",
          "2": "Cold deck imputation",
          "1": "Statistical imputation (hot deck)",
          "3": "Logical imputation (derivation)",
          "4": "Statistical or logical imputation using previous wave data"
        }
      }
    },
    "ER38": {
      "label": "GI: Receipt of other retirement, disability or survivors",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "2": "No",
          "-1": "Not in Universe"
        }
      }
    },
    "ER39": {
      "label": "GI: Receipt of Pension/Retirement Lump Sums (ISS Code 39)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not in Universe",
          "2": "No"
        }
      }
    },
    "EPATANF4": {
      "label": "GI: Whether ... received TANF",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "EPATANF3": {
      "label": "GI: Whether ... received TANF",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "EPATANF6": {
      "label": "GI: Whether ... received other assistance",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "EPATANF5": {
      "label": "GI: Whether ... received AFDC assistance",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "1": "Yes",
          "-1": "Not in Universe",
          "2": "No"
        }
      }
    },
    "EPATANF2": {
      "label": "GI: Whether ... received TANF",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "2": "No",
          "-1": "Not in Universe",
          "1": "Yes"
        }
      }
    },
    "EPATANF1": {
      "label": "GI: Whether ... received TANF",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe",
          "1": "Yes",
          "2": "No"
        }
      }
    },
    "T28AMT": {
      "label": "GI: Amount of child support payments (ISS Code 28)",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "0": "None or not in universe"
        },
        "range": [
          {
            "min": "1",
            "max": "5600",
            "description": "Amount in dollars"
          }
        ]
      }
    },
    "TEJDATE1": {
      "label": "JB: Ending date of job",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "20080501",
            "max": "20121231",
            "description": "Date"
          }
        ]
      }
    },
    "TEJDATE2": {
      "label": "JB: Ending date of job",
      "predicateType": "int",
      "group": "N/A",
      "limit": 0,
      "values": {
        "item": {
          "-1": "Not in Universe"
        },
        "range": [
          {
            "min": "20080501",
            "max": "20121231",
            "description": "Date"
          }
        ]
      }
    }
  }
}